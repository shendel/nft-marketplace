{
	"id": "eb7f884de93c79610ba9900e42f032cf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor () {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n\r\ncontract Marketplace is Ownable, Pausable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    event Buy(address owner, address buyer, address collection, uint256 tokenId,  uint256 price);\r\n    event BuyWithERC20(address owner, address buyer, address collection, uint256 tokenId, address erc20, uint256 price);\r\n    event PutUpForSale(address owner, address collection, uint256 tokenId, uint256 price);\r\n    event PutUpForSaleWithERC20(address owner, address collection, uint256 tokenId, address erc20, uint256 price);\r\n    event WithdrawFromSale(address owner, address collection, uint256 tokenId);\r\n    event WithdrawWei(address to, uint256 amount);\r\n    event WithdrawERC20(address to, address erc20, uint256 amount);\r\n    \r\n    struct SelledNFT {\r\n        address collection; // NFT коллекция\r\n        uint256 tokenId;    // ID токена\r\n        address seller;     // Продавец\r\n        uint256 price;      // Цена (wei)\r\n        address erc20;      // Если указано - продается за токены\r\n        uint256 utx;        // Время истечения лота (0 - бессрочный)\r\n    }\r\n\r\n    uint constant public version = 1;\r\n\r\n    uint private _tradeFee = 0;\r\n\r\n    function isMarketPlaceContract() public pure returns (bool) {\r\n        return true;\r\n    }\r\n\r\n    IERC721[] private _marketCollections;\r\n    mapping(address => bool) private _allowedCollections;\r\n\r\n    address[] private _allowedERC20;\r\n\r\n    SelledNFT[] private _marketTokens;\r\n\r\n    mapping(address => uint256) private _collectionTokensCount;\r\n\r\n    mapping(address => uint256) private _userTokensCount;\r\n\r\n    address private _feeReceiver;\r\n\r\n    function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {\r\n        for(uint256 i = 0; i < _marketTokens.length; i++) {\r\n            if (\r\n                (_marketTokens[i].collection == collection)\r\n                &&\r\n                (_marketTokens[i].tokenId == tokenId)\r\n            ) {\r\n                return _marketTokens[i];\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function _marketTokensAdd(SelledNFT memory lotInfo) internal {\r\n        _marketTokens.push(lotInfo);\r\n        _collectionTokensCount[lotInfo.collection]++;\r\n        _userTokensCount[lotInfo.seller]++;\r\n    }\r\n    function _marketTokensDel(address collection, uint256 tokenId) internal {\r\n        if (\r\n            (_marketTokens[_marketTokens.length - 1].collection == collection)\r\n            &&\r\n            (_marketTokens[_marketTokens.length - 1].tokenId == tokenId)\r\n        ) {\r\n            _userTokensCount[_marketTokens[_marketTokens.length -1].seller]--;\r\n            _collectionTokensCount[collection]--;\r\n            _marketTokens.pop();\r\n        }\r\n        for(uint256 i = 0; i < _marketTokens.length; i++) {\r\n            if (\r\n                (_marketTokens[i].collection == collection)\r\n                &&\r\n                (_marketTokens[i].tokenId == tokenId)\r\n            ) {\r\n                _userTokensCount[_marketTokens[i].seller]--;\r\n                _collectionTokensCount[collection]--;\r\n                _marketTokens[i] = _marketTokens[_marketTokens.length -1];\r\n                _marketTokens.pop();\r\n                \r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    constructor(\r\n        address[] memory __collections,\r\n        address __feeReceiver,\r\n        uint __tradeFee,\r\n        address[] memory __allowedERC20\r\n    ) {\r\n        for(uint i = 0; i < __collections.length; i++) {\r\n            _allowedCollections[__collections[i]] = true;\r\n            _marketCollections.push(IERC721(__collections[i]));\r\n        }\r\n        _feeReceiver = (__feeReceiver == address(0)) ? msg.sender : __feeReceiver;\r\n        _tradeFee = __tradeFee;\r\n        _allowedERC20 = __allowedERC20;\r\n    }\r\n\r\n    function getFeeReceiver() public view returns(address) {\r\n        return _feeReceiver;\r\n    }\r\n    function setFeeReceiver(address _newFeeReceiver) public onlyOwner {\r\n        _feeReceiver = _newFeeReceiver;\r\n    }\r\n\r\n    function getAllowedCollections() public view returns(IERC721[] memory) {\r\n        return _marketCollections;\r\n    }\r\n    function setAllowedCollections(address[] memory _newCollections) public onlyOwner {\r\n        for(uint256 i = 0; i < _marketCollections.length; i++) {\r\n            _allowedCollections[address(_marketCollections[i])] = false;\r\n        }\r\n        delete _marketCollections;\r\n        for(uint256 i = 0; i < _newCollections.length; i++) {\r\n            _marketCollections.push(IERC721(_newCollections[i]));\r\n        }\r\n    }\r\n\r\n\r\n    function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {\r\n        _allowedERC20 = newAllowedERC20;\r\n    }\r\n    \r\n    function getAllowedERC20() public view returns(address[] memory) {\r\n        return _allowedERC20;\r\n    }\r\n\r\n    function isAllowedERC20(address erc20) public view returns (bool) {\r\n        for(uint i=0; i<_allowedERC20.length;i++) {\r\n            if (erc20 == _allowedERC20[i]) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function withdrawWei() public onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        payable(msg.sender).transfer(amount);\r\n        emit WithdrawWei(msg.sender, amount);\r\n    }\r\n\r\n    function withdrawERC20(address erc20) public onlyOwner {\r\n        IERC20 token = IERC20(erc20);\r\n        uint256 balance = token.balanceOf(address(this));\r\n        token.transfer(owner(), balance);\r\n        emit WithdrawERC20(msg.sender, erc20, balance);\r\n    }\r\n\r\n    function getTradeFee() public view returns (uint) {\r\n        return _tradeFee;\r\n    }\r\n    function setTradeFee(uint _newTradeFee) public onlyOwner {\r\n        _tradeFee = _newTradeFee;\r\n    }\r\n\r\n    function getMyTokensAtSale() public view returns(SelledNFT[] memory) {\r\n        return getUserTokensAtSale(msg.sender);\r\n    }\r\n    function getUserTokensAtSale(address seller)\r\n        public view\r\n        returns (SelledNFT[] memory ret)\r\n    {\r\n        if (_userTokensCount[seller] > 0) {\r\n            ret = new SelledNFT[](_userTokensCount[seller]);\r\n            uint256 counter = 0;\r\n            for (uint256 i = 0; i < _marketTokens.length; i++) {\r\n                if (_marketTokens[i].seller == seller) {\r\n                    ret[counter] = _marketTokens[i];\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function getTokensAtSaleCount() public view returns (uint256) {\r\n        return _marketTokens.length;\r\n    }\r\n    function getTokensAtSale() public view returns (SelledNFT[] memory) {\r\n        return _marketTokens;\r\n    }\r\n    function getCollectionTokensAtSale(address collection) public view returns (SelledNFT[] memory ret) {\r\n        if (_collectionTokensCount[collection] > 0) {\r\n            ret = new SelledNFT[](_collectionTokensCount[collection]);\r\n            uint256 counter = 0;\r\n            for (uint256 i = 0; i < _marketTokens.length; i++) {\r\n                if (_marketTokens[i].collection == collection) {\r\n                    ret[counter] = _marketTokens[i];\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function buyNFTbyERC20(address collection, uint tokenId)\r\n        public\r\n        whenNotPaused\r\n    {\r\n        SelledNFT memory lotInfo = marketTokensGet(collection, tokenId);\r\n        require(lotInfo.collection != address(0), \"This NFT is not for sale\");\r\n        require(lotInfo.erc20 != address(0), \"This token selled by Native coin\");\r\n\r\n        IERC20 payToken = IERC20(lotInfo.erc20);\r\n        uint256 buyerBalance = payToken.balanceOf(msg.sender);\r\n        require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\");\r\n        uint256 buyerAllowance = payToken.allowance(msg.sender, address(this));\r\n        require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\");\r\n        \r\n\r\n        uint256 amount = lotInfo.price;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (lotInfo.seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payToken.safeTransferFrom(\r\n            address(msg.sender),\r\n            address(lotInfo.seller),\r\n            amountWithFee\r\n        );\r\n        if (feeAmount > 0) {\r\n            payToken.safeTransferFrom(\r\n                address(msg.sender),\r\n                address(_feeReceiver),\r\n                feeAmount\r\n            );\r\n        }\r\n        IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId);\r\n        _marketTokensDel(collection, tokenId);\r\n\r\n        emit BuyWithERC20(\r\n            lotInfo.seller, \r\n            msg.sender, \r\n            lotInfo.collection,\r\n            lotInfo.tokenId,\r\n            lotInfo.erc20,\r\n            lotInfo.price\r\n        );\r\n    }\r\n\r\n\r\n    function buyNFT(address collection, uint256 tokenId)\r\n        public\r\n        payable\r\n        whenNotPaused\r\n    {\r\n        SelledNFT memory lotInfo = marketTokensGet(collection, tokenId);\r\n        require( lotInfo.collection != address(0), \"This NFT is not for sale\");\r\n        // check - price\r\n        require(msg.value >= lotInfo.price, \"You have not paid enough for this item\");\r\n        // check this is not sell by ERC20\r\n        require(lotInfo.erc20 == address(0), \"This token selled by ERC20\");\r\n        \r\n        uint256 amount = msg.value;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (lotInfo.seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payable(lotInfo.seller).transfer(amountWithFee);\r\n        if (feeAmount > 0) {\r\n            payable(_feeReceiver).transfer(feeAmount);\r\n        }\r\n        \r\n        IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId);\r\n        _marketTokensDel(collection, tokenId);\r\n\r\n        emit Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price);\r\n        \r\n    }\r\n\r\n    function sellNFT(\r\n        address collection,\r\n        uint256 _tokenId,\r\n        uint256 price,\r\n        address _erc20\r\n    )\r\n        public\r\n        whenNotPaused\r\n    {\r\n        // Check collection allowed\r\n        require(\r\n            _allowedCollections[collection],\r\n            \"Not allowed NFT collection\"\r\n        );\r\n        // Check owner\r\n        require(\r\n            IERC721(collection).ownerOf(_tokenId) == msg.sender,\r\n            \"You don't own this token!\"\r\n        );\r\n        require(price > 0, \"Price must be greater than zero\");\r\n        if (_erc20 != address(0)) {\r\n            // Sell with ERC20\r\n            require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\");\r\n        }\r\n\r\n        SelledNFT memory newLot = SelledNFT(\r\n            collection,\r\n            _tokenId,\r\n            msg.sender,\r\n            price,\r\n            _erc20,\r\n            block.timestamp\r\n        );\r\n        IERC721(collection).transferFrom(msg.sender, address(this), _tokenId);\r\n        _marketTokensAdd(newLot);\r\n\r\n        if (_erc20 == address(0)) {\r\n            emit PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price);\r\n        } else {\r\n            emit PutUpForSale(msg.sender, collection, _tokenId, price);\r\n        }\r\n    }\r\n\r\n    function deSellNFT(address collection, uint256 tokenId) public {\r\n        SelledNFT memory token = marketTokensGet(collection, tokenId);\r\n        require( token.collection != address(0), \"Token not founded at marketplace\");\r\n        if(msg.sender != owner()) {\r\n            require(msg.sender == token.seller, \"This is not your NFT\");\r\n        }\r\n        IERC721(token.collection).transferFrom(address(this), token.seller, token.tokenId);\r\n        _marketTokensDel(token.collection,token.tokenId);\r\n\r\n        emit WithdrawFromSale(token.seller, token.collection, token.tokenId);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"source/Marketplace.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220249032c914cc21453f55c913319f04128a971ce762d34c9edff67552e232e37a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220249032c914cc21453f55c913319f04128a971ce762d34c9edff67552e232e37a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 SWAP1 ORIGIN 0xC9 EQ 0xCC 0x21 GASLIMIT EXTCODEHASH SSTORE 0xC9 SGT BALANCE SWAP16 DIV SLT DUP11 SWAP8 SHR 0xE7 PUSH3 0xD34C9E 0xDF 0xF6 PUSH22 0x52E232E37A64736F6C63430008120033000000000000 ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;38807:9405:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220249032c914cc21453f55c913319f04128a971ce762d34c9edff67552e232e37a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 SWAP1 ORIGIN 0xC9 EQ 0xCC 0x21 GASLIMIT EXTCODEHASH SSTORE 0xC9 SGT BALANCE SWAP16 DIV SLT DUP11 SWAP8 SHR 0xE7 PUSH3 0xD34C9E 0xDF 0xF6 PUSH22 0x52E232E37A64736F6C63430008120033000000000000 ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220249032c914cc21453f55c913319f04128a971ce762d34c9edff67552e232e37a64736f6c63430008120033",
									".code": [
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "__collections",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "__feeReceiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "__tradeFee",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "__allowedERC20",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "BuyWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSaleWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "WithdrawFromSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawWei",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFTbyERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "deSellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllowedCollections",
							"outputs": [
								{
									"internalType": "contract IERC721[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllowedERC20",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "getCollectionTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokensAtSaleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTradeFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								}
							],
							"name": "getUserTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "isAllowedERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isMarketPlaceContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "marketTokensGet",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT",
									"name": "ret",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20",
									"type": "address"
								}
							],
							"name": "sellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_newCollections",
									"type": "address[]"
								}
							],
							"name": "setAllowedCollections",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "newAllowedERC20",
									"type": "address[]"
								}
							],
							"name": "setAllowedERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newFeeReceiver",
									"type": "address"
								}
							],
							"name": "setFeeReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTradeFee",
									"type": "uint256"
								}
							],
							"name": "setTradeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawWei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":50386:62465  contract Marketplace is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"source/Marketplace.sol\":51629:51630  0 */\n  0x00\n    /* \"source/Marketplace.sol\":51604:51630  uint private _tradeFee = 0 */\n  0x01\n  sstore\n    /* \"source/Marketplace.sol\":53744:54263  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"source/Marketplace.sol\":736:746  msg.sender */\n  caller\n    /* \"source/Marketplace.sol\":1740:1758  _transferOwnership */\n  tag_11\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"source/Marketplace.sol\":49087:49092  false */\n  0x00\n    /* \"source/Marketplace.sol\":49077:49092  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n    /* \"source/Marketplace.sol\":53915:54098  for(uint i = 0; i < __collections.length; i++) {... */\ntag_14:\n    /* \"source/Marketplace.sol\":53935:53948  __collections */\n  dup5\n    /* \"source/Marketplace.sol\":53935:53955  __collections.length */\n  mload\n    /* \"source/Marketplace.sol\":53931:53932  i */\n  dup2\n    /* \"source/Marketplace.sol\":53931:53955  i < __collections.length */\n  lt\n    /* \"source/Marketplace.sol\":53915:54098  for(uint i = 0; i < __collections.length; i++) {... */\n  iszero\n  tag_15\n  jumpi\n    /* \"source/Marketplace.sol\":54017:54021  true */\n  0x01\n    /* \"source/Marketplace.sol\":53977:53996  _allowedCollections */\n  0x03\n    /* \"source/Marketplace.sol\":53977:54014  _allowedCollections[__collections[i]] */\n  0x00\n    /* \"source/Marketplace.sol\":53997:54010  __collections */\n  dup8\n    /* \"source/Marketplace.sol\":54011:54012  i */\n  dup5\n    /* \"source/Marketplace.sol\":53997:54013  __collections[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_18\n  jumpi\n  tag_18\n  tag_19\n  jump\t// in\ntag_18:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":53977:54014  _allowedCollections[__collections[i]] */\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"source/Marketplace.sol\":53977:54021  _allowedCollections[__collections[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"source/Marketplace.sol\":54036:54054  _marketCollections */\n  0x02\n    /* \"source/Marketplace.sol\":54068:54081  __collections */\n  dup6\n    /* \"source/Marketplace.sol\":54082:54083  i */\n  dup3\n    /* \"source/Marketplace.sol\":54068:54084  __collections[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_21\n  jumpi\n  tag_21\n  tag_19\n  jump\t// in\ntag_21:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"source/Marketplace.sol\":54036:54086  _marketCollections.push(IERC721(__collections[i])) */\n  dup3\n  sload\n  0x01\n  dup2\n  add\n  dup5\n  sstore\n  0x00\n  swap4\n  dup5\n  mstore\n  swap2\n  swap1\n  swap3\n  keccak256\n  add\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":53957:53960  i++ */\n  dup1\n  tag_23\n  dup2\n  tag_24\n  jump\t// in\ntag_23:\n  swap2\n  pop\n  pop\n    /* \"source/Marketplace.sol\":53915:54098  for(uint i = 0; i < __collections.length; i++) {... */\n  jump(tag_14)\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":54124:54151  __feeReceiver == address(0) */\n  dup4\n  and\n  iszero\n    /* \"source/Marketplace.sol\":54123:54181  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  tag_25\n  jumpi\n    /* \"source/Marketplace.sol\":54168:54181  __feeReceiver */\n  dup3\n    /* \"source/Marketplace.sol\":54123:54181  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  jump(tag_26)\ntag_25:\n    /* \"source/Marketplace.sol\":54155:54165  msg.sender */\n  caller\n    /* \"source/Marketplace.sol\":54123:54181  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\ntag_26:\n    /* \"source/Marketplace.sol\":54108:54120  _feeReceiver */\n  0x08\n    /* \"source/Marketplace.sol\":54108:54181  _feeReceiver = (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x01\n    /* \"source/Marketplace.sol\":54192:54214  _tradeFee = __tradeFee */\n  dup3\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":54225:54255  _allowedERC20 = __allowedERC20 */\n  dup1\n  mload\n  tag_27\n  swap1\n    /* \"source/Marketplace.sol\":54225:54238  _allowedERC20 */\n  0x04\n  swap1\n    /* \"source/Marketplace.sol\":54225:54255  _allowedERC20 = __allowedERC20 */\n  0x20\n  dup5\n  add\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n    /* \"source/Marketplace.sol\":53744:54263  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"source/Marketplace.sol\":50386:62465  contract Marketplace is Ownable, Pausable {... */\n  jump(tag_42)\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  0x00\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  swap1\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"source/Marketplace.sol\":3349:3477  {... */\n  pop\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"source/Marketplace.sol\":50386:62465  contract Marketplace is Ownable, Pausable {... */\ntag_28:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_34\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_33:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_34\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_33)\ntag_34:\n  pop\n  tag_35\n  swap3\n  swap2\n  pop\n  tag_36\n  jump\t// in\ntag_35:\n  pop\n  swap1\n  jump\t// out\ntag_36:\ntag_37:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_35\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_37)\n    /* \"#utility.yul\":14:141   */\ntag_39:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:323   */\ntag_40:\n    /* \"#utility.yul\":225:238   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":267:298   */\n  dup2\n  and\n    /* \"#utility.yul\":257:299   */\n  dup2\n  eq\n    /* \"#utility.yul\":247:317   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":313:314   */\n  0x00\n    /* \"#utility.yul\":310:311   */\n  dup1\n    /* \"#utility.yul\":303:315   */\n  revert\n    /* \"#utility.yul\":247:317   */\ntag_45:\n    /* \"#utility.yul\":146:323   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":328:1251   */\ntag_41:\n    /* \"#utility.yul\":393:398   */\n  0x00\n    /* \"#utility.yul\":446:449   */\n  dup3\n    /* \"#utility.yul\":439:443   */\n  0x1f\n    /* \"#utility.yul\":431:437   */\n  dup4\n    /* \"#utility.yul\":427:444   */\n  add\n    /* \"#utility.yul\":423:450   */\n  slt\n    /* \"#utility.yul\":413:468   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":461:462   */\n  dup1\n    /* \"#utility.yul\":454:466   */\n  revert\n    /* \"#utility.yul\":413:468   */\ntag_47:\n    /* \"#utility.yul\":487:500   */\n  dup2\n  mload\n    /* \"#utility.yul\":519:523   */\n  0x20\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":572:582   */\n  dup1\n  dup4\n  gt\n    /* \"#utility.yul\":569:605   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":585:603   */\n  tag_49\n  tag_39\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":631:633   */\n  dup3\n    /* \"#utility.yul\":628:629   */\n  0x05\n    /* \"#utility.yul\":624:634   */\n  shl\n    /* \"#utility.yul\":663:665   */\n  0x40\n    /* \"#utility.yul\":657:666   */\n  mload\n    /* \"#utility.yul\":726:728   */\n  0x1f\n    /* \"#utility.yul\":722:729   */\n  not\n    /* \"#utility.yul\":717:719   */\n  0x3f\n    /* \"#utility.yul\":713:715   */\n  dup4\n    /* \"#utility.yul\":709:720   */\n  add\n    /* \"#utility.yul\":705:730   */\n  and\n    /* \"#utility.yul\":697:703   */\n  dup2\n    /* \"#utility.yul\":693:731   */\n  add\n    /* \"#utility.yul\":781:787   */\n  dup2\n    /* \"#utility.yul\":769:779   */\n  dup2\n    /* \"#utility.yul\":766:788   */\n  lt\n    /* \"#utility.yul\":761:763   */\n  dup5\n    /* \"#utility.yul\":749:759   */\n  dup3\n    /* \"#utility.yul\":746:764   */\n  gt\n    /* \"#utility.yul\":743:789   */\n  or\n    /* \"#utility.yul\":740:812   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":792:810   */\n  tag_51\n  tag_39\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":828:830   */\n  0x40\n    /* \"#utility.yul\":821:843   */\n  mstore\n    /* \"#utility.yul\":878:896   */\n  swap4\n  dup5\n  mstore\n    /* \"#utility.yul\":954:969   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":950:974   */\n  dup4\n  add\n  swap4\n    /* \"#utility.yul\":912:927   */\n  dup4\n  dup2\n  add\n  swap3\n  pop\n    /* \"#utility.yul\":986:1001   */\n  dup8\n  dup6\n  gt\n    /* \"#utility.yul\":983:1018   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1014:1015   */\n  0x00\n    /* \"#utility.yul\":1011:1012   */\n  dup1\n    /* \"#utility.yul\":1004:1016   */\n  revert\n    /* \"#utility.yul\":983:1018   */\ntag_52:\n    /* \"#utility.yul\":1050:1052   */\n  dup4\n    /* \"#utility.yul\":1042:1048   */\n  dup8\n    /* \"#utility.yul\":1038:1053   */\n  add\n    /* \"#utility.yul\":1027:1053   */\n  swap2\n  pop\n    /* \"#utility.yul\":1062:1221   */\ntag_53:\n    /* \"#utility.yul\":1078:1084   */\n  dup5\n    /* \"#utility.yul\":1073:1076   */\n  dup3\n    /* \"#utility.yul\":1070:1085   */\n  lt\n    /* \"#utility.yul\":1062:1221   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1144:1178   */\n  tag_56\n    /* \"#utility.yul\":1174:1177   */\n  dup3\n    /* \"#utility.yul\":1144:1178   */\n  tag_40\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1132:1179   */\n  dup4\n  mstore\n    /* \"#utility.yul\":1199:1211   */\n  swap2\n  dup4\n  add\n  swap2\n    /* \"#utility.yul\":1095:1107   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"#utility.yul\":1062:1221   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":1239:1245   */\n  swap8\n    /* \"#utility.yul\":328:1251   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1256:2017   */\ntag_3:\n    /* \"#utility.yul\":1403:1409   */\n  0x00\n    /* \"#utility.yul\":1411:1417   */\n  dup1\n    /* \"#utility.yul\":1419:1425   */\n  0x00\n    /* \"#utility.yul\":1427:1433   */\n  dup1\n    /* \"#utility.yul\":1480:1483   */\n  0x80\n    /* \"#utility.yul\":1468:1477   */\n  dup6\n    /* \"#utility.yul\":1459:1466   */\n  dup8\n    /* \"#utility.yul\":1455:1478   */\n  sub\n    /* \"#utility.yul\":1451:1484   */\n  slt\n    /* \"#utility.yul\":1448:1501   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1497:1498   */\n  0x00\n    /* \"#utility.yul\":1494:1495   */\n  dup1\n    /* \"#utility.yul\":1487:1499   */\n  revert\n    /* \"#utility.yul\":1448:1501   */\ntag_58:\n    /* \"#utility.yul\":1524:1540   */\n  dup5\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1589:1603   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1586:1620   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1616:1617   */\n  0x00\n    /* \"#utility.yul\":1613:1614   */\n  dup1\n    /* \"#utility.yul\":1606:1618   */\n  revert\n    /* \"#utility.yul\":1586:1620   */\ntag_59:\n    /* \"#utility.yul\":1639:1711   */\n  tag_60\n    /* \"#utility.yul\":1703:1710   */\n  dup9\n    /* \"#utility.yul\":1694:1700   */\n  dup4\n    /* \"#utility.yul\":1683:1692   */\n  dup10\n    /* \"#utility.yul\":1679:1701   */\n  add\n    /* \"#utility.yul\":1639:1711   */\n  tag_41\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1629:1711   */\n  swap6\n  pop\n    /* \"#utility.yul\":1730:1779   */\n  tag_61\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1764:1773   */\n  dup9\n    /* \"#utility.yul\":1760:1778   */\n  add\n    /* \"#utility.yul\":1730:1779   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1720:1779   */\n  swap5\n  pop\n    /* \"#utility.yul\":1819:1821   */\n  0x40\n    /* \"#utility.yul\":1808:1817   */\n  dup8\n    /* \"#utility.yul\":1804:1822   */\n  add\n    /* \"#utility.yul\":1798:1823   */\n  mload\n    /* \"#utility.yul\":1788:1823   */\n  swap4\n  pop\n    /* \"#utility.yul\":1869:1871   */\n  0x60\n    /* \"#utility.yul\":1858:1867   */\n  dup8\n    /* \"#utility.yul\":1854:1872   */\n  add\n    /* \"#utility.yul\":1848:1873   */\n  mload\n    /* \"#utility.yul\":1832:1873   */\n  swap2\n  pop\n    /* \"#utility.yul\":1898:1900   */\n  dup1\n    /* \"#utility.yul\":1888:1896   */\n  dup3\n    /* \"#utility.yul\":1885:1901   */\n  gt\n    /* \"#utility.yul\":1882:1918   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1911:1912   */\n  dup1\n    /* \"#utility.yul\":1904:1916   */\n  revert\n    /* \"#utility.yul\":1882:1918   */\ntag_62:\n  pop\n    /* \"#utility.yul\":1937:2011   */\n  tag_63\n    /* \"#utility.yul\":2003:2010   */\n  dup8\n    /* \"#utility.yul\":1992:2000   */\n  dup3\n    /* \"#utility.yul\":1981:1990   */\n  dup9\n    /* \"#utility.yul\":1977:2001   */\n  add\n    /* \"#utility.yul\":1937:2011   */\n  tag_41\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1927:2011   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1256:2017   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2022:2149   */\ntag_19:\n    /* \"#utility.yul\":2083:2093   */\n  0x4e487b71\n    /* \"#utility.yul\":2078:2081   */\n  0xe0\n    /* \"#utility.yul\":2074:2094   */\n  shl\n    /* \"#utility.yul\":2071:2072   */\n  0x00\n    /* \"#utility.yul\":2064:2095   */\n  mstore\n    /* \"#utility.yul\":2114:2118   */\n  0x32\n    /* \"#utility.yul\":2111:2112   */\n  0x04\n    /* \"#utility.yul\":2104:2119   */\n  mstore\n    /* \"#utility.yul\":2138:2142   */\n  0x24\n    /* \"#utility.yul\":2135:2136   */\n  0x00\n    /* \"#utility.yul\":2128:2143   */\n  revert\n    /* \"#utility.yul\":2154:2386   */\ntag_24:\n    /* \"#utility.yul\":2193:2196   */\n  0x00\n    /* \"#utility.yul\":2214:2231   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":2211:2351   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2273:2283   */\n  0x4e487b71\n    /* \"#utility.yul\":2268:2271   */\n  0xe0\n    /* \"#utility.yul\":2264:2284   */\n  shl\n    /* \"#utility.yul\":2261:2262   */\n  0x00\n    /* \"#utility.yul\":2254:2285   */\n  mstore\n    /* \"#utility.yul\":2308:2312   */\n  0x11\n    /* \"#utility.yul\":2305:2306   */\n  0x04\n    /* \"#utility.yul\":2298:2313   */\n  mstore\n    /* \"#utility.yul\":2336:2340   */\n  0x24\n    /* \"#utility.yul\":2333:2334   */\n  0x00\n    /* \"#utility.yul\":2326:2341   */\n  revert\n    /* \"#utility.yul\":2211:2351   */\ntag_66:\n  pop\n    /* \"#utility.yul\":2378:2379   */\n  0x01\n    /* \"#utility.yul\":2367:2380   */\n  add\n  swap1\n    /* \"#utility.yul\":2154:2386   */\n  jump\t// out\ntag_42:\n    /* \"source/Marketplace.sol\":50386:62465  contract Marketplace is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":50386:62465  contract Marketplace is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x785fa7ce\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd55a34e4\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe9e4e160\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe9e4e160\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xefdcd974\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf4f3b200\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xd55a34e4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xda24548a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe8a35392\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x98f748bd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x98f748bd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa096c5a2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa82ba76f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc8f77899\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x785fa7ce\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x952977f5\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x5211ac2e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x5c975abb\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6629e913\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x69c57352\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x5211ac2e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x527f2902\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x10603023\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x19c8c1c5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ed56d44\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x27713536\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2b205d14\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3a51f383\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"source/Marketplace.sol\":56077:56177  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"source/Marketplace.sol\":56317:56855  function getUserTokensAtSale(address seller)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/Marketplace.sol\":57090:57643  function getCollectionTokensAtSale(address collection) public view returns (SelledNFT[] memory ret) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_41\n      tag_49\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"source/Marketplace.sol\":54614:55032  function setAllowedCollections(address[] memory _newCollections) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_36\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"source/Marketplace.sol\":57651:59377  function buyNFTbyERC20(address collection, uint tokenId)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_36\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"source/Marketplace.sol\":54493:54608  function getAllowedCollections() public view returns(IERC721[] memory) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"source/Marketplace.sol\":55518:55709  function withdrawWei() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_36\n      tag_69\n      jump\t// in\n        /* \"source/Marketplace.sol\":51639:51729  function isMarketPlaceContract() public pure returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n        /* \"source/Marketplace.sol\":51717:51721  true */\n      0x01\n        /* \"source/Marketplace.sol\":51639:51729  function isMarketPlaceContract() public pure returns (bool) {... */\n    tag_71:\n      mload(0x40)\n        /* \"#utility.yul\":4305:4319   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4298:4320   */\n      iszero\n        /* \"#utility.yul\":4280:4321   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4268:4270   */\n      0x20\n        /* \"#utility.yul\":4253:4271   */\n      add\n        /* \"source/Marketplace.sol\":51639:51729  function isMarketPlaceContract() public pure returns (bool) {... */\n      tag_45\n        /* \"#utility.yul\":4140:4327   */\n      jump\n        /* \"source/Marketplace.sol\":51563:51595  uint constant public version = 1 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n        /* \"source/Marketplace.sol\":51594:51595  1 */\n      0x01\n        /* \"source/Marketplace.sol\":51563:51595  uint constant public version = 1 */\n      dup2\n      jump\n    tag_76:\n      mload(0x40)\n        /* \"#utility.yul\":4478:4503   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4466:4468   */\n      0x20\n        /* \"#utility.yul\":4451:4469   */\n      add\n        /* \"source/Marketplace.sol\":51563:51595  uint constant public version = 1 */\n      tag_45\n        /* \"#utility.yul\":4332:4509   */\n      jump\n        /* \"source/Marketplace.sol\":49200:49286  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49200:49286  function paused() public view virtual returns (bool) {... */\n      jump(tag_71)\n        /* \"source/Marketplace.sol\":52088:52522  function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n        /* \"source/Marketplace.sol\":55180:55284  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_63\n      tag_92\n      jump\t// in\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_36\n      tag_97\n      jump\t// in\n        /* \"source/Marketplace.sol\":55292:55510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_71\n      tag_100\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n    tag_104:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5599:5631   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5581:5632   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5569:5571   */\n      0x20\n        /* \"#utility.yul\":5554:5572   */\n      add\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      tag_45\n        /* \"#utility.yul\":5435:5638   */\n      jump\n        /* \"source/Marketplace.sol\":55986:56071  function getTradeFee() public view returns (uint) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n        /* \"source/Marketplace.sol\":56054:56063  _tradeFee */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":55986:56071  function getTradeFee() public view returns (uint) {... */\n      jump(tag_76)\n        /* \"source/Marketplace.sol\":60577:61869  function sellNFT(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_36\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n        /* \"source/Marketplace.sol\":56185:56311  function getMyTokensAtSale() public view returns(SelledNFT[] memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_41\n      tag_119\n      jump\t// in\n        /* \"source/Marketplace.sol\":59387:60569  function buyNFT(address collection, uint256 tokenId)... */\n    tag_20:\n      tag_36\n      tag_122\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"source/Marketplace.sol\":56863:56971  function getTokensAtSaleCount() public view returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n        /* \"source/Marketplace.sol\":56943:56956  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":56943:56963  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":56863:56971  function getTokensAtSaleCount() public view returns (uint256) {... */\n      jump(tag_76)\n        /* \"source/Marketplace.sol\":56977:57084  function getTokensAtSale() public view returns (SelledNFT[] memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_41\n      tag_130\n      jump\t// in\n        /* \"source/Marketplace.sol\":61877:62462  function deSellNFT(address collection, uint256 tokenId) public {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_36\n      tag_134\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"source/Marketplace.sol\":54271:54364  function getFeeReceiver() public view returns(address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n        /* \"source/Marketplace.sol\":54344:54356  _feeReceiver */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"source/Marketplace.sol\":54271:54364  function getFeeReceiver() public view returns(address) {... */\n      jump(tag_104)\n        /* \"source/Marketplace.sol\":55042:55168  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_36\n      tag_142\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"source/Marketplace.sol\":54370:54485  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_36\n      tag_146\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_36\n      tag_150\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"source/Marketplace.sol\":55717:55978  function withdrawERC20(address erc20) public onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_36\n      tag_154\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n        /* \"source/Marketplace.sol\":56077:56177  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_39:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_157\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"source/Marketplace.sol\":56145:56154  _tradeFee */\n      0x01\n        /* \"source/Marketplace.sol\":56145:56169  _tradeFee = _newTradeFee */\n      sstore\n        /* \"source/Marketplace.sol\":56077:56177  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":56317:56855  function getUserTokensAtSale(address seller)... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":56445:56469  _userTokensCount[seller] */\n      dup2\n      and\n        /* \"source/Marketplace.sol\":56472:56473  0 */\n      0x00\n        /* \"source/Marketplace.sol\":56445:56469  _userTokensCount[seller] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56445:56461  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":56445:56469  _userTokensCount[seller] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":56401:56423  SelledNFT[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":56445:56473  _userTokensCount[seller] > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":56441:56827  if (_userTokensCount[seller] > 0) {... */\n      tag_161\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":56512:56536  _userTokensCount[seller] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56512:56528  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":56512:56536  _userTokensCount[seller] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":56496:56537  new SelledNFT[](_userTokensCount[seller]) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_163\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup2\n      0x20\n      add\n    tag_166:\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_166\n      jumpi\n      swap1\n      pop\n    tag_165:\n      pop\n        /* \"source/Marketplace.sol\":56490:56537  ret = new SelledNFT[](_userTokensCount[seller]) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":56552:56567  uint256 counter */\n      0x00\n        /* \"source/Marketplace.sol\":56591:56600  uint256 i */\n      dup1\n        /* \"source/Marketplace.sol\":56586:56816  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_169:\n        /* \"source/Marketplace.sol\":56610:56623  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":56610:56630  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":56606:56630  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":56586:56816  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"source/Marketplace.sol\":56687:56693  seller */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":56660:56693  _marketTokens[i].seller == seller */\n      and\n        /* \"source/Marketplace.sol\":56660:56673  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":56674:56675  i */\n      dup3\n        /* \"source/Marketplace.sol\":56660:56676  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"source/Marketplace.sol\":56660:56683  _marketTokens[i].seller */\n      0x02\n        /* \"source/Marketplace.sol\":56660:56676  _marketTokens[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"source/Marketplace.sol\":56660:56683  _marketTokens[i].seller */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":56660:56693  _marketTokens[i].seller == seller */\n      sub\n        /* \"source/Marketplace.sol\":56656:56801  if (_marketTokens[i].seller == seller) {... */\n      tag_176\n      jumpi\n        /* \"source/Marketplace.sol\":56733:56746  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":56747:56748  i */\n      dup2\n        /* \"source/Marketplace.sol\":56733:56749  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_174\n      jump\t// in\n    tag_178:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56718:56749  ret[counter] = _marketTokens[i] */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":56733:56749  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Marketplace.sol\":56718:56749  ret[counter] = _marketTokens[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      dup5\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"source/Marketplace.sol\":56718:56730  ret[counter] */\n      dup4\n      mload\n        /* \"source/Marketplace.sol\":56718:56721  ret */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":56722:56729  counter */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":56718:56730  ret[counter] */\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_174\n      jump\t// in\n    tag_181:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":56718:56749  ret[counter] = _marketTokens[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":56772:56781  counter++ */\n      dup2\n      dup1\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56656:56801  if (_marketTokens[i].seller == seller) {... */\n    tag_176:\n        /* \"source/Marketplace.sol\":56632:56635  i++ */\n      dup1\n      tag_184\n      dup2\n      tag_183\n      jump\t// in\n    tag_184:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56586:56816  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_169)\n    tag_170:\n      pop\n        /* \"source/Marketplace.sol\":56475:56827  {... */\n      pop\n        /* \"source/Marketplace.sol\":56441:56827  if (_userTokensCount[seller] > 0) {... */\n    tag_161:\n        /* \"source/Marketplace.sol\":56317:56855  function getUserTokensAtSale(address seller)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":57090:57643  function getCollectionTokensAtSale(address collection) public view returns (SelledNFT[] memory ret) {... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57205:57239  _collectionTokensCount[collection] */\n      dup2\n      and\n        /* \"source/Marketplace.sol\":57242:57243  0 */\n      0x00\n        /* \"source/Marketplace.sol\":57205:57239  _collectionTokensCount[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57205:57227  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":57205:57239  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":57166:57188  SelledNFT[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":57205:57243  _collectionTokensCount[collection] > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":57201:57615  if (_collectionTokensCount[collection] > 0) {... */\n      tag_161\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57282:57316  _collectionTokensCount[collection] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57282:57304  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":57282:57316  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":57266:57317  new SelledNFT[](_collectionTokensCount[collection]) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_188\n      jumpi\n      tag_188\n      tag_164\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup2\n      0x20\n      add\n    tag_190:\n      tag_191\n      tag_168\n      jump\t// in\n    tag_191:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_190\n      jumpi\n      swap1\n      pop\n    tag_189:\n      pop\n        /* \"source/Marketplace.sol\":57260:57317  ret = new SelledNFT[](_collectionTokensCount[collection]) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":57332:57347  uint256 counter */\n      0x00\n        /* \"source/Marketplace.sol\":57371:57380  uint256 i */\n      dup1\n        /* \"source/Marketplace.sol\":57366:57604  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_192:\n        /* \"source/Marketplace.sol\":57390:57403  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":57390:57410  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":57386:57410  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":57366:57604  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"source/Marketplace.sol\":57471:57481  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57440:57481  _marketTokens[i].collection == collection */\n      and\n        /* \"source/Marketplace.sol\":57440:57453  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":57454:57455  i */\n      dup3\n        /* \"source/Marketplace.sol\":57440:57456  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_196\n      tag_174\n      jump\t// in\n    tag_196:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":57440:57467  _marketTokens[i].collection */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":57440:57481  _marketTokens[i].collection == collection */\n      sub\n        /* \"source/Marketplace.sol\":57436:57589  if (_marketTokens[i].collection == collection) {... */\n      tag_198\n      jumpi\n        /* \"source/Marketplace.sol\":57521:57534  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":57535:57536  i */\n      dup2\n        /* \"source/Marketplace.sol\":57521:57537  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_200\n      tag_174\n      jump\t// in\n    tag_200:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":57506:57537  ret[counter] = _marketTokens[i] */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":57521:57537  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Marketplace.sol\":57506:57537  ret[counter] = _marketTokens[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      dup5\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"source/Marketplace.sol\":57506:57518  ret[counter] */\n      dup4\n      mload\n        /* \"source/Marketplace.sol\":57506:57509  ret */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":57510:57517  counter */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":57506:57518  ret[counter] */\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_203\n      tag_174\n      jump\t// in\n    tag_203:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":57506:57537  ret[counter] = _marketTokens[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":57560:57569  counter++ */\n      dup2\n      dup1\n      tag_204\n      swap1\n      tag_183\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n        /* \"source/Marketplace.sol\":57436:57589  if (_marketTokens[i].collection == collection) {... */\n    tag_198:\n        /* \"source/Marketplace.sol\":57412:57415  i++ */\n      dup1\n      tag_205\n      dup2\n      tag_183\n      jump\t// in\n    tag_205:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":57366:57604  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_192)\n        /* \"source/Marketplace.sol\":54614:55032  function setAllowedCollections(address[] memory _newCollections) public onlyOwner {... */\n    tag_56:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_207\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"source/Marketplace.sol\":54711:54720  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":54707:54848  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n    tag_209:\n        /* \"source/Marketplace.sol\":54730:54748  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":54730:54755  _marketCollections.length */\n      sload\n        /* \"source/Marketplace.sol\":54726:54755  i < _marketCollections.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":54707:54848  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"source/Marketplace.sol\":54831:54836  false */\n      0x00\n        /* \"source/Marketplace.sol\":54777:54796  _allowedCollections */\n      0x03\n        /* \"source/Marketplace.sol\":54777:54828  _allowedCollections[address(_marketCollections[i])] */\n      0x00\n        /* \"source/Marketplace.sol\":54805:54823  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":54824:54825  i */\n      dup5\n        /* \"source/Marketplace.sol\":54805:54826  _marketCollections[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_213\n      tag_174\n      jump\t// in\n    tag_213:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":54777:54828  _allowedCollections[address(_marketCollections[i])] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":54777:54836  _allowedCollections[address(_marketCollections[i])] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":54757:54760  i++ */\n      dup1\n      tag_215\n      dup2\n      tag_183\n      jump\t// in\n    tag_215:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54707:54848  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"source/Marketplace.sol\":54858:54883  delete _marketCollections */\n      tag_216\n        /* \"source/Marketplace.sol\":54865:54883  _marketCollections */\n      0x02\n      0x00\n        /* \"source/Marketplace.sol\":54858:54883  delete _marketCollections */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"source/Marketplace.sol\":54898:54907  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":54894:55025  for(uint256 i = 0; i < _newCollections.length; i++) {... */\n    tag_218:\n        /* \"source/Marketplace.sol\":54917:54932  _newCollections */\n      dup2\n        /* \"source/Marketplace.sol\":54917:54939  _newCollections.length */\n      mload\n        /* \"source/Marketplace.sol\":54913:54914  i */\n      dup2\n        /* \"source/Marketplace.sol\":54913:54939  i < _newCollections.length */\n      lt\n        /* \"source/Marketplace.sol\":54894:55025  for(uint256 i = 0; i < _newCollections.length; i++) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"source/Marketplace.sol\":54961:54979  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":54993:55008  _newCollections */\n      dup3\n        /* \"source/Marketplace.sol\":55009:55010  i */\n      dup3\n        /* \"source/Marketplace.sol\":54993:55011  _newCollections[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_174\n      jump\t// in\n    tag_222:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":54961:55013  _marketCollections.push(IERC721(_newCollections[i])) */\n      dup3\n      sload\n      0x01\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":54941:54944  i++ */\n      dup1\n      tag_224\n      dup2\n      tag_183\n      jump\t// in\n    tag_224:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54894:55025  for(uint256 i = 0; i < _newCollections.length; i++) {... */\n      jump(tag_218)\n    tag_219:\n      pop\n        /* \"source/Marketplace.sol\":54614:55032  function setAllowedCollections(address[] memory _newCollections) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":57651:59377  function buyNFTbyERC20(address collection, uint tokenId)... */\n    tag_61:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"source/Marketplace.sol\":57763:57787  SelledNFT memory lotInfo */\n      0x00\n        /* \"source/Marketplace.sol\":57790:57826  marketTokensGet(collection, tokenId) */\n      tag_231\n        /* \"source/Marketplace.sol\":57806:57816  collection */\n      dup4\n        /* \"source/Marketplace.sol\":57818:57825  tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":57790:57805  marketTokensGet */\n      tag_87\n        /* \"source/Marketplace.sol\":57790:57826  marketTokensGet(collection, tokenId) */\n      jump\t// in\n    tag_231:\n        /* \"source/Marketplace.sol\":57845:57863  lotInfo.collection */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":57763:57826  SelledNFT memory lotInfo = marketTokensGet(collection, tokenId) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57845:57877  lotInfo.collection != address(0) */\n      and\n        /* \"source/Marketplace.sol\":57837:57906  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7124:7126   */\n      0x20\n        /* \"source/Marketplace.sol\":57837:57906  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7106:7127   */\n      mstore\n        /* \"#utility.yul\":7163:7165   */\n      0x18\n        /* \"#utility.yul\":7143:7161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7136:7166   */\n      mstore\n      shl(0x40, 0x54686973204e4654206973206e6f7420666f722073616c65)\n        /* \"#utility.yul\":7182:7200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7175:7229   */\n      mstore\n        /* \"#utility.yul\":7246:7264   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":57837:57906  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_228\n        /* \"#utility.yul\":6922:7270   */\n      jump\n        /* \"source/Marketplace.sol\":57837:57906  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n    tag_232:\n        /* \"source/Marketplace.sol\":57925:57938  lotInfo.erc20 */\n      0x80\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57925:57952  lotInfo.erc20 != address(0) */\n      and\n        /* \"source/Marketplace.sol\":57917:57989  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7477:7479   */\n      0x20\n        /* \"source/Marketplace.sol\":57917:57989  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7459:7480   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7496:7514   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7489:7519   */\n      mstore\n        /* \"#utility.yul\":7555:7589   */\n      0x5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e\n        /* \"#utility.yul\":7535:7553   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7528:7590   */\n      mstore\n        /* \"#utility.yul\":7607:7625   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":57917:57989  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n      tag_228\n        /* \"#utility.yul\":7275:7631   */\n      jump\n        /* \"source/Marketplace.sol\":57917:57989  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n    tag_235:\n        /* \"source/Marketplace.sol\":58027:58040  lotInfo.erc20 */\n      0x80\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":58075:58105  payToken.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58094:58104  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":58075:58105  payToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5581:5632   */\n      mstore\n        /* \"source/Marketplace.sol\":58002:58017  IERC20 payToken */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58075:58093  payToken.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":5554:5572   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":58075:58105  payToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"source/Marketplace.sol\":58052:58105  uint256 buyerBalance = payToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":58140:58147  lotInfo */\n      dup3\n        /* \"source/Marketplace.sol\":58140:58153  lotInfo.price */\n      0x60\n      add\n      mload\n        /* \"source/Marketplace.sol\":58124:58136  buyerBalance */\n      dup2\n        /* \"source/Marketplace.sol\":58124:58153  buyerBalance >= lotInfo.price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":58116:58210  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8027:8029   */\n      0x20\n        /* \"source/Marketplace.sol\":58116:58210  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8009:8030   */\n      mstore\n        /* \"#utility.yul\":8066:8068   */\n      0x34\n        /* \"#utility.yul\":8046:8064   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8039:8069   */\n      mstore\n        /* \"#utility.yul\":8105:8139   */\n      0x596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e\n        /* \"#utility.yul\":8085:8103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8078:8140   */\n      mstore\n      shl(0x60, 0x20796f75722062616c616e636520746f20706179)\n        /* \"#utility.yul\":8156:8174   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8149:8199   */\n      mstore\n        /* \"#utility.yul\":8216:8235   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":58116:58210  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n      tag_228\n        /* \"#utility.yul\":7825:8241   */\n      jump\n        /* \"source/Marketplace.sol\":58116:58210  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n    tag_243:\n        /* \"source/Marketplace.sol\":58246:58291  payToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58265:58275  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":58246:58291  payToken.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8458:8492   */\n      mstore\n        /* \"source/Marketplace.sol\":58285:58289  this */\n      address\n        /* \"#utility.yul\":8508:8526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8501:8544   */\n      mstore\n        /* \"source/Marketplace.sol\":58221:58243  uint256 buyerAllowance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58246:58264  payToken.allowance */\n      dup5\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":8393:8411   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":58246:58291  payToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_250:\n        /* \"source/Marketplace.sol\":58221:58291  uint256 buyerAllowance = payToken.allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":58328:58335  lotInfo */\n      dup4\n        /* \"source/Marketplace.sol\":58328:58341  lotInfo.price */\n      0x60\n      add\n      mload\n        /* \"source/Marketplace.sol\":58310:58324  buyerAllowance */\n      dup2\n        /* \"source/Marketplace.sol\":58310:58341  buyerAllowance >= lotInfo.price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":58302:58404  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8757:8759   */\n      0x20\n        /* \"source/Marketplace.sol\":58302:58404  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8739:8760   */\n      mstore\n        /* \"#utility.yul\":8796:8798   */\n      0x3a\n        /* \"#utility.yul\":8776:8794   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8769:8799   */\n      mstore\n        /* \"#utility.yul\":8835:8869   */\n      0x596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074\n        /* \"#utility.yul\":8815:8833   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8808:8870   */\n      mstore\n        /* \"#utility.yul\":8906:8934   */\n      0x6f2073656e642074686520707572636861736520616d6f756e74000000000000\n        /* \"#utility.yul\":8886:8904   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8879:8935   */\n      mstore\n        /* \"#utility.yul\":8952:8971   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":58302:58404  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n      tag_228\n        /* \"#utility.yul\":8555:8977   */\n      jump\n        /* \"source/Marketplace.sol\":58302:58404  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n    tag_251:\n        /* \"source/Marketplace.sol\":58444:58457  lotInfo.price */\n      0x60\n      dup5\n      add\n      mload\n        /* \"source/Marketplace.sol\":58427:58441  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":58488:58538  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_254\n        /* \"source/Marketplace.sol\":58501:58526  SafeMath.div(amount, 100) */\n      tag_255\n        /* \"source/Marketplace.sol\":58444:58457  lotInfo.price */\n      dup4\n        /* \"source/Marketplace.sol\":58522:58525  100 */\n      0x64\n        /* \"source/Marketplace.sol\":58501:58513  SafeMath.div */\n      tag_256\n        /* \"source/Marketplace.sol\":58501:58526  SafeMath.div(amount, 100) */\n      jump\t// in\n    tag_255:\n        /* \"source/Marketplace.sol\":58528:58537  _tradeFee */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":58488:58500  SafeMath.mul */\n      tag_257\n        /* \"source/Marketplace.sol\":58488:58538  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      jump\t// in\n    tag_254:\n        /* \"source/Marketplace.sol\":58468:58538  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":58571:58578  owner() */\n      tag_258\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":58571:58578  owner() */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58553:58578  lotInfo.seller == owner() */\n      and\n        /* \"source/Marketplace.sol\":58553:58560  lotInfo */\n      dup7\n        /* \"source/Marketplace.sol\":58553:58567  lotInfo.seller */\n      0x40\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58553:58578  lotInfo.seller == owner() */\n      and\n      sub\n        /* \"source/Marketplace.sol\":58549:58593  if (lotInfo.seller == owner()) feeAmount = 0 */\n      tag_259\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":58592:58593  0 */\n      0x00\n        /* \"source/Marketplace.sol\":58549:58593  if (lotInfo.seller == owner()) feeAmount = 0 */\n    tag_259:\n        /* \"source/Marketplace.sol\":58604:58625  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":58628:58659  SafeMath.sub(amount, feeAmount) */\n      tag_260\n        /* \"source/Marketplace.sol\":58641:58647  amount */\n      dup4\n        /* \"source/Marketplace.sol\":58649:58658  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":58628:58640  SafeMath.sub */\n      tag_261\n        /* \"source/Marketplace.sol\":58628:58659  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_260:\n        /* \"source/Marketplace.sol\":58754:58768  lotInfo.seller */\n      0x40\n      dup9\n      add\n      mload\n        /* \"source/Marketplace.sol\":58604:58659  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":58672:58808  payToken.safeTransferFrom(... */\n      tag_262\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58672:58697  payToken.safeTransferFrom */\n      dup9\n      and\n      swap1\n        /* \"source/Marketplace.sol\":58720:58730  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":58604:58659  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup5\n        /* \"source/Marketplace.sol\":58672:58697  payToken.safeTransferFrom */\n      tag_263\n        /* \"source/Marketplace.sol\":58672:58808  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_262:\n        /* \"source/Marketplace.sol\":58823:58836  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":58819:59011  if (feeAmount > 0) {... */\n      tag_265\n      jumpi\n        /* \"source/Marketplace.sol\":58943:58955  _feeReceiver */\n      sload(0x08)\n        /* \"source/Marketplace.sol\":58853:58999  payToken.safeTransferFrom(... */\n      tag_265\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58853:58878  payToken.safeTransferFrom */\n      dup9\n      dup2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":58905:58915  msg.sender */\n      caller\n      swap2\n        /* \"source/Marketplace.sol\":58943:58955  _feeReceiver */\n      and\n        /* \"source/Marketplace.sol\":58975:58984  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":58853:58878  payToken.safeTransferFrom */\n      tag_263\n        /* \"source/Marketplace.sol\":58853:58999  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_265:\n        /* \"source/Marketplace.sol\":59029:59047  lotInfo.collection */\n      dup7\n      mload\n        /* \"source/Marketplace.sol\":59089:59104  lotInfo.tokenId */\n      0x20\n      dup9\n      add\n      mload\n        /* \"source/Marketplace.sol\":59021:59105  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59021:59061  IERC721(lotInfo.collection).transferFrom */\n      swap1\n      swap3\n      and\n      swap2\n      0x23b872dd\n      swap2\n        /* \"source/Marketplace.sol\":59021:59105  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      tag_266\n      swap2\n        /* \"source/Marketplace.sol\":59070:59074  this */\n      address\n      swap2\n        /* \"source/Marketplace.sol\":59077:59087  msg.sender */\n      caller\n      swap2\n        /* \"source/Marketplace.sol\":59021:59105  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_266:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":59116:59153  _marketTokensDel(collection, tokenId) */\n      tag_271\n        /* \"source/Marketplace.sol\":59133:59143  collection */\n      dup10\n        /* \"source/Marketplace.sol\":59145:59152  tokenId */\n      dup10\n        /* \"source/Marketplace.sol\":59116:59132  _marketTokensDel */\n      tag_272\n        /* \"source/Marketplace.sol\":59116:59153  _marketTokensDel(collection, tokenId) */\n      jump\t// in\n    tag_271:\n        /* \"source/Marketplace.sol\":59198:59212  lotInfo.seller */\n      0x40\n      dup8\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":59254:59272  lotInfo.collection */\n      dup9\n      mload\n        /* \"source/Marketplace.sol\":59287:59302  lotInfo.tokenId */\n      0x20\n      dup1\n      dup12\n      add\n      mload\n        /* \"source/Marketplace.sol\":59317:59330  lotInfo.erc20 */\n      0x80\n      dup1\n      dup14\n      add\n      mload\n        /* \"source/Marketplace.sol\":59345:59358  lotInfo.price */\n      0x60\n      dup1\n      dup16\n      add\n      mload\n        /* \"source/Marketplace.sol\":59171:59369  BuyWithERC20(... */\n      dup9\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9705:9720   */\n      swap9\n      dup10\n      and\n        /* \"#utility.yul\":9687:9721   */\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":59228:59238  msg.sender */\n      caller\n        /* \"#utility.yul\":9737:9755   */\n      swap7\n      dup2\n      add\n        /* \"#utility.yul\":9730:9773   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":9809:9824   */\n      swap6\n      dup8\n      and\n        /* \"#utility.yul\":9789:9807   */\n      dup6\n      dup10\n      add\n        /* \"#utility.yul\":9782:9825   */\n      mstore\n        /* \"#utility.yul\":9841:9859   */\n      dup5\n      add\n        /* \"#utility.yul\":9834:9868   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9905:9920   */\n      swap4\n      and\n        /* \"#utility.yul\":9884:9903   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":9877:9921   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9667:9670   */\n      0xa0\n        /* \"#utility.yul\":9937:9956   */\n      dup3\n      add\n        /* \"#utility.yul\":9930:9965   */\n      mstore\n        /* \"source/Marketplace.sol\":59171:59369  BuyWithERC20(... */\n      swap1\n      mload\n      0xa3d27cc8ac4e1915b6a89ce3e468d87aeb3caf011a47e236db61d098e452870c\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9636:9639   */\n      0xc0\n        /* \"source/Marketplace.sol\":59171:59369  BuyWithERC20(... */\n      add\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":57752:59377  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":57651:59377  function buyNFTbyERC20(address collection, uint tokenId)... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":54493:54608  function getAllowedCollections() public view returns(IERC721[] memory) {... */\n    tag_64:\n        /* \"source/Marketplace.sol\":54546:54562  IERC721[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":54582:54600  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":54575:54600  return _marketCollections */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_276\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_277:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_277\n      jumpi\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":54493:54608  function getAllowedCollections() public view returns(IERC721[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":55518:55709  function withdrawWei() public onlyOwner {... */\n    tag_69:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_279\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_279:\n        /* \"source/Marketplace.sol\":55618:55654  payable(msg.sender).transfer(amount) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":55586:55607  address(this).balance */\n      selfbalance\n      swap1\n        /* \"source/Marketplace.sol\":55626:55636  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":55618:55654  payable(msg.sender).transfer(amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"source/Marketplace.sol\":55586:55607  address(this).balance */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":55569:55583  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":55618:55654  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":55569:55583  uint256 amount */\n      dup2\n        /* \"source/Marketplace.sol\":55618:55654  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":55586:55607  address(this).balance */\n      dup6\n        /* \"source/Marketplace.sol\":55626:55636  msg.sender */\n      dup9\n        /* \"source/Marketplace.sol\":55618:55654  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n        /* \"source/Marketplace.sol\":55670:55701  WithdrawWei(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":55682:55692  msg.sender */\n      caller\n        /* \"#utility.yul\":10150:10201   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10232:10234   */\n      0x20\n        /* \"#utility.yul\":10217:10235   */\n      dup2\n      add\n        /* \"#utility.yul\":10210:10244   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":55670:55701  WithdrawWei(msg.sender, amount) */\n      0x2f15b7a52fc8a006876377705647acbd22eed72dec9b154aa290e286c06a3cd4\n      swap2\n        /* \"#utility.yul\":10123:10141   */\n      add\n        /* \"source/Marketplace.sol\":55670:55701  WithdrawWei(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":55558:55709  {... */\n      pop\n        /* \"source/Marketplace.sol\":55518:55709  function withdrawWei() public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":52088:52522  function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {... */\n    tag_87:\n        /* \"source/Marketplace.sol\":52171:52191  SelledNFT memory ret */\n      tag_287\n      tag_168\n      jump\t// in\n    tag_287:\n        /* \"source/Marketplace.sol\":52208:52217  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":52204:52494  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_289:\n        /* \"source/Marketplace.sol\":52227:52240  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52227:52247  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":52223:52247  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":52204:52494  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"source/Marketplace.sol\":52323:52333  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":52292:52333  _marketTokens[i].collection == collection */\n      and\n        /* \"source/Marketplace.sol\":52292:52305  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52306:52307  i */\n      dup3\n        /* \"source/Marketplace.sol\":52292:52308  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_174\n      jump\t// in\n    tag_293:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":52292:52319  _marketTokens[i].collection */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":52292:52333  _marketTokens[i].collection == collection */\n      eq\n        /* \"source/Marketplace.sol\":52291:52409  (_marketTokens[i].collection == collection)... */\n      dup1\n      iszero\n      tag_295\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":52401:52408  tokenId */\n      dup3\n        /* \"source/Marketplace.sol\":52373:52386  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52387:52388  i */\n      dup3\n        /* \"source/Marketplace.sol\":52373:52389  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_297\n      jumpi\n      tag_297\n      tag_174\n      jump\t// in\n    tag_297:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":52373:52397  _marketTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":52373:52408  _marketTokens[i].tokenId == tokenId */\n      eq\n        /* \"source/Marketplace.sol\":52291:52409  (_marketTokens[i].collection == collection)... */\n    tag_295:\n        /* \"source/Marketplace.sol\":52269:52483  if (... */\n      iszero\n      tag_299\n      jumpi\n        /* \"source/Marketplace.sol\":52451:52464  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52465:52466  i */\n      dup2\n        /* \"source/Marketplace.sol\":52451:52467  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_301\n      jumpi\n      tag_301\n      tag_174\n      jump\t// in\n    tag_301:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":52444:52467  return _marketTokens[i] */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":52451:52467  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Marketplace.sol\":52444:52467  return _marketTokens[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      dup5\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n      swap2\n      pop\n      tag_288\n      swap1\n      pop\n      jump\n        /* \"source/Marketplace.sol\":52269:52483  if (... */\n    tag_299:\n        /* \"source/Marketplace.sol\":52249:52252  i++ */\n      dup1\n      tag_303\n      dup2\n      tag_183\n      jump\t// in\n    tag_303:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":52204:52494  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_289)\n    tag_290:\n      pop\n        /* \"source/Marketplace.sol\":52088:52522  function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {... */\n    tag_288:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":55180:55284  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_92:\n        /* \"source/Marketplace.sol\":55227:55243  address[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":55263:55276  _allowedERC20 */\n      0x04\n        /* \"source/Marketplace.sol\":55256:55276  return _allowedERC20 */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_276\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_277\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":55180:55284  function getAllowedERC20() public view returns(address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_97:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_308\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_308:\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      tag_310\n        /* \"source/Marketplace.sol\":2759:2760  0 */\n      0x00\n        /* \"source/Marketplace.sol\":2732:2750  _transferOwnership */\n      tag_311\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_310:\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":55292:55510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_101:\n        /* \"source/Marketplace.sol\":55352:55356  bool */\n      0x00\n      dup1\n        /* \"source/Marketplace.sol\":55369:55480  for(uint i=0; i<_allowedERC20.length;i++) {... */\n    tag_313:\n        /* \"source/Marketplace.sol\":55385:55398  _allowedERC20 */\n      0x04\n        /* \"source/Marketplace.sol\":55385:55405  _allowedERC20.length */\n      sload\n        /* \"source/Marketplace.sol\":55383:55405  i<_allowedERC20.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":55369:55480  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"source/Marketplace.sol\":55439:55452  _allowedERC20 */\n      0x04\n        /* \"source/Marketplace.sol\":55453:55454  i */\n      dup2\n        /* \"source/Marketplace.sol\":55439:55455  _allowedERC20[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_317\n      jumpi\n      tag_317\n      tag_174\n      jump\t// in\n    tag_317:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":55430:55455  erc20 == _allowedERC20[i] */\n      swap1\n      dup5\n      and\n      sub\n        /* \"source/Marketplace.sol\":55426:55468  if (erc20 == _allowedERC20[i]) return true */\n      tag_319\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":55464:55468  true */\n      0x01\n      swap3\n        /* \"source/Marketplace.sol\":55292:55510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":55426:55468  if (erc20 == _allowedERC20[i]) return true */\n    tag_319:\n        /* \"source/Marketplace.sol\":55406:55409  i++ */\n      dup1\n      tag_320\n      dup2\n      tag_183\n      jump\t// in\n    tag_320:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":55369:55480  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      jump(tag_313)\n    tag_314:\n      pop\n        /* \"source/Marketplace.sol\":55497:55502  false */\n      0x00\n      swap3\n        /* \"source/Marketplace.sol\":55292:55510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":60577:61869  function sellNFT(... */\n    tag_116:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60820:60851  _allowedCollections[collection] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60820:60839  _allowedCollections */\n      0x03\n        /* \"source/Marketplace.sol\":60820:60851  _allowedCollections[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/Marketplace.sol\":60798:60905  require(... */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10457:10459   */\n      0x20\n        /* \"source/Marketplace.sol\":60798:60905  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10439:10460   */\n      mstore\n        /* \"#utility.yul\":10496:10498   */\n      0x1a\n        /* \"#utility.yul\":10476:10494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10469:10499   */\n      mstore\n        /* \"#utility.yul\":10535:10563   */\n      0x4e6f7420616c6c6f776564204e465420636f6c6c656374696f6e000000000000\n        /* \"#utility.yul\":10515:10533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10508:10564   */\n      mstore\n        /* \"#utility.yul\":10581:10599   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":60798:60905  require(... */\n      tag_228\n        /* \"#utility.yul\":10255:10605   */\n      jump\n        /* \"source/Marketplace.sol\":60798:60905  require(... */\n    tag_328:\n        /* \"source/Marketplace.sol\":60962:60999  IERC721(collection).ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4478:4503   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":61003:61013  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60962:60989  IERC721(collection).ownerOf */\n      dup7\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":4451:4469   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":60962:60999  IERC721(collection).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_334\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60962:61013  IERC721(collection).ownerOf(_tokenId) == msg.sender */\n      and\n      eq\n        /* \"source/Marketplace.sol\":60940:61066  require(... */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11068:11070   */\n      0x20\n        /* \"source/Marketplace.sol\":60940:61066  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11050:11071   */\n      mstore\n        /* \"#utility.yul\":11107:11109   */\n      0x19\n        /* \"#utility.yul\":11087:11105   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11080:11110   */\n      mstore\n        /* \"#utility.yul\":11146:11173   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":11126:11144   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11119:11174   */\n      mstore\n        /* \"#utility.yul\":11191:11209   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":60940:61066  require(... */\n      tag_228\n        /* \"#utility.yul\":10866:11215   */\n      jump\n        /* \"source/Marketplace.sol\":60940:61066  require(... */\n    tag_336:\n        /* \"source/Marketplace.sol\":61093:61094  0 */\n      0x00\n        /* \"source/Marketplace.sol\":61085:61090  price */\n      dup3\n        /* \"source/Marketplace.sol\":61085:61094  price > 0 */\n      gt\n        /* \"source/Marketplace.sol\":61077:61130  require(price > 0, \"Price must be greater than zero\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11422:11424   */\n      0x20\n        /* \"source/Marketplace.sol\":61077:61130  require(price > 0, \"Price must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11404:11425   */\n      mstore\n        /* \"#utility.yul\":11461:11463   */\n      0x1f\n        /* \"#utility.yul\":11441:11459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11434:11464   */\n      mstore\n        /* \"#utility.yul\":11500:11533   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":11480:11498   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11473:11534   */\n      mstore\n        /* \"#utility.yul\":11551:11569   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":61077:61130  require(price > 0, \"Price must be greater than zero\") */\n      tag_228\n        /* \"#utility.yul\":11220:11575   */\n      jump\n        /* \"source/Marketplace.sol\":61077:61130  require(price > 0, \"Price must be greater than zero\") */\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":61145:61165  _erc20 != address(0) */\n      dup2\n      and\n      iszero\n        /* \"source/Marketplace.sol\":61141:61313  if (_erc20 != address(0)) {... */\n      tag_344\n      jumpi\n        /* \"source/Marketplace.sol\":61222:61244  isAllowedERC20(_erc20) */\n      tag_343\n        /* \"source/Marketplace.sol\":61237:61243  _erc20 */\n      dup2\n        /* \"source/Marketplace.sol\":61222:61236  isAllowedERC20 */\n      tag_101\n        /* \"source/Marketplace.sol\":61222:61244  isAllowedERC20(_erc20) */\n      jump\t// in\n    tag_343:\n        /* \"source/Marketplace.sol\":61222:61252  isAllowedERC20(_erc20) == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":61248:61252  true */\n      0x01\n        /* \"source/Marketplace.sol\":61222:61252  isAllowedERC20(_erc20) == true */\n      eq\n        /* \"source/Marketplace.sol\":61214:61301  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11782:11784   */\n      0x20\n        /* \"source/Marketplace.sol\":61214:61301  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11764:11785   */\n      mstore\n        /* \"#utility.yul\":11821:11823   */\n      0x2c\n        /* \"#utility.yul\":11801:11819   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11794:11824   */\n      mstore\n        /* \"#utility.yul\":11860:11894   */\n      0x54686973204552433230206e6f7420616c6c6f77656420617320612074726164\n        /* \"#utility.yul\":11840:11858   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11833:11895   */\n      mstore\n      shl(0xa0, 0x696e672063757272656e6379)\n        /* \"#utility.yul\":11911:11929   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11904:11946   */\n      mstore\n        /* \"#utility.yul\":11963:11982   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":61214:61301  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_228\n        /* \"#utility.yul\":11580:11988   */\n      jump\n        /* \"source/Marketplace.sol\":61214:61301  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n    tag_344:\n        /* \"source/Marketplace.sol\":61351:61515  SelledNFT(... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      dup8\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":61423:61433  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":61351:61515  SelledNFT(... */\n      dup4\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      swap2\n      dup6\n      and\n      0x80\n      dup5\n      add\n      mstore\n        /* \"source/Marketplace.sol\":61489:61504  block.timestamp */\n      timestamp\n        /* \"source/Marketplace.sol\":61351:61515  SelledNFT(... */\n      0xa0\n      dup5\n      add\n      mstore\n        /* \"source/Marketplace.sol\":61526:61595  IERC721(collection).transferFrom(msg.sender, address(this), _tokenId) */\n      swap3\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":61351:61515  SelledNFT(... */\n      swap2\n      swap3\n      swap2\n        /* \"source/Marketplace.sol\":61526:61558  IERC721(collection).transferFrom */\n      0x23b872dd\n      swap2\n        /* \"source/Marketplace.sol\":61526:61595  IERC721(collection).transferFrom(msg.sender, address(this), _tokenId) */\n      tag_347\n      swap2\n        /* \"source/Marketplace.sol\":61579:61583  this */\n      address\n      swap1\n        /* \"source/Marketplace.sol\":61400:61408  _tokenId */\n      dup10\n      swap1\n        /* \"source/Marketplace.sol\":61526:61595  IERC721(collection).transferFrom(msg.sender, address(this), _tokenId) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_347:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_348:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_350\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_350:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":61606:61630  _marketTokensAdd(newLot) */\n      tag_351\n        /* \"source/Marketplace.sol\":61623:61629  newLot */\n      dup2\n        /* \"source/Marketplace.sol\":61606:61622  _marketTokensAdd */\n      tag_352\n        /* \"source/Marketplace.sol\":61606:61630  _marketTokensAdd(newLot) */\n      jump\t// in\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":61647:61667  _erc20 == address(0) */\n      dup3\n      and\n        /* \"source/Marketplace.sol\":61643:61862  if (_erc20 == address(0)) {... */\n      tag_353\n      jumpi\n        /* \"source/Marketplace.sol\":61689:61759  PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":61711:61721  msg.sender */\n      caller\n        /* \"#utility.yul\":12290:12324   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12360:12375   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":12355:12357   */\n      0x20\n        /* \"#utility.yul\":12340:12358   */\n      dup4\n      add\n        /* \"#utility.yul\":12333:12376   */\n      mstore\n        /* \"#utility.yul\":12392:12410   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":12385:12419   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":12455:12470   */\n      dup5\n      and\n        /* \"#utility.yul\":12450:12452   */\n      0x60\n        /* \"#utility.yul\":12435:12453   */\n      dup3\n      add\n        /* \"#utility.yul\":12428:12471   */\n      mstore\n        /* \"#utility.yul\":12502:12505   */\n      0x80\n        /* \"#utility.yul\":12487:12506   */\n      dup2\n      add\n        /* \"#utility.yul\":12480:12515   */\n      dup6\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":61689:61759  PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price) */\n      swap1\n      mload\n      0x44f716b281fa3e96fbd6ef888a275ef2fdf8914960a4c57c0bef6ccaebf0df31\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":12239:12242   */\n      0xa0\n        /* \"source/Marketplace.sol\":61689:61759  PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price) */\n      add\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":61643:61862  if (_erc20 == address(0)) {... */\n      jump(tag_356)\n    tag_353:\n        /* \"source/Marketplace.sol\":61797:61850  PutUpForSale(msg.sender, collection, _tokenId, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":61810:61820  msg.sender */\n      caller\n        /* \"#utility.yul\":12795:12829   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12865:12880   */\n      dup8\n      and\n        /* \"#utility.yul\":12860:12862   */\n      0x20\n        /* \"#utility.yul\":12845:12863   */\n      dup3\n      add\n        /* \"#utility.yul\":12838:12881   */\n      mstore\n        /* \"#utility.yul\":12897:12915   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":12890:12924   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":12955:12957   */\n      0x60\n        /* \"#utility.yul\":12940:12958   */\n      dup2\n      add\n        /* \"#utility.yul\":12933:12967   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":61797:61850  PutUpForSale(msg.sender, collection, _tokenId, price) */\n      0xc68dc1f889fa3a215dcdd97178af6bd67fab7b34138eef18f4313aac53f5b364\n      swap1\n        /* \"#utility.yul\":12744:12747   */\n      0x80\n        /* \"#utility.yul\":12729:12748   */\n      add\n        /* \"source/Marketplace.sol\":61797:61850  PutUpForSale(msg.sender, collection, _tokenId, price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":61643:61862  if (_erc20 == address(0)) {... */\n    tag_356:\n        /* \"source/Marketplace.sol\":60750:61869  {... */\n      pop\n        /* \"source/Marketplace.sol\":60577:61869  function sellNFT(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":56185:56311  function getMyTokensAtSale() public view returns(SelledNFT[] memory) {... */\n    tag_119:\n        /* \"source/Marketplace.sol\":56234:56252  SelledNFT[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":56272:56303  getUserTokensAtSale(msg.sender) */\n      tag_360\n        /* \"source/Marketplace.sol\":56292:56302  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":56272:56291  getUserTokensAtSale */\n      tag_44\n        /* \"source/Marketplace.sol\":56272:56303  getUserTokensAtSale(msg.sender) */\n      jump\t// in\n    tag_360:\n        /* \"source/Marketplace.sol\":56265:56303  return getUserTokensAtSale(msg.sender) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":56185:56311  function getMyTokensAtSale() public view returns(SelledNFT[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":59387:60569  function buyNFT(address collection, uint256 tokenId)... */\n    tag_123:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_363:\n        /* \"source/Marketplace.sol\":59512:59536  SelledNFT memory lotInfo */\n      0x00\n        /* \"source/Marketplace.sol\":59539:59575  marketTokensGet(collection, tokenId) */\n      tag_366\n        /* \"source/Marketplace.sol\":59555:59565  collection */\n      dup4\n        /* \"source/Marketplace.sol\":59567:59574  tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":59539:59554  marketTokensGet */\n      tag_87\n        /* \"source/Marketplace.sol\":59539:59575  marketTokensGet(collection, tokenId) */\n      jump\t// in\n    tag_366:\n        /* \"source/Marketplace.sol\":59595:59613  lotInfo.collection */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":59512:59575  SelledNFT memory lotInfo = marketTokensGet(collection, tokenId) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59595:59627  lotInfo.collection != address(0) */\n      and\n        /* \"source/Marketplace.sol\":59586:59656  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7124:7126   */\n      0x20\n        /* \"source/Marketplace.sol\":59586:59656  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7106:7127   */\n      mstore\n        /* \"#utility.yul\":7163:7165   */\n      0x18\n        /* \"#utility.yul\":7143:7161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7136:7166   */\n      mstore\n      shl(0x40, 0x54686973204e4654206973206e6f7420666f722073616c65)\n        /* \"#utility.yul\":7182:7200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7175:7229   */\n      mstore\n        /* \"#utility.yul\":7246:7264   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":59586:59656  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_228\n        /* \"#utility.yul\":6922:7270   */\n      jump\n        /* \"source/Marketplace.sol\":59586:59656  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n    tag_367:\n        /* \"source/Marketplace.sol\":59714:59721  lotInfo */\n      dup1\n        /* \"source/Marketplace.sol\":59714:59727  lotInfo.price */\n      0x60\n      add\n      mload\n        /* \"source/Marketplace.sol\":59701:59710  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":59701:59727  msg.value >= lotInfo.price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":59693:59770  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13180:13182   */\n      0x20\n        /* \"source/Marketplace.sol\":59693:59770  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13162:13183   */\n      mstore\n        /* \"#utility.yul\":13219:13221   */\n      0x26\n        /* \"#utility.yul\":13199:13217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13192:13222   */\n      mstore\n        /* \"#utility.yul\":13258:13292   */\n      0x596f752068617665206e6f74207061696420656e6f75676820666f7220746869\n        /* \"#utility.yul\":13238:13256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13231:13293   */\n      mstore\n      shl(0xd0, 0x73206974656d)\n        /* \"#utility.yul\":13309:13327   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13302:13338   */\n      mstore\n        /* \"#utility.yul\":13355:13374   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":59693:59770  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n      tag_228\n        /* \"#utility.yul\":12978:13380   */\n      jump\n        /* \"source/Marketplace.sol\":59693:59770  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n    tag_369:\n        /* \"source/Marketplace.sol\":59833:59846  lotInfo.erc20 */\n      0x80\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59833:59860  lotInfo.erc20 == address(0) */\n      and\n      iszero\n        /* \"source/Marketplace.sol\":59825:59891  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13587:13589   */\n      0x20\n        /* \"source/Marketplace.sol\":59825:59891  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13569:13590   */\n      mstore\n        /* \"#utility.yul\":13626:13628   */\n      0x1a\n        /* \"#utility.yul\":13606:13624   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13599:13629   */\n      mstore\n        /* \"#utility.yul\":13665:13693   */\n      0x5468697320746f6b656e2073656c6c6564206279204552433230000000000000\n        /* \"#utility.yul\":13645:13663   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13638:13694   */\n      mstore\n        /* \"#utility.yul\":13711:13729   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":59825:59891  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n      tag_228\n        /* \"#utility.yul\":13385:13735   */\n      jump\n        /* \"source/Marketplace.sol\":59825:59891  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n    tag_372:\n        /* \"source/Marketplace.sol\":59929:59938  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":59912:59926  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":59969:60019  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_375\n        /* \"source/Marketplace.sol\":59982:60007  SafeMath.div(amount, 100) */\n      tag_255\n        /* \"source/Marketplace.sol\":59929:59938  msg.value */\n      dup4\n        /* \"source/Marketplace.sol\":60003:60006  100 */\n      0x64\n        /* \"source/Marketplace.sol\":59982:59994  SafeMath.div */\n      tag_256\n        /* \"source/Marketplace.sol\":59982:60007  SafeMath.div(amount, 100) */\n      jump\t// in\n        /* \"source/Marketplace.sol\":59969:60019  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n    tag_375:\n        /* \"source/Marketplace.sol\":59949:60019  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":60052:60059  owner() */\n      tag_377\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":60052:60059  owner() */\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60034:60059  lotInfo.seller == owner() */\n      and\n        /* \"source/Marketplace.sol\":60034:60041  lotInfo */\n      dup4\n        /* \"source/Marketplace.sol\":60034:60048  lotInfo.seller */\n      0x40\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60034:60059  lotInfo.seller == owner() */\n      and\n      sub\n        /* \"source/Marketplace.sol\":60030:60074  if (lotInfo.seller == owner()) feeAmount = 0 */\n      tag_378\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":60073:60074  0 */\n      0x00\n        /* \"source/Marketplace.sol\":60030:60074  if (lotInfo.seller == owner()) feeAmount = 0 */\n    tag_378:\n        /* \"source/Marketplace.sol\":60085:60106  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":60109:60140  SafeMath.sub(amount, feeAmount) */\n      tag_379\n        /* \"source/Marketplace.sol\":60122:60128  amount */\n      dup4\n        /* \"source/Marketplace.sol\":60130:60139  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":60109:60121  SafeMath.sub */\n      tag_261\n        /* \"source/Marketplace.sol\":60109:60140  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_379:\n        /* \"source/Marketplace.sol\":60085:60140  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":60161:60168  lotInfo */\n      dup4\n        /* \"source/Marketplace.sol\":60161:60175  lotInfo.seller */\n      0x40\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60153:60185  payable(lotInfo.seller).transfer */\n      and\n        /* \"source/Marketplace.sol\":60153:60200  payable(lotInfo.seller).transfer(amountWithFee) */\n      0x08fc\n        /* \"source/Marketplace.sol\":60186:60199  amountWithFee */\n      dup3\n        /* \"source/Marketplace.sol\":60153:60200  payable(lotInfo.seller).transfer(amountWithFee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_381\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_381:\n      pop\n        /* \"source/Marketplace.sol\":60215:60228  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":60211:60298  if (feeAmount > 0) {... */\n      tag_382\n      jumpi\n        /* \"source/Marketplace.sol\":60253:60265  _feeReceiver */\n      sload(0x08)\n        /* \"source/Marketplace.sol\":60245:60286  payable(_feeReceiver).transfer(feeAmount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60253:60265  _feeReceiver */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":60245:60286  payable(_feeReceiver).transfer(feeAmount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"source/Marketplace.sol\":60276:60285  feeAmount */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":60253:60265  _feeReceiver */\n      0x00\n        /* \"source/Marketplace.sol\":60245:60286  payable(_feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":60253:60265  _feeReceiver */\n      dup2\n        /* \"source/Marketplace.sol\":60245:60286  payable(_feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":60276:60285  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":60253:60265  _feeReceiver */\n      dup9\n        /* \"source/Marketplace.sol\":60245:60286  payable(_feeReceiver).transfer(feeAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_384\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_384:\n      pop\n        /* \"source/Marketplace.sol\":60211:60298  if (feeAmount > 0) {... */\n    tag_382:\n        /* \"source/Marketplace.sol\":60326:60344  lotInfo.collection */\n      dup4\n      mload\n        /* \"source/Marketplace.sol\":60386:60401  lotInfo.tokenId */\n      0x20\n      dup6\n      add\n      mload\n        /* \"source/Marketplace.sol\":60318:60402  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60318:60358  IERC721(lotInfo.collection).transferFrom */\n      swap1\n      swap3\n      and\n      swap2\n      0x23b872dd\n      swap2\n        /* \"source/Marketplace.sol\":60318:60402  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      tag_385\n      swap2\n        /* \"source/Marketplace.sol\":60367:60371  this */\n      address\n      swap2\n        /* \"source/Marketplace.sol\":60374:60384  msg.sender */\n      caller\n      swap2\n        /* \"source/Marketplace.sol\":60318:60402  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_385:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_386\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_386:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_388\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_388:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":60413:60450  _marketTokensDel(collection, tokenId) */\n      tag_389\n        /* \"source/Marketplace.sol\":60430:60440  collection */\n      dup7\n        /* \"source/Marketplace.sol\":60442:60449  tokenId */\n      dup7\n        /* \"source/Marketplace.sol\":60413:60429  _marketTokensDel */\n      tag_272\n        /* \"source/Marketplace.sol\":60413:60450  _marketTokensDel(collection, tokenId) */\n      jump\t// in\n    tag_389:\n        /* \"source/Marketplace.sol\":60472:60486  lotInfo.seller */\n      0x40\n      dup1\n      dup6\n      add\n      mload\n        /* \"source/Marketplace.sol\":60500:60518  lotInfo.collection */\n      dup6\n      mload\n        /* \"source/Marketplace.sol\":60520:60535  lotInfo.tokenId */\n      0x20\n      dup1\n      dup9\n      add\n      mload\n        /* \"source/Marketplace.sol\":60537:60550  lotInfo.price */\n      0x60\n      dup1\n      dup11\n      add\n      mload\n        /* \"source/Marketplace.sol\":60468:60551  Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price) */\n      dup7\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14055:14070   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":14037:14071   */\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60488:60498  msg.sender */\n      caller\n        /* \"#utility.yul\":14087:14105   */\n      swap5\n      dup2\n      add\n        /* \"#utility.yul\":14080:14123   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":14159:14174   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":14139:14157   */\n      swap5\n      dup3\n      add\n        /* \"#utility.yul\":14132:14175   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":14191:14209   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":14184:14218   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":14249:14252   */\n      0x80\n        /* \"#utility.yul\":14234:14253   */\n      dup3\n      add\n        /* \"#utility.yul\":14227:14262   */\n      mstore\n        /* \"source/Marketplace.sol\":60468:60551  Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price) */\n      0xbab4aa6b2d5c0935e0e2937d1f73655848f670d43bf6f0c7e9e11e635bb5d86f\n      swap1\n        /* \"#utility.yul\":13986:13989   */\n      0xa0\n        /* \"#utility.yul\":13971:13990   */\n      add\n        /* \"source/Marketplace.sol\":60468:60551  Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":59501:60569  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":59387:60569  function buyNFT(address collection, uint256 tokenId)... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":56977:57084  function getTokensAtSale() public view returns (SelledNFT[] memory) {... */\n    tag_130:\n        /* \"source/Marketplace.sol\":57025:57043  SelledNFT[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":57063:57076  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":57056:57076  return _marketTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_394:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_395\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      dup6\n      dup8\n      add\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      dup3\n      and\n      swap4\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup6\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_394)\n    tag_395:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":56977:57084  function getTokensAtSale() public view returns (SelledNFT[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":61877:62462  function deSellNFT(address collection, uint256 tokenId) public {... */\n    tag_135:\n        /* \"source/Marketplace.sol\":61951:61973  SelledNFT memory token */\n      0x00\n        /* \"source/Marketplace.sol\":61976:62012  marketTokensGet(collection, tokenId) */\n      tag_398\n        /* \"source/Marketplace.sol\":61992:62002  collection */\n      dup4\n        /* \"source/Marketplace.sol\":62004:62011  tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":61976:61991  marketTokensGet */\n      tag_87\n        /* \"source/Marketplace.sol\":61976:62012  marketTokensGet(collection, tokenId) */\n      jump\t// in\n    tag_398:\n        /* \"source/Marketplace.sol\":62032:62048  token.collection */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":61951:62012  SelledNFT memory token = marketTokensGet(collection, tokenId) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":62032:62062  token.collection != address(0) */\n      and\n        /* \"source/Marketplace.sol\":62023:62099  require( token.collection != address(0), \"Token not founded at marketplace\") */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14475:14477   */\n      0x20\n        /* \"source/Marketplace.sol\":62023:62099  require( token.collection != address(0), \"Token not founded at marketplace\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14457:14478   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14494:14512   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14487:14517   */\n      mstore\n        /* \"#utility.yul\":14553:14587   */\n      0x546f6b656e206e6f7420666f756e646564206174206d61726b6574706c616365\n        /* \"#utility.yul\":14533:14551   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14526:14588   */\n      mstore\n        /* \"#utility.yul\":14605:14623   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":62023:62099  require( token.collection != address(0), \"Token not founded at marketplace\") */\n      tag_228\n        /* \"#utility.yul\":14273:14629   */\n      jump\n        /* \"source/Marketplace.sol\":62023:62099  require( token.collection != address(0), \"Token not founded at marketplace\") */\n    tag_399:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":62113:62123  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":62113:62134  msg.sender != owner() */\n      eq\n        /* \"source/Marketplace.sol\":62110:62222  if(msg.sender != owner()) {... */\n      tag_404\n      jumpi\n        /* \"source/Marketplace.sol\":62173:62178  token */\n      dup1\n        /* \"source/Marketplace.sol\":62173:62185  token.seller */\n      0x40\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":62159:62185  msg.sender == token.seller */\n      and\n        /* \"source/Marketplace.sol\":62159:62169  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":62159:62185  msg.sender == token.seller */\n      and\n      eq\n        /* \"source/Marketplace.sol\":62151:62210  require(msg.sender == token.seller, \"This is not your NFT\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14836:14838   */\n      0x20\n        /* \"source/Marketplace.sol\":62151:62210  require(msg.sender == token.seller, \"This is not your NFT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14818:14839   */\n      mstore\n        /* \"#utility.yul\":14875:14877   */\n      0x14\n        /* \"#utility.yul\":14855:14873   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14848:14878   */\n      mstore\n      shl(0x62, 0x151a1a5cc81a5cc81b9bdd081e5bdd5c88139195)\n        /* \"#utility.yul\":14894:14912   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14887:14937   */\n      mstore\n        /* \"#utility.yul\":14954:14972   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":62151:62210  require(msg.sender == token.seller, \"This is not your NFT\") */\n      tag_228\n        /* \"#utility.yul\":14634:14978   */\n      jump\n        /* \"source/Marketplace.sol\":62151:62210  require(msg.sender == token.seller, \"This is not your NFT\") */\n    tag_404:\n        /* \"source/Marketplace.sol\":62240:62245  token */\n      dup1\n        /* \"source/Marketplace.sol\":62240:62256  token.collection */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":62232:62270  IERC721(token.collection).transferFrom */\n      and\n      0x23b872dd\n        /* \"source/Marketplace.sol\":62279:62283  this */\n      address\n        /* \"source/Marketplace.sol\":62286:62291  token */\n      dup4\n        /* \"source/Marketplace.sol\":62286:62298  token.seller */\n      0x40\n      add\n      mload\n        /* \"source/Marketplace.sol\":62300:62305  token */\n      dup5\n        /* \"source/Marketplace.sol\":62300:62313  token.tokenId */\n      0x20\n      add\n      mload\n        /* \"source/Marketplace.sol\":62232:62314  IERC721(token.collection).transferFrom(address(this), token.seller, token.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_407\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_407:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_408\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_408:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_410\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_410:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":62325:62373  _marketTokensDel(token.collection,token.tokenId) */\n      tag_411\n        /* \"source/Marketplace.sol\":62342:62347  token */\n      dup2\n        /* \"source/Marketplace.sol\":62342:62358  token.collection */\n      0x00\n      add\n      mload\n        /* \"source/Marketplace.sol\":62359:62364  token */\n      dup3\n        /* \"source/Marketplace.sol\":62359:62372  token.tokenId */\n      0x20\n      add\n      mload\n        /* \"source/Marketplace.sol\":62325:62341  _marketTokensDel */\n      tag_272\n        /* \"source/Marketplace.sol\":62325:62373  _marketTokensDel(token.collection,token.tokenId) */\n      jump\t// in\n    tag_411:\n        /* \"source/Marketplace.sol\":62408:62420  token.seller */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n        /* \"source/Marketplace.sol\":62422:62438  token.collection */\n      dup3\n      mload\n        /* \"source/Marketplace.sol\":62440:62453  token.tokenId */\n      0x20\n      dup5\n      add\n      mload\n        /* \"source/Marketplace.sol\":62391:62454  WithdrawFromSale(token.seller, token.collection, token.tokenId) */\n      swap3\n      mload\n      0xcfd975662262e48e8c2b68605e79d409da1b108bdc941f32d355c4cf11d35925\n      swap4\n      tag_412\n      swap4\n        /* \"source/Marketplace.sol\":62408:62420  token.seller */\n      swap3\n        /* \"source/Marketplace.sol\":62422:62438  token.collection */\n      swap2\n        /* \"source/Marketplace.sol\":62391:62454  WithdrawFromSale(token.seller, token.collection, token.tokenId) */\n      tag_267\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":61940:62462  {... */\n      pop\n        /* \"source/Marketplace.sol\":61877:62462  function deSellNFT(address collection, uint256 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":55042:55168  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_143:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_415\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_415:\n        /* \"source/Marketplace.sol\":55129:55160  _allowedERC20 = newAllowedERC20 */\n      dup1\n      mload\n      tag_219\n      swap1\n        /* \"source/Marketplace.sol\":55129:55142  _allowedERC20 */\n      0x04\n      swap1\n        /* \"source/Marketplace.sol\":55129:55160  _allowedERC20 = newAllowedERC20 */\n      0x20\n      dup5\n      add\n      swap1\n      tag_418\n      jump\t// in\n        /* \"source/Marketplace.sol\":54370:54485  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n    tag_147:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_420\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_420:\n        /* \"source/Marketplace.sol\":54447:54459  _feeReceiver */\n      0x08\n        /* \"source/Marketplace.sol\":54447:54477  _feeReceiver = _newFeeReceiver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":54370:54485  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_151:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_423\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_423:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":3014:3036  newOwner != address(0) */\n      dup2\n      and\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15185:15187   */\n      0x20\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15167:15188   */\n      mstore\n        /* \"#utility.yul\":15224:15226   */\n      0x26\n        /* \"#utility.yul\":15204:15222   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15197:15227   */\n      mstore\n        /* \"#utility.yul\":15263:15297   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15243:15261   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15236:15298   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":15314:15332   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15307:15343   */\n      mstore\n        /* \"#utility.yul\":15360:15379   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_228\n        /* \"#utility.yul\":14983:15385   */\n      jump\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_425:\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      tag_428\n        /* \"source/Marketplace.sol\":3109:3117  newOwner */\n      dup2\n        /* \"source/Marketplace.sol\":3090:3108  _transferOwnership */\n      tag_311\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_428:\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":55717:55978  function withdrawERC20(address erc20) public onlyOwner {... */\n    tag_155:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_430\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_158\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_430:\n        /* \"source/Marketplace.sol\":55840:55870  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55864:55868  this */\n      address\n        /* \"source/Marketplace.sol\":55840:55870  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5581:5632   */\n      mstore\n        /* \"source/Marketplace.sol\":55805:55810  erc20 */\n      dup2\n      swap1\n        /* \"source/Marketplace.sol\":55783:55795  IERC20 token */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55840:55855  token.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":5554:5572   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":55840:55870  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_434\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_434:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_435\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_435:\n        /* \"source/Marketplace.sol\":55822:55870  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":55881:55886  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55881:55895  token.transfer */\n      and\n      0xa9059cbb\n        /* \"source/Marketplace.sol\":55896:55903  owner() */\n      tag_436\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":55896:55903  owner() */\n    tag_436:\n        /* \"source/Marketplace.sol\":55881:55913  token.transfer(owner(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10168:10200   */\n      swap1\n      swap2\n      and\n        /* \"source/Marketplace.sol\":55881:55913  token.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10150:10201   */\n      mstore\n        /* \"#utility.yul\":10217:10235   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10210:10244   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10123:10141   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":55881:55913  token.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_439\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_439:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_440\n      swap2\n      swap1\n      tag_441\n      jump\t// in\n    tag_440:\n      pop\n        /* \"source/Marketplace.sol\":55929:55970  WithdrawERC20(msg.sender, erc20, balance) */\n      0x33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb29\n        /* \"source/Marketplace.sol\":55943:55953  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":55955:55960  erc20 */\n      dup5\n        /* \"source/Marketplace.sol\":55962:55969  balance */\n      dup4\n        /* \"source/Marketplace.sol\":55929:55970  WithdrawERC20(msg.sender, erc20, balance) */\n      mload(0x40)\n      tag_412\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n        /* \"source/Marketplace.sol\":2184:2316  function _checkOwner() internal view virtual {... */\n    tag_158:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":736:746  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":2248:2271  owner() == _msgSender() */\n      eq\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15874:15876   */\n      0x20\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15856:15877   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15893:15911   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15886:15916   */\n      mstore\n        /* \"#utility.yul\":15952:15986   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15932:15950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15925:15987   */\n      mstore\n        /* \"#utility.yul\":16004:16022   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_228\n        /* \"#utility.yul\":15672:16028   */\n      jump\n        /* \"source/Marketplace.sol\":35741:35839  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_256:\n        /* \"source/Marketplace.sol\":35799:35806  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_451\n        /* \"source/Marketplace.sol\":35830:35831  b */\n      dup3\n        /* \"source/Marketplace.sol\":35826:35827  a */\n      dup5\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_452\n      jump\t// in\n    tag_451:\n        /* \"source/Marketplace.sol\":35819:35831  return a / b */\n      swap4\n        /* \"source/Marketplace.sol\":35741:35839  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":35342:35440  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_257:\n        /* \"source/Marketplace.sol\":35400:35407  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_451\n        /* \"source/Marketplace.sol\":35431:35432  b */\n      dup3\n        /* \"source/Marketplace.sol\":35427:35428  a */\n      dup5\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_455\n      jump\t// in\n        /* \"source/Marketplace.sol\":34985:35083  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_261:\n        /* \"source/Marketplace.sol\":35043:35050  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_451\n        /* \"source/Marketplace.sol\":35074:35075  b */\n      dup3\n        /* \"source/Marketplace.sol\":35070:35071  a */\n      dup5\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_458\n      jump\t// in\n        /* \"source/Marketplace.sol\":6528:6733  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_263:\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_460\n        /* \"source/Marketplace.sol\":6649:6654  token */\n      dup5\n        /* \"source/Marketplace.sol\":6679:6706  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"source/Marketplace.sol\":6708:6712  from */\n      dup6\n        /* \"source/Marketplace.sol\":6714:6716  to */\n      dup6\n        /* \"source/Marketplace.sol\":6718:6723  value */\n      dup6\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_461\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_461:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"source/Marketplace.sol\":6629:6648  _callOptionalReturn */\n      tag_462\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_460:\n        /* \"source/Marketplace.sol\":6528:6733  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":52743:53728  function _marketTokensDel(address collection, uint256 tokenId) internal {... */\n    tag_272:\n        /* \"source/Marketplace.sol\":52845:52858  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52859:52879  _marketTokens.length */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":52845:52909  _marketTokens[_marketTokens.length - 1].collection == collection */\n      dup5\n      and\n      swap2\n        /* \"source/Marketplace.sol\":52845:52858  _marketTokens */\n      swap1\n        /* \"source/Marketplace.sol\":52859:52883  _marketTokens.length - 1 */\n      tag_464\n      swap1\n        /* \"source/Marketplace.sol\":52882:52883  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":52859:52883  _marketTokens.length - 1 */\n      tag_458\n      jump\t// in\n    tag_464:\n        /* \"source/Marketplace.sol\":52845:52884  _marketTokens[_marketTokens.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_466\n      jumpi\n      tag_466\n      tag_174\n      jump\t// in\n    tag_466:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":52845:52895  _marketTokens[_marketTokens.length - 1].collection */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":52845:52909  _marketTokens[_marketTokens.length - 1].collection == collection */\n      eq\n        /* \"source/Marketplace.sol\":52844:53000  (_marketTokens[_marketTokens.length - 1].collection == collection)... */\n      dup1\n      iszero\n      tag_468\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":52941:52954  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52955:52975  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":52992:52999  tokenId */\n      dup3\n      swap2\n        /* \"source/Marketplace.sol\":52941:52954  _marketTokens */\n      swap1\n        /* \"source/Marketplace.sol\":52955:52979  _marketTokens.length - 1 */\n      tag_469\n      swap1\n        /* \"source/Marketplace.sol\":52978:52979  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":52955:52979  _marketTokens.length - 1 */\n      tag_458\n      jump\t// in\n    tag_469:\n        /* \"source/Marketplace.sol\":52941:52980  _marketTokens[_marketTokens.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_471\n      jumpi\n      tag_471\n      tag_174\n      jump\t// in\n    tag_471:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":52941:52988  _marketTokens[_marketTokens.length - 1].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":52941:52999  _marketTokens[_marketTokens.length - 1].tokenId == tokenId */\n      eq\n        /* \"source/Marketplace.sol\":52844:53000  (_marketTokens[_marketTokens.length - 1].collection == collection)... */\n    tag_468:\n        /* \"source/Marketplace.sol\":52826:53189  if (... */\n      iszero\n      tag_473\n      jumpi\n        /* \"source/Marketplace.sol\":53044:53057  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53058:53078  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":53027:53043  _userTokensCount */\n      0x07\n      swap2\n        /* \"source/Marketplace.sol\":53027:53090  _userTokensCount[_marketTokens[_marketTokens.length -1].seller] */\n      0x00\n      swap2\n        /* \"source/Marketplace.sol\":53058:53081  _marketTokens.length -1 */\n      tag_474\n      swap1\n        /* \"source/Marketplace.sol\":53080:53081  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":53058:53081  _marketTokens.length -1 */\n      tag_458\n      jump\t// in\n    tag_474:\n        /* \"source/Marketplace.sol\":53044:53082  _marketTokens[_marketTokens.length -1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_476\n      jumpi\n      tag_476\n      tag_174\n      jump\t// in\n    tag_476:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":53044:53089  _marketTokens[_marketTokens.length -1].seller */\n      0x02\n        /* \"source/Marketplace.sol\":53044:53082  _marketTokens[_marketTokens.length -1] */\n      0x06\n      swap1\n      swap4\n      mul\n      add\n        /* \"source/Marketplace.sol\":53044:53089  _marketTokens[_marketTokens.length -1].seller */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":53027:53090  _userTokensCount[_marketTokens[_marketTokens.length -1].seller] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":53027:53092  _userTokensCount[_marketTokens[_marketTokens.length -1].seller]-- */\n      dup1\n      sload\n      swap2\n      tag_478\n      dup4\n      tag_479\n      jump\t// in\n    tag_478:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":53107:53141  _collectionTokensCount[collection] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":53107:53129  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":53107:53141  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":53107:53143  _collectionTokensCount[collection]-- */\n      dup1\n      sload\n      swap2\n      tag_480\n      dup4\n      tag_479\n      jump\t// in\n    tag_480:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":53158:53171  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53158:53177  _marketTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_482\n      jumpi\n      tag_482\n      tag_483\n      jump\t// in\n    tag_482:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      0x06\n      not(0x00)\n      swap1\n      swap4\n      add\n      swap3\n      dup4\n      mul\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x05\n      add\n      sstore\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":52826:53189  if (... */\n    tag_473:\n        /* \"source/Marketplace.sol\":53203:53212  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":53199:53721  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_485:\n        /* \"source/Marketplace.sol\":53222:53235  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53222:53242  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":53218:53242  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":53199:53721  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_486\n      jumpi\n        /* \"source/Marketplace.sol\":53318:53328  collection */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":53287:53328  _marketTokens[i].collection == collection */\n      and\n        /* \"source/Marketplace.sol\":53287:53300  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53301:53302  i */\n      dup3\n        /* \"source/Marketplace.sol\":53287:53303  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_489\n      jumpi\n      tag_489\n      tag_174\n      jump\t// in\n    tag_489:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":53287:53314  _marketTokens[i].collection */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":53287:53328  _marketTokens[i].collection == collection */\n      eq\n        /* \"source/Marketplace.sol\":53286:53404  (_marketTokens[i].collection == collection)... */\n      dup1\n      iszero\n      tag_491\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":53396:53403  tokenId */\n      dup2\n        /* \"source/Marketplace.sol\":53368:53381  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53382:53383  i */\n      dup3\n        /* \"source/Marketplace.sol\":53368:53384  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_493\n      jumpi\n      tag_493\n      tag_174\n      jump\t// in\n    tag_493:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":53368:53392  _marketTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":53368:53403  _marketTokens[i].tokenId == tokenId */\n      eq\n        /* \"source/Marketplace.sol\":53286:53404  (_marketTokens[i].collection == collection)... */\n    tag_491:\n        /* \"source/Marketplace.sol\":53264:53710  if (... */\n      iszero\n      tag_495\n      jumpi\n        /* \"source/Marketplace.sol\":53439:53455  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":53439:53480  _userTokensCount[_marketTokens[i].seller] */\n      0x00\n        /* \"source/Marketplace.sol\":53456:53469  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53470:53471  i */\n      dup4\n        /* \"source/Marketplace.sol\":53456:53472  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_497\n      jumpi\n      tag_497\n      tag_174\n      jump\t// in\n    tag_497:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":53456:53479  _marketTokens[i].seller */\n      0x02\n        /* \"source/Marketplace.sol\":53456:53472  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      add\n        /* \"source/Marketplace.sol\":53456:53479  _marketTokens[i].seller */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":53439:53480  _userTokensCount[_marketTokens[i].seller] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":53439:53482  _userTokensCount[_marketTokens[i].seller]-- */\n      dup1\n      sload\n      swap2\n      tag_499\n      dup4\n      tag_479\n      jump\t// in\n    tag_499:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":53501:53535  _collectionTokensCount[collection] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":53501:53523  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":53501:53535  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":53501:53537  _collectionTokensCount[collection]-- */\n      dup1\n      sload\n      swap2\n      tag_500\n      dup4\n      tag_479\n      jump\t// in\n    tag_500:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":53575:53588  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53589:53609  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":53589:53612  _marketTokens.length -1 */\n      tag_501\n      swap1\n        /* \"source/Marketplace.sol\":53611:53612  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":53589:53612  _marketTokens.length -1 */\n      tag_458\n      jump\t// in\n    tag_501:\n        /* \"source/Marketplace.sol\":53575:53613  _marketTokens[_marketTokens.length -1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_503\n      jumpi\n      tag_503\n      tag_174\n      jump\t// in\n    tag_503:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":53556:53569  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":53570:53571  i */\n      dup3\n        /* \"source/Marketplace.sol\":53556:53572  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_506\n      jumpi\n      tag_506\n      tag_174\n      jump\t// in\n    tag_506:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"source/Marketplace.sol\":53556:53613  _marketTokens[i] = _marketTokens[_marketTokens.length -1] */\n      dup3\n      sload\n        /* \"source/Marketplace.sol\":53556:53572  _marketTokens[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"source/Marketplace.sol\":53556:53613  _marketTokens[i] = _marketTokens[_marketTokens.length -1] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      dup3\n      sstore\n      0x01\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      sstore\n      0x02\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      dup1\n      sload\n      swap2\n      dup6\n      and\n      swap2\n      dup4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x03\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      sstore\n      0x04\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap5\n      and\n      swap2\n      and\n      or\n      swap1\n      swap2\n      sstore\n      0x05\n      swap2\n      dup3\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n        /* \"source/Marketplace.sol\":53632:53651  _marketTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_509\n      jumpi\n      tag_509\n      tag_483\n      jump\t// in\n    tag_509:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      0x06\n      not(0x00)\n      swap1\n      swap4\n      add\n      swap3\n      dup4\n      mul\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x05\n      add\n      sstore\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":52743:53728  function _marketTokensDel(address collection, uint256 tokenId) internal {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":53264:53710  if (... */\n    tag_495:\n        /* \"source/Marketplace.sol\":53244:53247  i++ */\n      dup1\n      tag_511\n      dup2\n      tag_183\n      jump\t// in\n    tag_511:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":53199:53721  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_485)\n    tag_486:\n      pop\n        /* \"source/Marketplace.sol\":52743:53728  function _marketTokensDel(address collection, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_311:\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      0x00\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      swap1\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"source/Marketplace.sol\":3349:3477  {... */\n      pop\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":52530:52737  function _marketTokensAdd(SelledNFT memory lotInfo) internal {... */\n    tag_352:\n        /* \"source/Marketplace.sol\":52602:52615  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52602:52629  _marketTokens.push(lotInfo) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      dup3\n      mload\n      0x06\n      swap2\n      dup3\n      mul\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      dup2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n      0x20\n      dup1\n      dup9\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1\n      dup6\n      add\n      sstore\n      0x40\n      dup1\n      dup10\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2\n      dup7\n      add\n      dup1\n      sload\n      swap2\n      dup9\n      and\n      swap2\n      dup6\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x60\n      dup10\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3\n      dup7\n      add\n      sstore\n      0x80\n      dup10\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4\n      dup7\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap8\n      and\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap5\n      sstore\n      0xa0\n      dup8\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"source/Marketplace.sol\":52640:52682  _collectionTokensCount[lotInfo.collection] */\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":52640:52684  _collectionTokensCount[lotInfo.collection]++ */\n      dup1\n      sload\n      swap2\n      tag_515\n      dup4\n      tag_183\n      jump\t// in\n    tag_515:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":52712:52726  lotInfo.seller */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":52695:52727  _userTokensCount[lotInfo.seller] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":52695:52711  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":52695:52727  _userTokensCount[lotInfo.seller] */\n      0x20\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":52695:52729  _userTokensCount[lotInfo.seller]++ */\n      dup1\n      sload\n      swap2\n      tag_516\n      dup4\n      tag_183\n      jump\t// in\n    tag_516:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":52530:52737  function _marketTokensAdd(SelledNFT memory lotInfo) internal {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":9231:9947  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_462:\n        /* \"source/Marketplace.sol\":9655:9678  bytes memory returndata */\n      0x00\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_519\n        /* \"source/Marketplace.sol\":9709:9713  data */\n      dup3\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":9689:9694  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":9681:9708  address(token).functionCall */\n      and\n      tag_520\n      swap1\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_519:\n        /* \"source/Marketplace.sol\":9765:9782  returndata.length */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":9655:9750  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":9765:9786  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":9761:9940  if (returndata.length > 0) {... */\n      tag_486\n      jumpi\n        /* \"source/Marketplace.sol\":9862:9872  returndata */\n      dup1\n        /* \"source/Marketplace.sol\":9851:9881  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_522\n      swap2\n      swap1\n      tag_441\n      jump\t// in\n    tag_522:\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_486\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17036:17038   */\n      0x20\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17018:17039   */\n      mstore\n        /* \"#utility.yul\":17075:17077   */\n      0x2a\n        /* \"#utility.yul\":17055:17073   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17048:17078   */\n      mstore\n        /* \"#utility.yul\":17114:17148   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":17094:17112   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17087:17149   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":17165:17183   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17158:17198   */\n      mstore\n        /* \"#utility.yul\":17215:17234   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_228\n        /* \"#utility.yul\":16834:17240   */\n      jump\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n    tag_520:\n        /* \"source/Marketplace.sol\":42949:42961  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_527\n        /* \"source/Marketplace.sol\":43003:43009  target */\n      dup5\n        /* \"source/Marketplace.sol\":43011:43015  data */\n      dup5\n        /* \"source/Marketplace.sol\":43017:43018  0 */\n      0x00\n        /* \"source/Marketplace.sol\":43020:43032  errorMessage */\n      dup6\n        /* \"source/Marketplace.sol\":42981:43002  functionCallWithValue */\n      tag_528\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_527:\n        /* \"source/Marketplace.sol\":42974:43033  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n    tag_528:\n        /* \"source/Marketplace.sol\":44068:44080  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":44126:44131  value */\n      dup3\n        /* \"source/Marketplace.sol\":44101:44122  address(this).balance */\n      selfbalance\n        /* \"source/Marketplace.sol\":44101:44131  address(this).balance >= value */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_530\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17447:17449   */\n      0x20\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17429:17450   */\n      mstore\n        /* \"#utility.yul\":17486:17488   */\n      0x26\n        /* \"#utility.yul\":17466:17484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17459:17489   */\n      mstore\n        /* \"#utility.yul\":17525:17559   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":17505:17523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17498:17560   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":17576:17594   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17569:17605   */\n      mstore\n        /* \"#utility.yul\":17622:17641   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_228\n        /* \"#utility.yul\":17245:17647   */\n      jump\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_530:\n        /* \"source/Marketplace.sol\":44186:44198  bool success */\n      0x00\n        /* \"source/Marketplace.sol\":44200:44223  bytes memory returndata */\n      dup1\n        /* \"source/Marketplace.sol\":44227:44233  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":44227:44238  target.call */\n      and\n        /* \"source/Marketplace.sol\":44246:44251  value */\n      dup6\n        /* \"source/Marketplace.sol\":44253:44257  data */\n      dup8\n        /* \"source/Marketplace.sol\":44227:44258  target.call{value: value}(data) */\n      mload(0x40)\n      tag_533\n      swap2\n      swap1\n      tag_534\n      jump\t// in\n    tag_533:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_537\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_536)\n    tag_537:\n      0x60\n      swap2\n      pop\n    tag_536:\n      pop\n        /* \"source/Marketplace.sol\":44185:44258  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_538\n        /* \"source/Marketplace.sol\":44303:44309  target */\n      dup8\n        /* \"source/Marketplace.sol\":44311:44318  success */\n      dup4\n        /* \"source/Marketplace.sol\":44320:44330  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":44332:44344  errorMessage */\n      dup8\n        /* \"source/Marketplace.sol\":44276:44302  verifyCallResultFromTarget */\n      tag_539\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_538:\n        /* \"source/Marketplace.sol\":44269:44345  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":46471:47115  function verifyCallResultFromTarget(... */\n    tag_539:\n        /* \"source/Marketplace.sol\":46656:46668  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":46685:46692  success */\n      dup4\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n      iszero\n      tag_541\n      jumpi\n        /* \"source/Marketplace.sol\":46713:46723  returndata */\n      dup3\n        /* \"source/Marketplace.sol\":46713:46730  returndata.length */\n      mload\n        /* \"source/Marketplace.sol\":46734:46735  0 */\n      0x00\n        /* \"source/Marketplace.sol\":46713:46735  returndata.length == 0 */\n      sub\n        /* \"source/Marketplace.sol\":46709:46999  if (returndata.length == 0) {... */\n      tag_545\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":40351:40370  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_545\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18401:18403   */\n      0x20\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18383:18404   */\n      mstore\n        /* \"#utility.yul\":18440:18442   */\n      0x1d\n        /* \"#utility.yul\":18420:18438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18413:18443   */\n      mstore\n        /* \"#utility.yul\":18479:18510   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":18459:18477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18452:18511   */\n      mstore\n        /* \"#utility.yul\":18528:18546   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_228\n        /* \"#utility.yul\":18199:18552   */\n      jump\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n    tag_545:\n      pop\n        /* \"source/Marketplace.sol\":47020:47030  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":47013:47030  return returndata */\n      jump(tag_527)\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n    tag_541:\n        /* \"source/Marketplace.sol\":47063:47096  _revert(returndata, errorMessage) */\n      tag_527\n        /* \"source/Marketplace.sol\":47071:47081  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":47083:47095  errorMessage */\n      dup4\n        /* \"source/Marketplace.sol\":47818:47835  returndata.length */\n      dup2\n      mload\n        /* \"source/Marketplace.sol\":47818:47839  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n      tag_553\n      jumpi\n        /* \"source/Marketplace.sol\":48050:48060  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":48044:48061  mload(returndata) */\n      mload\n        /* \"source/Marketplace.sol\":48107:48122  returndata_size */\n      dup1\n        /* \"source/Marketplace.sol\":48094:48104  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":48090:48092  32 */\n      0x20\n        /* \"source/Marketplace.sol\":48086:48105  add(32, returndata) */\n      add\n        /* \"source/Marketplace.sol\":48079:48123  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n    tag_553:\n        /* \"source/Marketplace.sol\":48177:48189  errorMessage */\n      dup1\n        /* \"source/Marketplace.sol\":48170:48190  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_556\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_217:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_428\n      swap2\n      swap1\n      tag_559\n      jump\t// in\n    tag_418:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_562\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_561:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_562\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_561)\n    tag_562:\n      pop\n      tag_563\n      swap3\n      swap2\n      pop\n      tag_559\n      jump\t// in\n    tag_563:\n      pop\n      swap1\n      jump\t// out\n    tag_559:\n    tag_564:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_563\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_564)\n        /* \"#utility.yul\":14:194   */\n    tag_38:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_573:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:330   */\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":274:305   */\n      dup2\n      and\n        /* \"#utility.yul\":264:306   */\n      dup2\n      eq\n        /* \"#utility.yul\":254:324   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":335:469   */\n    tag_567:\n        /* \"#utility.yul\":403:423   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":432:463   */\n      tag_161\n        /* \"#utility.yul\":403:423   */\n      dup2\n        /* \"#utility.yul\":432:463   */\n      tag_566\n      jump\t// in\n        /* \"#utility.yul\":474:721   */\n    tag_43:\n        /* \"#utility.yul\":533:539   */\n      0x00\n        /* \"#utility.yul\":586:588   */\n      0x20\n        /* \"#utility.yul\":574:583   */\n      dup3\n        /* \"#utility.yul\":565:572   */\n      dup5\n        /* \"#utility.yul\":561:584   */\n      sub\n        /* \"#utility.yul\":557:589   */\n      slt\n        /* \"#utility.yul\":554:606   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":602:603   */\n      0x00\n        /* \"#utility.yul\":599:600   */\n      dup1\n        /* \"#utility.yul\":592:604   */\n      revert\n        /* \"#utility.yul\":554:606   */\n    tag_579:\n        /* \"#utility.yul\":641:650   */\n      dup2\n        /* \"#utility.yul\":628:651   */\n      calldataload\n        /* \"#utility.yul\":660:691   */\n      tag_451\n        /* \"#utility.yul\":685:690   */\n      dup2\n        /* \"#utility.yul\":660:691   */\n      tag_566\n      jump\t// in\n        /* \"#utility.yul\":726:1165   */\n    tag_568:\n        /* \"#utility.yul\":843:855   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":839:860   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":827:861   */\n      dup4\n      mstore\n        /* \"#utility.yul\":910:914   */\n      0x20\n        /* \"#utility.yul\":899:915   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":893:916   */\n      mload\n        /* \"#utility.yul\":877:891   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":870:917   */\n      mstore\n        /* \"#utility.yul\":970:974   */\n      0x40\n        /* \"#utility.yul\":959:975   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":953:976   */\n      mload\n        /* \"#utility.yul\":949:981   */\n      dup3\n      and\n        /* \"#utility.yul\":933:947   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":926:982   */\n      mstore\n        /* \"#utility.yul\":1031:1035   */\n      0x60\n        /* \"#utility.yul\":1020:1036   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1014:1037   */\n      mload\n        /* \"#utility.yul\":998:1012   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":991:1038   */\n      mstore\n        /* \"#utility.yul\":1091:1095   */\n      0x80\n        /* \"#utility.yul\":1080:1096   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1074:1097   */\n      mload\n        /* \"#utility.yul\":1070:1102   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1054:1068   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":1047:1103   */\n      mstore\n        /* \"#utility.yul\":807:810   */\n      0xa0\n        /* \"#utility.yul\":1141:1157   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1135:1158   */\n      mload\n        /* \"#utility.yul\":1119:1133   */\n      swap2\n      add\n        /* \"#utility.yul\":1112:1159   */\n      mstore\n        /* \"#utility.yul\":726:1165   */\n      jump\t// out\n        /* \"#utility.yul\":1170:1879   */\n    tag_46:\n        /* \"#utility.yul\":1395:1397   */\n      0x20\n        /* \"#utility.yul\":1447:1468   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1517:1530   */\n      dup3\n      mload\n        /* \"#utility.yul\":1420:1438   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1539:1561   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1366:1370   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1395:1397   */\n      swap1\n        /* \"#utility.yul\":1618:1633   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1592:1594   */\n      0x40\n        /* \"#utility.yul\":1577:1595   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1366:1370   */\n      dup5\n        /* \"#utility.yul\":1661:1853   */\n    tag_583:\n        /* \"#utility.yul\":1675:1681   */\n      dup2\n        /* \"#utility.yul\":1672:1673   */\n      dup2\n        /* \"#utility.yul\":1669:1682   */\n      lt\n        /* \"#utility.yul\":1661:1853   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":1724:1771   */\n      tag_586\n        /* \"#utility.yul\":1767:1770   */\n      dup4\n        /* \"#utility.yul\":1758:1764   */\n      dup6\n        /* \"#utility.yul\":1752:1765   */\n      mload\n        /* \"#utility.yul\":1724:1771   */\n      tag_568\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":1828:1843   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1800:1804   */\n      0xc0\n        /* \"#utility.yul\":1791:1805   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1697:1698   */\n      0x01\n        /* \"#utility.yul\":1690:1699   */\n      add\n        /* \"#utility.yul\":1661:1853   */\n      jump(tag_583)\n    tag_585:\n      pop\n        /* \"#utility.yul\":1870:1873   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1170:1879   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2011   */\n    tag_164:\n        /* \"#utility.yul\":1945:1955   */\n      0x4e487b71\n        /* \"#utility.yul\":1940:1943   */\n      0xe0\n        /* \"#utility.yul\":1936:1956   */\n      shl\n        /* \"#utility.yul\":1933:1934   */\n      0x00\n        /* \"#utility.yul\":1926:1957   */\n      mstore\n        /* \"#utility.yul\":1976:1980   */\n      0x41\n        /* \"#utility.yul\":1973:1974   */\n      0x04\n        /* \"#utility.yul\":1966:1981   */\n      mstore\n        /* \"#utility.yul\":2000:2004   */\n      0x24\n        /* \"#utility.yul\":1997:1998   */\n      0x00\n        /* \"#utility.yul\":1990:2005   */\n      revert\n        /* \"#utility.yul\":2016:3137   */\n    tag_55:\n        /* \"#utility.yul\":2100:2106   */\n      0x00\n        /* \"#utility.yul\":2131:2133   */\n      0x20\n        /* \"#utility.yul\":2174:2176   */\n      dup1\n        /* \"#utility.yul\":2162:2171   */\n      dup4\n        /* \"#utility.yul\":2153:2160   */\n      dup6\n        /* \"#utility.yul\":2149:2172   */\n      sub\n        /* \"#utility.yul\":2145:2177   */\n      slt\n        /* \"#utility.yul\":2142:2194   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":2190:2191   */\n      0x00\n        /* \"#utility.yul\":2187:2188   */\n      dup1\n        /* \"#utility.yul\":2180:2192   */\n      revert\n        /* \"#utility.yul\":2142:2194   */\n    tag_589:\n        /* \"#utility.yul\":2230:2239   */\n      dup3\n        /* \"#utility.yul\":2217:2240   */\n      calldataload\n        /* \"#utility.yul\":2259:2277   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2300:2302   */\n      dup1\n        /* \"#utility.yul\":2292:2298   */\n      dup3\n        /* \"#utility.yul\":2289:2303   */\n      gt\n        /* \"#utility.yul\":2286:2320   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":2316:2317   */\n      0x00\n        /* \"#utility.yul\":2313:2314   */\n      dup1\n        /* \"#utility.yul\":2306:2318   */\n      revert\n        /* \"#utility.yul\":2286:2320   */\n    tag_590:\n        /* \"#utility.yul\":2354:2360   */\n      dup2\n        /* \"#utility.yul\":2343:2352   */\n      dup6\n        /* \"#utility.yul\":2339:2361   */\n      add\n        /* \"#utility.yul\":2329:2361   */\n      swap2\n      pop\n        /* \"#utility.yul\":2399:2406   */\n      dup6\n        /* \"#utility.yul\":2392:2396   */\n      0x1f\n        /* \"#utility.yul\":2388:2390   */\n      dup4\n        /* \"#utility.yul\":2384:2397   */\n      add\n        /* \"#utility.yul\":2380:2407   */\n      slt\n        /* \"#utility.yul\":2370:2425   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":2421:2422   */\n      0x00\n        /* \"#utility.yul\":2418:2419   */\n      dup1\n        /* \"#utility.yul\":2411:2423   */\n      revert\n        /* \"#utility.yul\":2370:2425   */\n    tag_591:\n        /* \"#utility.yul\":2457:2459   */\n      dup2\n        /* \"#utility.yul\":2444:2460   */\n      calldataload\n        /* \"#utility.yul\":2479:2481   */\n      dup2\n        /* \"#utility.yul\":2475:2477   */\n      dup2\n        /* \"#utility.yul\":2472:2482   */\n      gt\n        /* \"#utility.yul\":2469:2505   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":2485:2503   */\n      tag_593\n      tag_164\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":2531:2533   */\n      dup1\n        /* \"#utility.yul\":2528:2529   */\n      0x05\n        /* \"#utility.yul\":2524:2534   */\n      shl\n        /* \"#utility.yul\":2563:2565   */\n      0x40\n        /* \"#utility.yul\":2557:2566   */\n      mload\n        /* \"#utility.yul\":2626:2628   */\n      0x1f\n        /* \"#utility.yul\":2622:2629   */\n      not\n        /* \"#utility.yul\":2617:2619   */\n      0x3f\n        /* \"#utility.yul\":2613:2615   */\n      dup4\n        /* \"#utility.yul\":2609:2620   */\n      add\n        /* \"#utility.yul\":2605:2630   */\n      and\n        /* \"#utility.yul\":2597:2603   */\n      dup2\n        /* \"#utility.yul\":2593:2631   */\n      add\n        /* \"#utility.yul\":2681:2687   */\n      dup2\n        /* \"#utility.yul\":2669:2679   */\n      dup2\n        /* \"#utility.yul\":2666:2688   */\n      lt\n        /* \"#utility.yul\":2661:2663   */\n      dup6\n        /* \"#utility.yul\":2649:2659   */\n      dup3\n        /* \"#utility.yul\":2646:2664   */\n      gt\n        /* \"#utility.yul\":2643:2689   */\n      or\n        /* \"#utility.yul\":2640:2712   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":2692:2710   */\n      tag_595\n      tag_164\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":2728:2730   */\n      0x40\n        /* \"#utility.yul\":2721:2743   */\n      mstore\n        /* \"#utility.yul\":2778:2796   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2812:2827   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":2854:2865   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":2850:2870   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":2882:2901   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":2879:2918   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":2914:2915   */\n      0x00\n        /* \"#utility.yul\":2911:2912   */\n      dup1\n        /* \"#utility.yul\":2904:2916   */\n      revert\n        /* \"#utility.yul\":2879:2918   */\n    tag_596:\n        /* \"#utility.yul\":2938:2949   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2958:3106   */\n    tag_597:\n        /* \"#utility.yul\":2974:2980   */\n      dup3\n        /* \"#utility.yul\":2969:2972   */\n      dup6\n        /* \"#utility.yul\":2966:2981   */\n      lt\n        /* \"#utility.yul\":2958:3106   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":3040:3063   */\n      tag_600\n        /* \"#utility.yul\":3059:3062   */\n      dup6\n        /* \"#utility.yul\":3040:3063   */\n      tag_567\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":3028:3064   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2991:3003   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":3084:3096   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":2958:3106   */\n      jump(tag_597)\n    tag_599:\n        /* \"#utility.yul\":3125:3131   */\n      swap9\n        /* \"#utility.yul\":2016:3137   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3142:3457   */\n    tag_60:\n        /* \"#utility.yul\":3210:3216   */\n      0x00\n        /* \"#utility.yul\":3218:3224   */\n      dup1\n        /* \"#utility.yul\":3271:3273   */\n      0x40\n        /* \"#utility.yul\":3259:3268   */\n      dup4\n        /* \"#utility.yul\":3250:3257   */\n      dup6\n        /* \"#utility.yul\":3246:3269   */\n      sub\n        /* \"#utility.yul\":3242:3274   */\n      slt\n        /* \"#utility.yul\":3239:3291   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3284:3285   */\n      dup1\n        /* \"#utility.yul\":3277:3289   */\n      revert\n        /* \"#utility.yul\":3239:3291   */\n    tag_602:\n        /* \"#utility.yul\":3326:3335   */\n      dup3\n        /* \"#utility.yul\":3313:3336   */\n      calldataload\n        /* \"#utility.yul\":3345:3376   */\n      tag_603\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3345:3376   */\n      tag_566\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":3395:3400   */\n      swap5\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3432:3450   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3419:3451   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3142:3457   */\n      jump\t// out\n        /* \"#utility.yul\":3462:4135   */\n    tag_66:\n        /* \"#utility.yul\":3648:3650   */\n      0x20\n        /* \"#utility.yul\":3700:3721   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3770:3783   */\n      dup3\n      mload\n        /* \"#utility.yul\":3673:3691   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3792:3814   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3619:3623   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3648:3650   */\n      swap1\n        /* \"#utility.yul\":3871:3886   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3845:3847   */\n      0x40\n        /* \"#utility.yul\":3830:3848   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3619:3623   */\n      dup5\n        /* \"#utility.yul\":3914:4109   */\n    tag_605:\n        /* \"#utility.yul\":3928:3934   */\n      dup2\n        /* \"#utility.yul\":3925:3926   */\n      dup2\n        /* \"#utility.yul\":3922:3935   */\n      lt\n        /* \"#utility.yul\":3914:4109   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":3993:4006   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3989:4028   */\n      and\n        /* \"#utility.yul\":3977:4029   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4084:4099   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4049:4061   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4025:4026   */\n      0x01\n        /* \"#utility.yul\":3943:3952   */\n      add\n        /* \"#utility.yul\":3914:4109   */\n      jump(tag_605)\n        /* \"#utility.yul\":4514:4767   */\n    tag_89:\n        /* \"#utility.yul\":4702:4705   */\n      0xc0\n        /* \"#utility.yul\":4687:4706   */\n      dup2\n      add\n        /* \"#utility.yul\":4715:4761   */\n      tag_288\n        /* \"#utility.yul\":4691:4700   */\n      dup3\n        /* \"#utility.yul\":4743:4749   */\n      dup5\n        /* \"#utility.yul\":4715:4761   */\n      tag_568\n      jump\t// in\n        /* \"#utility.yul\":5643:6168   */\n    tag_115:\n        /* \"#utility.yul\":5729:5735   */\n      0x00\n        /* \"#utility.yul\":5737:5743   */\n      dup1\n        /* \"#utility.yul\":5745:5751   */\n      0x00\n        /* \"#utility.yul\":5753:5759   */\n      dup1\n        /* \"#utility.yul\":5806:5809   */\n      0x80\n        /* \"#utility.yul\":5794:5803   */\n      dup6\n        /* \"#utility.yul\":5785:5792   */\n      dup8\n        /* \"#utility.yul\":5781:5804   */\n      sub\n        /* \"#utility.yul\":5777:5810   */\n      slt\n        /* \"#utility.yul\":5774:5827   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":5823:5824   */\n      0x00\n        /* \"#utility.yul\":5820:5821   */\n      dup1\n        /* \"#utility.yul\":5813:5825   */\n      revert\n        /* \"#utility.yul\":5774:5827   */\n    tag_618:\n        /* \"#utility.yul\":5862:5871   */\n      dup5\n        /* \"#utility.yul\":5849:5872   */\n      calldataload\n        /* \"#utility.yul\":5881:5912   */\n      tag_619\n        /* \"#utility.yul\":5906:5911   */\n      dup2\n        /* \"#utility.yul\":5881:5912   */\n      tag_566\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":5931:5936   */\n      swap4\n      pop\n        /* \"#utility.yul\":5983:5985   */\n      0x20\n        /* \"#utility.yul\":5968:5986   */\n      dup6\n      add\n        /* \"#utility.yul\":5955:5987   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":6034:6036   */\n      0x40\n        /* \"#utility.yul\":6019:6037   */\n      dup6\n      add\n        /* \"#utility.yul\":6006:6038   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":6090:6092   */\n      0x60\n        /* \"#utility.yul\":6075:6093   */\n      dup6\n      add\n        /* \"#utility.yul\":6062:6094   */\n      calldataload\n        /* \"#utility.yul\":6103:6136   */\n      tag_620\n        /* \"#utility.yul\":6062:6094   */\n      dup2\n        /* \"#utility.yul\":6103:6136   */\n      tag_566\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5643:6168   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6173:6300   */\n    tag_174:\n        /* \"#utility.yul\":6234:6244   */\n      0x4e487b71\n        /* \"#utility.yul\":6229:6232   */\n      0xe0\n        /* \"#utility.yul\":6225:6245   */\n      shl\n        /* \"#utility.yul\":6222:6223   */\n      0x00\n        /* \"#utility.yul\":6215:6246   */\n      mstore\n        /* \"#utility.yul\":6265:6269   */\n      0x32\n        /* \"#utility.yul\":6262:6263   */\n      0x04\n        /* \"#utility.yul\":6255:6270   */\n      mstore\n        /* \"#utility.yul\":6289:6293   */\n      0x24\n        /* \"#utility.yul\":6286:6287   */\n      0x00\n        /* \"#utility.yul\":6279:6294   */\n      revert\n        /* \"#utility.yul\":6305:6432   */\n    tag_569:\n        /* \"#utility.yul\":6366:6376   */\n      0x4e487b71\n        /* \"#utility.yul\":6361:6364   */\n      0xe0\n        /* \"#utility.yul\":6357:6377   */\n      shl\n        /* \"#utility.yul\":6354:6355   */\n      0x00\n        /* \"#utility.yul\":6347:6378   */\n      mstore\n        /* \"#utility.yul\":6397:6401   */\n      0x11\n        /* \"#utility.yul\":6394:6395   */\n      0x04\n        /* \"#utility.yul\":6387:6402   */\n      mstore\n        /* \"#utility.yul\":6421:6425   */\n      0x24\n        /* \"#utility.yul\":6418:6419   */\n      0x00\n        /* \"#utility.yul\":6411:6426   */\n      revert\n        /* \"#utility.yul\":6437:6572   */\n    tag_183:\n        /* \"#utility.yul\":6476:6479   */\n      0x00\n        /* \"#utility.yul\":6497:6514   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6494:6537   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":6517:6535   */\n      tag_625\n      tag_569\n      jump\t// in\n    tag_625:\n      pop\n        /* \"#utility.yul\":6564:6565   */\n      0x01\n        /* \"#utility.yul\":6553:6566   */\n      add\n      swap1\n        /* \"#utility.yul\":6437:6572   */\n      jump\t// out\n        /* \"#utility.yul\":6577:6917   */\n    tag_229:\n        /* \"#utility.yul\":6779:6781   */\n      0x20\n        /* \"#utility.yul\":6761:6782   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6818:6820   */\n      0x10\n        /* \"#utility.yul\":6798:6816   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6791:6821   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":6852:6854   */\n      0x40\n        /* \"#utility.yul\":6837:6855   */\n      dup3\n      add\n        /* \"#utility.yul\":6830:6876   */\n      mstore\n        /* \"#utility.yul\":6908:6910   */\n      0x60\n        /* \"#utility.yul\":6893:6911   */\n      add\n      swap1\n        /* \"#utility.yul\":6577:6917   */\n      jump\t// out\n        /* \"#utility.yul\":7636:7820   */\n    tag_242:\n        /* \"#utility.yul\":7706:7712   */\n      0x00\n        /* \"#utility.yul\":7759:7761   */\n      0x20\n        /* \"#utility.yul\":7747:7756   */\n      dup3\n        /* \"#utility.yul\":7738:7745   */\n      dup5\n        /* \"#utility.yul\":7734:7757   */\n      sub\n        /* \"#utility.yul\":7730:7762   */\n      slt\n        /* \"#utility.yul\":7727:7779   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":7775:7776   */\n      0x00\n        /* \"#utility.yul\":7772:7773   */\n      dup1\n        /* \"#utility.yul\":7765:7777   */\n      revert\n        /* \"#utility.yul\":7727:7779   */\n    tag_630:\n      pop\n        /* \"#utility.yul\":7798:7814   */\n      mload\n      swap2\n        /* \"#utility.yul\":7636:7820   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8982:9357   */\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9240:9255   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":9222:9256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9292:9307   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9287:9289   */\n      0x20\n        /* \"#utility.yul\":9272:9290   */\n      dup3\n      add\n        /* \"#utility.yul\":9265:9308   */\n      mstore\n        /* \"#utility.yul\":9339:9341   */\n      0x40\n        /* \"#utility.yul\":9324:9342   */\n      dup2\n      add\n        /* \"#utility.yul\":9317:9351   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9172:9174   */\n      0x60\n        /* \"#utility.yul\":9157:9175   */\n      add\n      swap1\n        /* \"#utility.yul\":8982:9357   */\n      jump\t// out\n        /* \"#utility.yul\":10610:10861   */\n    tag_335:\n        /* \"#utility.yul\":10680:10686   */\n      0x00\n        /* \"#utility.yul\":10733:10735   */\n      0x20\n        /* \"#utility.yul\":10721:10730   */\n      dup3\n        /* \"#utility.yul\":10712:10719   */\n      dup5\n        /* \"#utility.yul\":10708:10731   */\n      sub\n        /* \"#utility.yul\":10704:10736   */\n      slt\n        /* \"#utility.yul\":10701:10753   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":10749:10750   */\n      0x00\n        /* \"#utility.yul\":10746:10747   */\n      dup1\n        /* \"#utility.yul\":10739:10751   */\n      revert\n        /* \"#utility.yul\":10701:10753   */\n    tag_639:\n        /* \"#utility.yul\":10781:10790   */\n      dup2\n        /* \"#utility.yul\":10775:10791   */\n      mload\n        /* \"#utility.yul\":10800:10831   */\n      tag_451\n        /* \"#utility.yul\":10825:10830   */\n      dup2\n        /* \"#utility.yul\":10800:10831   */\n      tag_566\n      jump\t// in\n        /* \"#utility.yul\":15390:15667   */\n    tag_441:\n        /* \"#utility.yul\":15457:15463   */\n      0x00\n        /* \"#utility.yul\":15510:15512   */\n      0x20\n        /* \"#utility.yul\":15498:15507   */\n      dup3\n        /* \"#utility.yul\":15489:15496   */\n      dup5\n        /* \"#utility.yul\":15485:15508   */\n      sub\n        /* \"#utility.yul\":15481:15513   */\n      slt\n        /* \"#utility.yul\":15478:15530   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":15526:15527   */\n      0x00\n        /* \"#utility.yul\":15523:15524   */\n      dup1\n        /* \"#utility.yul\":15516:15528   */\n      revert\n        /* \"#utility.yul\":15478:15530   */\n    tag_653:\n        /* \"#utility.yul\":15558:15567   */\n      dup2\n        /* \"#utility.yul\":15552:15568   */\n      mload\n        /* \"#utility.yul\":15611:15616   */\n      dup1\n        /* \"#utility.yul\":15604:15617   */\n      iszero\n        /* \"#utility.yul\":15597:15618   */\n      iszero\n        /* \"#utility.yul\":15590:15595   */\n      dup2\n        /* \"#utility.yul\":15587:15619   */\n      eq\n        /* \"#utility.yul\":15577:15637   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":15633:15634   */\n      0x00\n        /* \"#utility.yul\":15630:15631   */\n      dup1\n        /* \"#utility.yul\":15623:15635   */\n      revert\n        /* \"#utility.yul\":16033:16250   */\n    tag_452:\n        /* \"#utility.yul\":16073:16074   */\n      0x00\n        /* \"#utility.yul\":16099:16100   */\n      dup3\n        /* \"#utility.yul\":16089:16221   */\n      tag_657\n      jumpi\n        /* \"#utility.yul\":16143:16153   */\n      0x4e487b71\n        /* \"#utility.yul\":16138:16141   */\n      0xe0\n        /* \"#utility.yul\":16134:16154   */\n      shl\n        /* \"#utility.yul\":16131:16132   */\n      0x00\n        /* \"#utility.yul\":16124:16155   */\n      mstore\n        /* \"#utility.yul\":16178:16182   */\n      0x12\n        /* \"#utility.yul\":16175:16176   */\n      0x04\n        /* \"#utility.yul\":16168:16183   */\n      mstore\n        /* \"#utility.yul\":16206:16210   */\n      0x24\n        /* \"#utility.yul\":16203:16204   */\n      0x00\n        /* \"#utility.yul\":16196:16211   */\n      revert\n        /* \"#utility.yul\":16089:16221   */\n    tag_657:\n      pop\n        /* \"#utility.yul\":16235:16244   */\n      div\n      swap1\n        /* \"#utility.yul\":16033:16250   */\n      jump\t// out\n        /* \"#utility.yul\":16255:16423   */\n    tag_455:\n        /* \"#utility.yul\":16328:16337   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":16359:16368   */\n      dup2\n      iszero\n        /* \"#utility.yul\":16376:16391   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":16370:16392   */\n      dup5\n      eq\n        /* \"#utility.yul\":16356:16393   */\n      or\n        /* \"#utility.yul\":16346:16417   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":16397:16415   */\n      tag_288\n      tag_569\n      jump\t// in\n        /* \"#utility.yul\":16428:16556   */\n    tag_458:\n        /* \"#utility.yul\":16495:16504   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":16516:16527   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":16513:16550   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":16530:16548   */\n      tag_288\n      tag_569\n      jump\t// in\n        /* \"#utility.yul\":16561:16697   */\n    tag_479:\n        /* \"#utility.yul\":16600:16603   */\n      0x00\n        /* \"#utility.yul\":16628:16633   */\n      dup2\n        /* \"#utility.yul\":16618:16657   */\n      tag_666\n      jumpi\n        /* \"#utility.yul\":16637:16655   */\n      tag_666\n      tag_569\n      jump\t// in\n    tag_666:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":16673:16691   */\n      add\n      swap1\n        /* \"#utility.yul\":16561:16697   */\n      jump\t// out\n        /* \"#utility.yul\":16702:16829   */\n    tag_483:\n        /* \"#utility.yul\":16763:16773   */\n      0x4e487b71\n        /* \"#utility.yul\":16758:16761   */\n      0xe0\n        /* \"#utility.yul\":16754:16774   */\n      shl\n        /* \"#utility.yul\":16751:16752   */\n      0x00\n        /* \"#utility.yul\":16744:16775   */\n      mstore\n        /* \"#utility.yul\":16794:16798   */\n      0x31\n        /* \"#utility.yul\":16791:16792   */\n      0x04\n        /* \"#utility.yul\":16784:16799   */\n      mstore\n        /* \"#utility.yul\":16818:16822   */\n      0x24\n        /* \"#utility.yul\":16815:16816   */\n      0x00\n        /* \"#utility.yul\":16808:16823   */\n      revert\n        /* \"#utility.yul\":17652:17902   */\n    tag_570:\n        /* \"#utility.yul\":17737:17738   */\n      0x00\n        /* \"#utility.yul\":17747:17860   */\n    tag_671:\n        /* \"#utility.yul\":17761:17767   */\n      dup4\n        /* \"#utility.yul\":17758:17759   */\n      dup2\n        /* \"#utility.yul\":17755:17768   */\n      lt\n        /* \"#utility.yul\":17747:17860   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":17837:17848   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":17831:17849   */\n      mload\n        /* \"#utility.yul\":17818:17829   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":17811:17850   */\n      mstore\n        /* \"#utility.yul\":17783:17785   */\n      0x20\n        /* \"#utility.yul\":17776:17786   */\n      add\n        /* \"#utility.yul\":17747:17860   */\n      jump(tag_671)\n    tag_673:\n      pop\n      pop\n        /* \"#utility.yul\":17894:17895   */\n      0x00\n        /* \"#utility.yul\":17876:17892   */\n      swap2\n      add\n        /* \"#utility.yul\":17869:17896   */\n      mstore\n        /* \"#utility.yul\":17652:17902   */\n      jump\t// out\n        /* \"#utility.yul\":17907:18194   */\n    tag_534:\n        /* \"#utility.yul\":18036:18039   */\n      0x00\n        /* \"#utility.yul\":18074:18080   */\n      dup3\n        /* \"#utility.yul\":18068:18081   */\n      mload\n        /* \"#utility.yul\":18090:18156   */\n      tag_675\n        /* \"#utility.yul\":18149:18155   */\n      dup2\n        /* \"#utility.yul\":18144:18147   */\n      dup5\n        /* \"#utility.yul\":18137:18141   */\n      0x20\n        /* \"#utility.yul\":18129:18135   */\n      dup8\n        /* \"#utility.yul\":18125:18142   */\n      add\n        /* \"#utility.yul\":18090:18156   */\n      tag_570\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":18172:18188   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":17907:18194   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18557:18953   */\n    tag_556:\n        /* \"#utility.yul\":18706:18708   */\n      0x20\n        /* \"#utility.yul\":18695:18704   */\n      dup2\n        /* \"#utility.yul\":18688:18709   */\n      mstore\n        /* \"#utility.yul\":18669:18673   */\n      0x00\n        /* \"#utility.yul\":18738:18744   */\n      dup3\n        /* \"#utility.yul\":18732:18745   */\n      mload\n        /* \"#utility.yul\":18781:18787   */\n      dup1\n        /* \"#utility.yul\":18776:18778   */\n      0x20\n        /* \"#utility.yul\":18765:18774   */\n      dup5\n        /* \"#utility.yul\":18761:18779   */\n      add\n        /* \"#utility.yul\":18754:18788   */\n      mstore\n        /* \"#utility.yul\":18797:18876   */\n      tag_678\n        /* \"#utility.yul\":18869:18875   */\n      dup2\n        /* \"#utility.yul\":18864:18866   */\n      0x40\n        /* \"#utility.yul\":18853:18862   */\n      dup6\n        /* \"#utility.yul\":18849:18867   */\n      add\n        /* \"#utility.yul\":18844:18846   */\n      0x20\n        /* \"#utility.yul\":18836:18842   */\n      dup8\n        /* \"#utility.yul\":18832:18847   */\n      add\n        /* \"#utility.yul\":18797:18876   */\n      tag_570\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":18937:18939   */\n      0x1f\n        /* \"#utility.yul\":18916:18931   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":18912:18941   */\n      and\n        /* \"#utility.yul\":18897:18942   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":18944:18946   */\n      0x40\n        /* \"#utility.yul\":18893:18947   */\n      add\n      swap3\n        /* \"#utility.yul\":18557:18953   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220529b4f4d10d61f8c30b9b39cfe469759a012c2d5300a5faec809f30b53ed207064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2267": {
									"entryPoint": null,
									"id": 2267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2716": {
									"entryPoint": null,
									"id": 2716,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_130": {
									"entryPoint": 380,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_fromMemory": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"increment_t_uint256": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2388:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "206:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "216:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "231:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "216:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "301:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "310:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "303:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "303:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "303:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "260:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "271:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "286:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "291:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "282:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "282:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "295:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "278:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "278:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "267:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "267:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "257:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:50:1"
															},
															"nodeType": "YulIf",
															"src": "247:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:1",
														"type": ""
													}
												],
												"src": "146:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "403:848:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "452:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "461:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "464:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "454:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "454:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "454:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "431:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "439:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "427:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "427:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "446:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "423:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "416:35:1"
															},
															"nodeType": "YulIf",
															"src": "413:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "477:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "487:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "481:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "509:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "519:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "513:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "532:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "550:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "554:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "546:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "558:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "542:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:18:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "536:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "583:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "585:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "585:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "585:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "575:2:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "579:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "572:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "572:10:1"
															},
															"nodeType": "YulIf",
															"src": "569:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "614:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "631:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "624:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:10:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "618:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "643:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "663:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "657:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "647:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "713:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "717:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "709:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "709:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "726:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "705:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "693:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "693:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "679:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "790:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "792:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "792:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "792:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "749:10:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "761:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "746:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "746:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "769:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "766:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "743:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:46:1"
															},
															"nodeType": "YulIf",
															"src": "740:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "828:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "832:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "821:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "852:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "863:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "856:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "885:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "893:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "878:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "905:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "916:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "924:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "936:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "966:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "954:15:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "971:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:24:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1002:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1011:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1014:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1004:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1004:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "989:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "997:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "986:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:15:1"
															},
															"nodeType": "YulIf",
															"src": "983:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1027:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1042:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1050:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1031:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1118:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1139:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1174:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "1144:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1144:34:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1132:47:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1132:47:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1192:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1203:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1208:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1199:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1199:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1192:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1073:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1078:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1070:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1086:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1088:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1099:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1104:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1095:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1095:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1088:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1066:3:1",
																"statements": []
															},
															"src": "1062:159:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1230:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1239:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "377:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "385:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "393:5:1",
														"type": ""
													}
												],
												"src": "328:923:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1438:579:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1485:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1487:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1487:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1459:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1468:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1480:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:33:1"
															},
															"nodeType": "YulIf",
															"src": "1448:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1510:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1530:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1524:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1514:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1549:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1571:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1563:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1553:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1604:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1613:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1616:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1606:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1606:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1606:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1592:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1600:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1589:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:14:1"
															},
															"nodeType": "YulIf",
															"src": "1586:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1629:82:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1694:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1703:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1639:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1639:72:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1720:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1730:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1788:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1808:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1819:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1832:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1869:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1848:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1836:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1902:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1911:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1904:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1904:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1904:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1888:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1898:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1885:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:16:1"
															},
															"nodeType": "YulIf",
															"src": "1882:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1927:84:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1981:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1992:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2003:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1937:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:74:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1380:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1391:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1403:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1411:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1419:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1427:6:1",
														"type": ""
													}
												],
												"src": "1256:761:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2054:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2078:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2074:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2064:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2111:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2128:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2022:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2201:185:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2240:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2261:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2268:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2273:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2264:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2264:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2254:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2254:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2254:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2305:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2308:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2298:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2298:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2336:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2326:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2326:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2217:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2228:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2224:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2214:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:17:1"
															},
															"nodeType": "YulIf",
															"src": "2211:140:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2360:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2371:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2378:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2367:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2183:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2193:3:1",
														"type": ""
													}
												],
												"src": "2154:232:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let _3 := sub(shl(64, 1), 1)\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, _4), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D40 CODESIZE SUB DUP1 PUSH3 0x2D40 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0x32D JUMP JUMPDEST PUSH3 0x44 CALLER PUSH3 0x17C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x11D JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x77 JUMPI PUSH3 0x77 PUSH3 0x3B3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xCD JUMPI PUSH3 0xCD PUSH3 0x3B3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0x114 DUP2 PUSH3 0x3C9 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x52 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH3 0x135 JUMPI DUP3 PUSH3 0x137 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 MLOAD PUSH3 0x171 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1CC JUMP JUMPDEST POP POP POP POP POP PUSH3 0x3F1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x224 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x224 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP PUSH3 0x232 SWAP3 SWAP2 POP PUSH3 0x236 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x237 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT ISZERO PUSH3 0x2B1 JUMPI PUSH3 0x2B1 PUSH3 0x24D JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH3 0x2D9 JUMPI PUSH3 0x2D9 PUSH3 0x24D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH3 0x322 JUMPI PUSH3 0x312 DUP3 PUSH3 0x263 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH3 0x2FE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x36A DUP9 DUP4 DUP10 ADD PUSH3 0x280 JUMP JUMPDEST SWAP6 POP PUSH3 0x37A PUSH1 0x20 DUP9 ADD PUSH3 0x263 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3A7 DUP8 DUP3 DUP9 ADD PUSH3 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x3EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x293F DUP1 PUSH3 0x401 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785FA7CE GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xD55A34E4 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE9E4E160 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD55A34E4 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xDA24548A EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98F748BD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x98F748BD EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xA096C5A2 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xC8F77899 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5211AC2E GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x6629E913 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5211AC2E EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x527F2902 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10603023 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x19C8C1C5 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1ED56D44 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x27713536 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x2B205D14 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x3A51F383 EQ PUSH2 0x259 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2699 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0xDC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x26DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0xFB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x16C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x1764 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x383 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0x1901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x191C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x1946 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x686 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53F JUMPI PUSH2 0x53F PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x578 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x565 PUSH2 0x23BE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x55D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x683 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x671 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5DB JUMPI PUSH2 0x5DB PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x657 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x66D SWAP1 PUSH2 0x275E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x67B DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57F JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x686 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DD PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x716 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x703 PUSH2 0x23BE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6FB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x683 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x744 JUMPI PUSH2 0x744 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x80C JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x776 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x7F2 JUMPI PUSH2 0x7F2 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x808 SWAP1 PUSH2 0x275E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x816 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71D JUMP JUMPDEST PUSH2 0x826 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84C PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x88A DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x829 JUMP JUMPDEST POP PUSH2 0x89F PUSH1 0x2 PUSH1 0x0 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x90C JUMPI PUSH1 0x2 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BF PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x904 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x94F DUP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20796F75722062616C616E636520746F20706179 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 PUSH2 0xBEB PUSH2 0xBE3 DUP4 PUSH1 0x64 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1B69 JUMP JUMPDEST SWAP1 POP PUSH2 0xBFF PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC1F JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP4 DUP4 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xC4A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 CALLER SWAP1 DUP5 PUSH2 0x1B81 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC6C JUMPI PUSH1 0x8 SLOAD PUSH2 0xC6C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP6 PUSH2 0x1B81 JUMP JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xCA2 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xCDE DUP10 DUP10 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD DUP9 MLOAD PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x80 DUP1 DUP14 ADD MLOAD PUSH1 0x60 DUP1 DUP16 ADD MLOAD DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE CALLER SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP8 AND DUP6 DUP10 ADD MSTORE DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xA3D27CC8AC4E1915B6A89CE3E468D87AEB3CAF011A47E236DB61D098E452870C SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDCB PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE3F PUSH2 0x23BE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xF4E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE69 JUMPI PUSH2 0xE69 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xEB3 JUMPI POP DUP3 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE9F JUMPI PUSH2 0xE9F PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xF3C JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xECB JUMPI PUSH2 0xECB PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 POP PUSH2 0xF50 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0xF46 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE42 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9B JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFBE PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0xFC8 PUSH1 0x0 PUSH2 0x1F7F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFEB JUMPI PUSH2 0xFEB PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1013 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x101D DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFCE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F776564204E465420636F6C6C656374696F6E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x124F JUMPI PUSH2 0x11E9 DUP2 PUSH2 0xFCA JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x696E672063757272656E6379 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP8 SWAP1 MSTORE CALLER DUP4 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x12AF SWAP2 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x12EA DUP2 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1354 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x44F716B281FA3E96FBD6EF888A275EF2FDF8914960A4C57C0BEF6CCAEBF0DF31 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xC68DC1F889FA3A215DCDD97178AF6BD67FAB7B34138EEF18F4313AAC53F5B364 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13B7 CALLER PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F2 DUP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x14AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x73206974656D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0x1516 PUSH2 0xBE3 DUP4 PUSH1 0x64 PUSH2 0x1B56 JUMP JUMPDEST SWAP1 POP PUSH2 0x152A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x154A JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP4 DUP4 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1595 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x160E SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x163C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x164A DUP7 DUP7 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP6 ADD MLOAD DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH1 0x60 DUP1 DUP11 ADD MLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xBAB4AA6B2D5C0935E0E2937D1F73655848F670D43BF6F0C7E9E11E635BB5D86F SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x16E5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1770 DUP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E646564206174206D61726B6574706C616365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1838 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A1A5CC81A5CC81B9BDD081E5BDD5C88139195 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1874 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x18B8 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP3 MLOAD PUSH32 0xCFD975662262E48E8C2B68605E79D409DA1B108BDC941F32D355C4CF11D35925 SWAP4 PUSH2 0x18F4 SWAP4 SWAP3 SWAP2 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1909 PUSH2 0x1AFC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x90C SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x1924 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x194E PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH2 0x19BC DUP2 PUSH2 0x1F7F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x19C7 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A34 SWAP2 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1A57 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x27FB JUMP JUMPDEST POP PUSH32 0x33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29 CALLER DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x281D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x2856 JUMP JUMPDEST PUSH2 0x1BD9 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x215C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x1BFB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1C0B JUMPI PUSH2 0x1C0B PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1C64 JUMPI POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1C40 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1C50 JUMPI PUSH2 0x1C50 PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1D56 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1C7F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1C8F JUMPI PUSH2 0x1C8F PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1CC8 DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1CF1 DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1F7A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D80 JUMPI PUSH2 0x1D80 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1DCA JUMPI POP DUP2 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DB6 JUMPI PUSH2 0x1DB6 PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1F68 JUMPI PUSH1 0x7 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1DE6 JUMPI PUSH2 0x1DE6 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1E1F DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1E48 DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH2 0x1E5D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E6D JUMPI PUSH2 0x1E6D PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E8E JUMPI PUSH2 0x1E8E PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE DUP1 SLOAD DUP1 PUSH2 0x1F15 JUMPI PUSH2 0x1F15 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x1F72 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 MLOAD PUSH1 0x6 SWAP2 DUP3 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP6 ADD SSTORE PUSH1 0x40 DUP1 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP7 ADD DUP1 SLOAD SWAP2 DUP9 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP7 ADD SSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP7 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2127 DUP4 PUSH2 0x275E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2154 DUP4 PUSH2 0x275E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1F7A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x21CF SWAP2 SWAP1 PUSH2 0x27FB JUMP JUMPDEST PUSH2 0x1F7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x223D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2245 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x22A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x22C2 SWAP2 SWAP1 PUSH2 0x28BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2315 DUP8 DUP4 DUP4 DUP8 PUSH2 0x2320 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x238F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2388 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST POP DUP2 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x223D DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x23A4 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19BC SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2482 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2482 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x244D JUMP JUMPDEST POP PUSH2 0x248E SWAP3 SWAP2 POP PUSH2 0x2492 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x248E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x686 DUP2 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B62 DUP2 PUSH2 0x24C0 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2586 JUMPI PUSH2 0x2573 DUP4 DUP6 MLOAD PUSH2 0x24FD JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0xC0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2560 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F9 PUSH2 0x2592 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x261E JUMPI PUSH2 0x261E PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x263C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2652 DUP6 PUSH2 0x24D5 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2641 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x268B DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2586 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x26B5 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0xF50 DUP3 DUP5 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2709 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2727 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2770 JUMPI PUSH2 0x2770 PUSH2 0x2748 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B62 DUP2 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x283A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF50 JUMPI PUSH2 0xF50 PUSH2 0x2748 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF50 PUSH2 0x2748 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2878 JUMPI PUSH2 0x2878 PUSH2 0x2748 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2899 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x28CC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28F5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SWAP12 0x4F 0x4D LT 0xD6 0x1F DUP13 ADDRESS 0xB9 0xB3 SWAP13 INVALID CHAINID SWAP8 MSIZE LOG0 SLT 0xC2 0xD5 ADDRESS EXP 0x5F 0xAE 0xC8 MULMOD RETURN SIGNEXTEND MSTORE8 0xED KECCAK256 PUSH17 0x64736F6C63430008120033000000000000 ",
							"sourceMap": "50386:12079:0:-:0;;;51629:1;51604:26;;53744:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:32;736:10;1740:18;:32::i;:::-;49087:5;49077:15;;-1:-1:-1;;;;49077:15:0;;;53915:183;53935:13;:20;53931:1;:24;53915:183;;;54017:4;53977:19;:37;53997:13;54011:1;53997:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;53977:37:0;-1:-1:-1;;;;;53977:37:0;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;54036:18;54068:13;54082:1;54068:16;;;;;;;;:::i;:::-;;;;;;;;;;;;54036:50;;;;;;;-1:-1:-1;54036:50:0;;;;;;;;;;-1:-1:-1;;;;;;54036:50:0;-1:-1:-1;;;;;54036:50:0;;;;;;;;;53957:3;;;;:::i;:::-;;;;53915:183;;;-1:-1:-1;;;;;;54124:27:0;;;54123:58;;54168:13;54123:58;;;54155:10;54123:58;54108:12;:73;;-1:-1:-1;;;;;;54108:73:0;-1:-1:-1;;;;;54108:73:0;;;;;;;;;;-1:-1:-1;54192:22:0;;;54225:30;;;;:13;;:30;;;;;:::i;:::-;;53744:519;;;;50386:12079;;3286:191;3360:16;3379:6;;-1:-1:-1;;;;;3396:17:0;;;-1:-1:-1;;;;;;3396:17:0;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;50386:12079::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;50386:12079:0;-1:-1:-1;;;;;50386:12079:0;;;;;;;;;;;-1:-1:-1;50386:12079:0;;;;;;;-1:-1:-1;50386:12079:0;;;-1:-1:-1;50386:12079:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:1;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:923::-;393:5;446:3;439:4;431:6;427:17;423:27;413:55;;464:1;461;454:12;413:55;487:13;;519:4;-1:-1:-1;;;;;572:10:1;;;569:36;;;585:18;;:::i;:::-;631:2;628:1;624:10;663:2;657:9;726:2;722:7;717:2;713;709:11;705:25;697:6;693:38;781:6;769:10;766:22;761:2;749:10;746:18;743:46;740:72;;;792:18;;:::i;:::-;828:2;821:22;878:18;;;954:15;;;950:24;;;912:15;;;;-1:-1:-1;986:15:1;;;983:35;;;1014:1;1011;1004:12;983:35;1050:2;1042:6;1038:15;1027:26;;1062:159;1078:6;1073:3;1070:15;1062:159;;;1144:34;1174:3;1144:34;:::i;:::-;1132:47;;1199:12;;;;1095;;;;1062:159;;;1239:6;328:923;-1:-1:-1;;;;;;;328:923:1:o;1256:761::-;1403:6;1411;1419;1427;1480:3;1468:9;1459:7;1455:23;1451:33;1448:53;;;1497:1;1494;1487:12;1448:53;1524:16;;-1:-1:-1;;;;;1589:14:1;;;1586:34;;;1616:1;1613;1606:12;1586:34;1639:72;1703:7;1694:6;1683:9;1679:22;1639:72;:::i;:::-;1629:82;;1730:49;1775:2;1764:9;1760:18;1730:49;:::i;:::-;1720:59;;1819:2;1808:9;1804:18;1798:25;1788:35;;1869:2;1858:9;1854:18;1848:25;1832:41;;1898:2;1888:8;1885:16;1882:36;;;1914:1;1911;1904:12;1882:36;;1937:74;2003:7;1992:8;1981:9;1977:24;1937:74;:::i;:::-;1927:84;;;1256:761;;;;;;;:::o;2022:127::-;2083:10;2078:3;2074:20;2071:1;2064:31;2114:4;2111:1;2104:15;2138:4;2135:1;2128:15;2154:232;2193:3;2214:17;;;2211:140;;2273:10;2268:3;2264:20;2261:1;2254:31;2308:4;2305:1;2298:15;2336:4;2333:1;2326:15;2211:140;-1:-1:-1;2378:1:1;2367:13;;2154:232::o;:::-;50386:12079:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_440": {
									"entryPoint": 8540,
									"id": 440,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_73": {
									"entryPoint": 6908,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_marketTokensAdd_2537": {
									"entryPoint": 8143,
									"id": 2537,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_marketTokensDel_2649": {
									"entryPoint": 7135,
									"id": 2649,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2242": {
									"entryPoint": null,
									"id": 2242,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_130": {
									"entryPoint": 8063,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNFT_3440": {
									"entryPoint": 5052,
									"id": 3440,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyNFTbyERC20_3301": {
									"entryPoint": 2320,
									"id": 3301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deSellNFT_3629": {
									"entryPoint": 5988,
									"id": 3629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_1824": {
									"entryPoint": 6998,
									"id": 1824,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_2067": {
									"entryPoint": 8773,
									"id": 2067,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2003": {
									"entryPoint": 8750,
									"id": 2003,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAllowedCollections_2746": {
									"entryPoint": 3425,
									"id": 2746,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAllowedERC20_2827": {
									"entryPoint": 3926,
									"id": 2827,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCollectionTokensAtSale_3111": {
									"entryPoint": 1675,
									"id": 3111,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getFeeReceiver_2724": {
									"entryPoint": null,
									"id": 2724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyTokensAtSale_2960": {
									"entryPoint": 5036,
									"id": 2960,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokensAtSaleCount_3035": {
									"entryPoint": null,
									"id": 3035,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokensAtSale_3045": {
									"entryPoint": 5825,
									"id": 3045,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTradeFee_2935": {
									"entryPoint": null,
									"id": 2935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserTokensAtSale_3026": {
									"entryPoint": 1261,
									"id": 3026,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isAllowedERC20_2858": {
									"entryPoint": 4042,
									"id": 2858,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1931": {
									"entryPoint": null,
									"id": 1931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isMarketPlaceContract_2440": {
									"entryPoint": null,
									"id": 2440,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@marketTokensGet_2512": {
									"entryPoint": 3639,
									"id": 2512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1809": {
									"entryPoint": 7017,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_2276": {
									"entryPoint": null,
									"id": 2276,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_87": {
									"entryPoint": 4022,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_218": {
									"entryPoint": 7041,
									"id": 218,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sellNFT_3555": {
									"entryPoint": 4142,
									"id": 3555,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setAllowedCollections_2805": {
									"entryPoint": 2078,
									"id": 2805,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setAllowedERC20_2818": {
									"entryPoint": 6401,
									"id": 2818,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeReceiver_2736": {
									"entryPoint": 6428,
									"id": 2736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTradeFee_2947": {
									"entryPoint": 1248,
									"id": 2947,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1794": {
									"entryPoint": 7029,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_110": {
									"entryPoint": 6470,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2198": {
									"entryPoint": 8992,
									"id": 2198,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@version_2429": {
									"entryPoint": null,
									"id": 2429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawERC20_2927": {
									"entryPoint": 6591,
									"id": 2927,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawWei_2887": {
									"entryPoint": 3523,
									"id": 2887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 10206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address": {
									"entryPoint": 9960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_SelledNFT": {
									"entryPoint": 9469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10170,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_SelledNFT_$2426_memory_ptr__to_t_struct$_SelledNFT_$2426_memory_ptr__fromStack_reversed": {
									"entryPoint": 9946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 10345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 9408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18955:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "244:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "267:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "293:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "298:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "289:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "289:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "302:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "285:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "285:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "274:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "274:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "264:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "264:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "257:50:1"
															},
															"nodeType": "YulIf",
															"src": "254:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "233:5:1",
														"type": ""
													}
												],
												"src": "199:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "384:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "394:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "416:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "403:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "394:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "457:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "432:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "432:31:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "363:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "374:5:1",
														"type": ""
													}
												],
												"src": "335:134:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "544:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "590:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "602:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "592:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "592:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "592:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "565:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "574:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "586:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "557:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:32:1"
															},
															"nodeType": "YulIf",
															"src": "554:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "615:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "641:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "628:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "619:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "685:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "660:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "660:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "700:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "710:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "510:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "521:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "533:6:1",
														"type": ""
													}
												],
												"src": "474:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "779:386:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "789:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "807:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "812:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "803:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "799:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "793:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "834:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "849:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "843:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "843:12:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "857:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "827:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "881:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "886:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "877:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "903:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "910:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "899:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "893:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "937:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "942:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "963:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "970:4:1",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "959:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "959:16:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "953:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "953:23:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "978:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "926:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1002:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1007:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1024:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1031:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1020:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1020:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1014:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1014:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "991:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1058:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1063:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1054:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1084:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:4:1",
																								"type": "",
																								"value": "0x80"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1080:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1080:16:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "1074:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1074:23:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1099:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1070:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1070:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1047:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1123:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1128:4:1",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1145:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1152:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1141:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1141:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1135:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1135:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1112:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1112:47:1"
														}
													]
												},
												"name": "abi_encode_struct_SelledNFT",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "763:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "770:3:1",
														"type": ""
													}
												],
												"src": "726:439:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:504:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1385:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1395:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1389:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1406:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1424:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1410:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1454:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1465:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1447:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1477:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1488:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1481:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1503:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1517:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1507:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1546:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1554:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1539:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1570:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1581:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1570:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1604:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1622:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1630:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1608:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1642:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1651:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1646:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1710:143:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1758:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1752:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1752:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_SelledNFT",
																				"nodeType": "YulIdentifier",
																				"src": "1724:27:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1724:47:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1724:47:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1784:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1795:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:1",
																					"type": "",
																					"value": "0xc0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1791:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1791:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1784:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1818:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1832:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1840:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1828:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1828:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1818:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1672:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1675:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1669:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1683:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1685:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1694:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1697:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1690:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1690:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1685:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1665:3:1",
																"statements": []
															},
															"src": "1661:192:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1862:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1870:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1862:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1355:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1366:4:1",
														"type": ""
													}
												],
												"src": "1170:709:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1916:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1940:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1945:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1976:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1884:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2111:1026:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2121:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2131:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2125:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2178:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2187:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2190:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2180:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2180:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2180:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2153:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2149:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2174:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2145:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:32:1"
															},
															"nodeType": "YulIf",
															"src": "2142:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2203:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2230:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2217:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2207:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2249:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2259:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2253:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2304:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2313:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2316:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2306:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2306:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2306:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2292:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2300:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2289:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:14:1"
															},
															"nodeType": "YulIf",
															"src": "2286:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2329:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2343:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2354:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2333:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2409:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2411:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2411:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2388:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2392:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2384:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2384:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2399:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2380:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:35:1"
															},
															"nodeType": "YulIf",
															"src": "2370:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2457:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2444:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:16:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2438:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2483:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2485:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2485:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2485:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2475:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2479:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:10:1"
															},
															"nodeType": "YulIf",
															"src": "2469:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2514:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2531:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2524:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2524:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "2518:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2543:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2563:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2557:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2547:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2575:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2597:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "2613:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2617:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2609:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2609:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2626:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2622:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2622:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2579:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2690:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2692:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2692:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2692:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2649:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2661:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2646:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2669:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2681:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2666:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2666:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2643:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:46:1"
															},
															"nodeType": "YulIf",
															"src": "2640:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2728:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2732:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2721:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2752:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2763:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2756:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2785:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2793:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2778:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2805:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2816:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2824:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2805:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2836:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2858:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2862:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2854:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2867:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2850:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:20:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2840:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2902:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2885:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2893:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2882:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:19:1"
															},
															"nodeType": "YulIf",
															"src": "2879:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2927:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2942:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2946:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2938:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2938:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2931:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3035:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3059:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "3040:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3040:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3028:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3028:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3028:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3077:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3088:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3093:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3084:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3084:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3077:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2969:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2974:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2966:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2982:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2984:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2995:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3000:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2991:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2991:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2984:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2962:3:1",
																"statements": []
															},
															"src": "2958:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3115:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3125:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2077:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2088:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2100:6:1",
														"type": ""
													}
												],
												"src": "2016:1121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3229:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3275:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3277:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3271:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:32:1"
															},
															"nodeType": "YulIf",
															"src": "3239:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3300:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3326:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3313:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3304:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3370:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3345:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3345:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3385:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3395:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3385:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3409:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3447:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3419:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3198:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3210:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3218:6:1",
														"type": ""
													}
												],
												"src": "3142:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3628:507:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3638:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3648:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3642:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3659:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3677:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3688:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3673:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3663:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3707:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3718:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3700:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3730:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3741:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3734:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3756:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3776:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3770:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3760:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3799:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3807:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3792:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3823:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3834:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3845:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3830:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3830:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3857:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3875:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3883:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3861:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3895:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3904:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3899:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3963:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3984:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3999:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "3993:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3993:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4016:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4021:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4012:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4012:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4025:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4008:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4008:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3989:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3989:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3977:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3977:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4042:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4053:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4058:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4049:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4049:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4042:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4074:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4088:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4084:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4084:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4074:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3925:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3928:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3922:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3936:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3938:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3947:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3943:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3938:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3918:3:1",
																"statements": []
															},
															"src": "3914:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4118:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4126:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4118:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3597:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3608:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3619:4:1",
														"type": ""
													}
												],
												"src": "3462:673:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4235:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4245:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4257:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4268:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4245:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4287:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4312:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4305:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4305:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4298:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4298:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4280:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4204:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4215:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4226:4:1",
														"type": ""
													}
												],
												"src": "4140:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4433:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4443:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4455:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4466:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4443:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4485:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4496:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4478:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4402:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4413:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4424:4:1",
														"type": ""
													}
												],
												"src": "4332:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4669:98:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4679:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4691:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4679:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4743:6:1"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_SelledNFT",
																	"nodeType": "YulIdentifier",
																	"src": "4715:27:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:46:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_SelledNFT_$2426_memory_ptr__to_t_struct$_SelledNFT_$2426_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4638:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4649:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4660:4:1",
														"type": ""
													}
												],
												"src": "4514:253:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4923:507:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4933:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4943:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4937:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4954:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4983:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4958:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5002:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5013:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4995:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5025:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5036:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5029:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5051:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5071:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5065:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5055:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5094:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5102:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5087:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5087:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5118:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5129:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5125:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5152:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5170:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5156:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5190:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5199:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5194:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5258:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5279:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5294:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5288:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5288:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5311:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5316:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5307:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5307:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5320:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5303:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5303:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5284:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5284:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5272:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5272:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5337:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5348:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5353:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5344:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5344:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5337:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5369:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5383:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5391:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5379:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5379:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5369:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5220:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5223:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5217:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5231:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5233:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5242:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5245:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5238:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5238:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5233:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5213:3:1",
																"statements": []
															},
															"src": "5209:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5413:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5421:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5413:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4892:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4903:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4914:4:1",
														"type": ""
													}
												],
												"src": "4772:658:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5536:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5546:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5558:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5569:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5554:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5546:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5588:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5603:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5619:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5624:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5615:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5615:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5628:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5611:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5611:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5599:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5581:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5581:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5505:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5516:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5527:4:1",
														"type": ""
													}
												],
												"src": "5435:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5764:404:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5811:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5820:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5823:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5813:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5813:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5813:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5785:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5781:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5806:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5777:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:33:1"
															},
															"nodeType": "YulIf",
															"src": "5774:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5836:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5862:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5849:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5840:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5906:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5881:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5881:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5921:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5931:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5945:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5972:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5983:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5968:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5968:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5955:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5996:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6034:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6019:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6006:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6006:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6047:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6079:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6090:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6062:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "6051:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "6128:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6103:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6103:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6145:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "6155:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5706:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5717:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5737:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5745:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5753:6:1",
														"type": ""
													}
												],
												"src": "5643:525:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6205:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6222:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6229:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6234:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6225:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6215:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6215:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6262:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6265:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6255:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6286:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6289:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6279:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6279:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6173:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6337:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6354:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6361:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6366:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6357:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6347:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6347:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6397:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6418:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6421:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6411:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6411:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6305:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6484:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6515:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6517:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6517:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6517:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6500:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6511:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6507:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6497:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:17:1"
															},
															"nodeType": "YulIf",
															"src": "6494:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6546:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6557:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6546:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6466:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6476:3:1",
														"type": ""
													}
												],
												"src": "6437:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6751:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6768:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6761:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6791:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6841:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6852:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6837:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6837:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6857:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6830:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6885:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6897:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6908:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6893:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6893:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6885:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6728:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6742:4:1",
														"type": ""
													}
												],
												"src": "6577:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7096:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7113:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7106:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7106:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7147:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7158:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7143:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7143:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7163:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7136:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7136:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7186:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7197:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7182:18:1"
																	},
																	{
																		"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7202:26:1",
																		"type": "",
																		"value": "This NFT is not for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7175:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7175:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7238:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7250:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7261:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7238:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7073:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7087:4:1",
														"type": ""
													}
												],
												"src": "6922:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7449:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7466:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7477:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7459:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7459:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7500:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7511:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7496:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7516:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7489:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7489:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7539:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7550:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7535:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7535:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7555:34:1",
																		"type": "",
																		"value": "This token selled by Native coin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7528:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7599:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7611:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7622:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7599:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7426:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7440:4:1",
														"type": ""
													}
												],
												"src": "7275:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7717:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7763:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7772:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7775:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7765:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7765:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7765:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7738:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7734:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7759:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7730:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:32:1"
															},
															"nodeType": "YulIf",
															"src": "7727:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7788:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7804:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7798:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7798:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7788:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7683:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7694:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7706:6:1",
														"type": ""
													}
												],
												"src": "7636:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7999:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8016:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8027:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8009:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8009:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8050:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8061:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8046:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8066:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8039:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8100:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8085:18:1"
																	},
																	{
																		"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8105:34:1",
																		"type": "",
																		"value": "You do not have enough tokens on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8078:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8078:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8171:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8156:18:1"
																	},
																	{
																		"hexValue": "20796f75722062616c616e636520746f20706179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8176:22:1",
																		"type": "",
																		"value": " your balance to pay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8149:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8149:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8149:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8208:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8220:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8216:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8208:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7976:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7990:4:1",
														"type": ""
													}
												],
												"src": "7825:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8375:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8397:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8408:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8385:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8420:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8438:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8443:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8434:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8447:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8424:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8465:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8480:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8488:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8476:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8458:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8458:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8523:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8508:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8532:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8540:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8528:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8501:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8336:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8347:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8355:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8366:4:1",
														"type": ""
													}
												],
												"src": "8246:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8729:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8746:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8757:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8739:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8739:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8780:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8791:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8776:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8796:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8769:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8830:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8815:18:1"
																	},
																	{
																		"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8835:34:1",
																		"type": "",
																		"value": "You did not allow the contract t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8808:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8808:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8890:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8901:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8886:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8886:18:1"
																	},
																	{
																		"hexValue": "6f2073656e642074686520707572636861736520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8906:28:1",
																		"type": "",
																		"value": "o send the purchase amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8879:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8879:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8879:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8944:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8956:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8967:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8944:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8706:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8720:4:1",
														"type": ""
													}
												],
												"src": "8555:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9139:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9149:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9161:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9172:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9157:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9149:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9184:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9202:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9207:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9198:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9211:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9188:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9244:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9252:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9240:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9222:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9276:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9287:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9272:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9296:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9304:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9292:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9265:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9265:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9339:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9324:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9344:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9317:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9317:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9092:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9103:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9111:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9119:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9130:4:1",
														"type": ""
													}
												],
												"src": "8982:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9603:368:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9613:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9625:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9636:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9613:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9649:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9667:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9672:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9663:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9676:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9659:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9653:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9694:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9709:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9717:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9705:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9687:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9687:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9687:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9741:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9752:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9737:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9761:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9769:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9757:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9730:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9730:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9730:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9793:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9804:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9789:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "9813:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9821:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9809:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9782:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9782:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9845:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9856:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9841:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9861:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9834:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9834:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9888:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9899:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9884:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "9909:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9917:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9905:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9877:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9877:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9941:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9952:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9937:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "9958:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9930:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9930:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9532:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9543:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9551:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9559:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9567:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9575:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9583:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9594:4:1",
														"type": ""
													}
												],
												"src": "9362:609:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10105:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10115:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10127:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10138:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10123:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10123:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10115:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10157:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10172:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10188:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10193:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10184:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10184:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10197:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10180:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10180:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10168:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10168:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10150:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10221:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10232:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10217:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10217:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10237:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10210:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10066:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10077:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10085:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10096:4:1",
														"type": ""
													}
												],
												"src": "9976:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10429:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10446:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10439:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10491:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10476:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10496:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10469:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10469:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10530:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10515:18:1"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f776564204e465420636f6c6c656374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10535:28:1",
																		"type": "",
																		"value": "Not allowed NFT collection"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10508:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10573:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10585:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10596:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10581:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10573:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10406:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10420:4:1",
														"type": ""
													}
												],
												"src": "10255:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10691:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10737:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10739:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10739:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10739:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10712:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10708:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10733:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10704:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10704:32:1"
															},
															"nodeType": "YulIf",
															"src": "10701:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10762:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10781:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10775:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10766:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10825:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "10800:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10800:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10800:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10840:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10850:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10840:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10657:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10668:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10680:6:1",
														"type": ""
													}
												],
												"src": "10610:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11040:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11057:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11068:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11050:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11050:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11091:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11102:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11087:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11080:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11080:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11146:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11119:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11183:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11195:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11206:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11191:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11183:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11017:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11031:4:1",
														"type": ""
													}
												],
												"src": "10866:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11394:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11422:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11404:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11404:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11445:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11456:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11441:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11461:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11434:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11434:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11434:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11484:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11495:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11480:18:1"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11500:33:1",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11473:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11473:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11543:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11555:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11566:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11371:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11385:4:1",
														"type": ""
													}
												],
												"src": "11220:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11754:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11771:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11782:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11764:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11764:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11805:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11816:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11801:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11801:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11821:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11794:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11855:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11840:18:1"
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11860:34:1",
																		"type": "",
																		"value": "This ERC20 not allowed as a trad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11833:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11915:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11926:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11911:18:1"
																	},
																	{
																		"hexValue": "696e672063757272656e6379",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11931:14:1",
																		"type": "",
																		"value": "ing currency"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11904:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11904:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11955:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11967:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11978:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11963:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11955:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11731:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11745:4:1",
														"type": ""
													}
												],
												"src": "11580:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12206:315:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12216:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12228:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12239:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12224:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12216:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12252:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12270:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12275:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12266:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12266:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12279:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12262:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12262:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12256:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12297:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12312:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12320:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12308:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12290:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12290:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12355:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12340:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12364:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12372:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12360:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12333:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12333:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12396:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12407:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12392:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12392:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12412:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12385:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12385:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12450:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12435:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "12459:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12467:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12455:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12428:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12428:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12502:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12487:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12508:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12480:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12480:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12143:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12154:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12162:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12170:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12178:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12186:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12197:4:1",
														"type": ""
													}
												],
												"src": "11993:528:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12711:262:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12721:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12733:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12744:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12721:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12757:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12775:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12780:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12771:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12784:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12767:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12767:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12761:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12802:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12817:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12825:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12813:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12795:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12795:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12795:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12849:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12860:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12845:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12869:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12877:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12865:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12838:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12901:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12912:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12897:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12917:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12890:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12890:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12944:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12955:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12940:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12940:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12960:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12933:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12933:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12933:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12656:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12667:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12675:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12683:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12691:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12702:4:1",
														"type": ""
													}
												],
												"src": "12526:447:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13152:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13169:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13180:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13162:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13162:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13203:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13214:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13199:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13219:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13192:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13192:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13242:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13253:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13238:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f7220746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13258:34:1",
																		"type": "",
																		"value": "You have not paid enough for thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13231:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13231:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13324:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13309:18:1"
																	},
																	{
																		"hexValue": "73206974656d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13329:8:1",
																		"type": "",
																		"value": "s item"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13302:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13347:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13359:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13370:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13355:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13355:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13347:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13129:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13143:4:1",
														"type": ""
													}
												],
												"src": "12978:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13559:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13576:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13587:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13569:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13569:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13610:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13621:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13606:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13606:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13626:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13599:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13599:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13649:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13660:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13645:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13665:28:1",
																		"type": "",
																		"value": "This token selled by ERC20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13638:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13638:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13703:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13715:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13726:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13711:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13711:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13703:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13536:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13550:4:1",
														"type": ""
													}
												],
												"src": "13385:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13953:315:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13963:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13975:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13986:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13971:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13963:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13999:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14017:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14022:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14013:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14013:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14026:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14003:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14044:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14059:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14067:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14055:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14037:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14037:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14091:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14102:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14087:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14111:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14119:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14107:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14107:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14080:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14080:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14139:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "14163:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14171:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14159:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14132:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14132:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14195:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14206:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14191:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14211:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14184:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14184:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14238:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14249:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14234:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14255:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14227:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14227:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13890:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13901:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13909:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13917:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13925:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13933:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13944:4:1",
														"type": ""
													}
												],
												"src": "13740:528:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14447:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14475:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14457:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14457:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14509:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14494:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14487:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14487:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14537:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14548:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14533:18:1"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420666f756e646564206174206d61726b6574706c616365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14553:34:1",
																		"type": "",
																		"value": "Token not founded at marketplace"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14526:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14526:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14526:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14597:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14609:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14620:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14605:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14605:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14597:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14424:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14438:4:1",
														"type": ""
													}
												],
												"src": "14273:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14808:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14825:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14836:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14818:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14818:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14818:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14859:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14870:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14855:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14875:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14848:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14848:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14898:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14909:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14894:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14894:18:1"
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14914:22:1",
																		"type": "",
																		"value": "This is not your NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14887:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14887:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14946:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14958:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14969:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14954:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14954:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14946:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14785:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14799:4:1",
														"type": ""
													}
												],
												"src": "14634:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15157:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15185:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15167:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15167:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15208:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15219:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15204:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15204:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15224:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15197:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15197:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15258:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15243:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15263:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15236:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15236:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15329:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15314:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15334:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15307:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15307:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15352:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15364:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15375:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15360:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15360:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15352:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15134:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15148:4:1",
														"type": ""
													}
												],
												"src": "14983:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15468:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15516:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15516:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15489:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15498:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15485:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15510:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15481:32:1"
															},
															"nodeType": "YulIf",
															"src": "15478:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15539:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15558:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15552:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15552:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "15543:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15621:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15630:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15633:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15623:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15623:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15590:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "15611:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "15604:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15604:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15597:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15597:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15587:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15587:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15580:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15580:40:1"
															},
															"nodeType": "YulIf",
															"src": "15577:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15646:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15656:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "15646:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15434:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15445:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15457:6:1",
														"type": ""
													}
												],
												"src": "15390:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15846:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15863:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15874:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15856:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15856:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15908:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15893:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15913:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15886:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15886:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15936:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15947:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15932:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15952:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15925:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15925:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15996:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16008:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16019:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16004:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16004:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15996:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15823:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15837:4:1",
														"type": ""
													}
												],
												"src": "15672:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16079:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16110:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16138:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16143:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "16134:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16134:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16124:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16124:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16124:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16175:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16178:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16168:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16168:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16168:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16203:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16206:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16196:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16196:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16196:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16099:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16092:9:1"
															},
															"nodeType": "YulIf",
															"src": "16089:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16230:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16239:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16242:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16235:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16235:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16230:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16064:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16067:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16073:1:1",
														"type": ""
													}
												],
												"src": "16033:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16307:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16317:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16332:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16335:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16328:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "16317:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16395:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16397:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16397:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16397:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16366:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16359:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16359:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "16373:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "16380:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "16389:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "16376:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16376:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "16370:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16370:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "16356:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16356:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16349:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16349:45:1"
															},
															"nodeType": "YulIf",
															"src": "16346:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16286:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16289:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16295:7:1",
														"type": ""
													}
												],
												"src": "16255:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16477:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16487:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16499:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16502:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16495:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16487:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16528:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16530:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16530:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16530:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "16519:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16525:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16516:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16516:11:1"
															},
															"nodeType": "YulIf",
															"src": "16513:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16459:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16462:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16468:4:1",
														"type": ""
													}
												],
												"src": "16428:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16608:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16635:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16637:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16637:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16637:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16628:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16621:13:1"
															},
															"nodeType": "YulIf",
															"src": "16618:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16666:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16677:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16688:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16684:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16673:18:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16666:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16590:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16600:3:1",
														"type": ""
													}
												],
												"src": "16561:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16734:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16751:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16758:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16763:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16754:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16744:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16744:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16791:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16794:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16784:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16784:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16815:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16818:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16808:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16808:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "16702:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17008:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17025:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17036:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17018:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17018:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17059:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17070:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17055:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17075:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17048:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17048:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17109:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17094:18:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17114:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17087:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17087:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17169:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17180:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17165:18:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17185:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17158:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17158:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17207:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17230:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17215:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17207:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16985:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16999:4:1",
														"type": ""
													}
												],
												"src": "16834:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17419:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17436:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17429:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17429:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17481:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17466:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17486:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17459:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17459:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17520:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17505:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17525:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17498:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17498:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17591:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17576:18:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17596:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17569:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17569:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17614:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17626:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17637:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17622:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17614:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17396:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17410:4:1",
														"type": ""
													}
												],
												"src": "17245:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17718:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17728:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17737:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "17732:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17797:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "17822:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "17827:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17818:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17818:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "17841:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "17846:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "17837:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17837:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "17831:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17831:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17811:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17811:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17811:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "17758:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17761:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17755:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17755:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17769:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17771:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "17780:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17783:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17776:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17776:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "17771:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17751:3:1",
																"statements": []
															},
															"src": "17747:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "17880:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17885:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17876:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17894:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17869:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17869:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "17696:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "17701:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17706:6:1",
														"type": ""
													}
												],
												"src": "17652:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18044:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18054:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18074:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18068:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18068:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18058:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18129:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18137:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18125:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18144:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18149:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18090:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18090:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18090:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18165:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18176:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18181:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18172:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18172:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18165:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18020:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18036:3:1",
														"type": ""
													}
												],
												"src": "17907:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18373:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18390:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18383:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18383:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18435:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18420:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18440:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18413:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18413:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18474:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18459:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18479:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18452:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18452:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18520:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18532:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18543:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18528:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18528:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18520:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18350:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18364:4:1",
														"type": ""
													}
												],
												"src": "18199:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18678:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18695:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18706:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18688:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18688:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18718:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18738:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18732:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18732:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18722:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18761:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18781:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18754:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18754:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18836:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18844:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18832:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18864:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18849:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18869:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18797:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18797:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18797:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18885:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18901:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "18920:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18928:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "18916:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18916:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18937:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "18933:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18933:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18912:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18912:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18897:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18944:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18893:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18893:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18885:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18647:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18658:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18669:4:1",
														"type": ""
													}
												],
												"src": "18557:396:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_struct_SelledNFT(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_SelledNFT(mload(srcPtr), pos)\n            pos := add(pos, 0xc0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_struct$_SelledNFT_$2426_memory_ptr__to_t_struct$_SelledNFT_$2426_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_SelledNFT(value0, headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"This NFT is not for sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"This token selled by Native coin\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"You do not have enough tokens on\")\n        mstore(add(headStart, 96), \" your balance to pay\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"You did not allow the contract t\")\n        mstore(add(headStart, 96), \"o send the purchase amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Not allowed NFT collection\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You don't own this token!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Price must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"This ERC20 not allowed as a trad\")\n        mstore(add(headStart, 96), \"ing currency\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You have not paid enough for thi\")\n        mstore(add(headStart, 96), \"s item\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"This token selled by ERC20\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Token not founded at marketplace\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"This is not your NFT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785FA7CE GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xD55A34E4 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE9E4E160 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD55A34E4 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xDA24548A EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98F748BD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x98F748BD EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xA096C5A2 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xC8F77899 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5211AC2E GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x6629E913 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5211AC2E EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x527F2902 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10603023 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x19C8C1C5 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1ED56D44 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x27713536 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x2B205D14 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x3A51F383 EQ PUSH2 0x259 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2699 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0xDC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x26DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0xFB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x16C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x1764 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x383 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0x1901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x191C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x1946 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x686 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53F JUMPI PUSH2 0x53F PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x578 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x565 PUSH2 0x23BE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x55D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x683 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x671 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5DB JUMPI PUSH2 0x5DB PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x657 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x66D SWAP1 PUSH2 0x275E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x67B DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57F JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x686 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DD PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x716 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x703 PUSH2 0x23BE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6FB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x683 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x744 JUMPI PUSH2 0x744 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x80C JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x776 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x7F2 JUMPI PUSH2 0x7F2 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x808 SWAP1 PUSH2 0x275E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x816 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71D JUMP JUMPDEST PUSH2 0x826 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84C PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x88A DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x829 JUMP JUMPDEST POP PUSH2 0x89F PUSH1 0x2 PUSH1 0x0 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x90C JUMPI PUSH1 0x2 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BF PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x904 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x94F DUP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20796F75722062616C616E636520746F20706179 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 PUSH2 0xBEB PUSH2 0xBE3 DUP4 PUSH1 0x64 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1B69 JUMP JUMPDEST SWAP1 POP PUSH2 0xBFF PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC1F JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP4 DUP4 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xC4A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 CALLER SWAP1 DUP5 PUSH2 0x1B81 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC6C JUMPI PUSH1 0x8 SLOAD PUSH2 0xC6C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP6 PUSH2 0x1B81 JUMP JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xCA2 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xCDE DUP10 DUP10 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD DUP9 MLOAD PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x80 DUP1 DUP14 ADD MLOAD PUSH1 0x60 DUP1 DUP16 ADD MLOAD DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE CALLER SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP8 AND DUP6 DUP10 ADD MSTORE DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xA3D27CC8AC4E1915B6A89CE3E468D87AEB3CAF011A47E236DB61D098E452870C SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDCB PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE3F PUSH2 0x23BE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xF4E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE69 JUMPI PUSH2 0xE69 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xEB3 JUMPI POP DUP3 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE9F JUMPI PUSH2 0xE9F PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xF3C JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xECB JUMPI PUSH2 0xECB PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 POP PUSH2 0xF50 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0xF46 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE42 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9B JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFBE PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0xFC8 PUSH1 0x0 PUSH2 0x1F7F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFEB JUMPI PUSH2 0xFEB PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1013 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x101D DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFCE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F776564204E465420636F6C6C656374696F6E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x124F JUMPI PUSH2 0x11E9 DUP2 PUSH2 0xFCA JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x696E672063757272656E6379 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP8 SWAP1 MSTORE CALLER DUP4 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x12AF SWAP2 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x12EA DUP2 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1354 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x44F716B281FA3E96FBD6EF888A275EF2FDF8914960A4C57C0BEF6CCAEBF0DF31 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xC68DC1F889FA3A215DCDD97178AF6BD67FAB7B34138EEF18F4313AAC53F5B364 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13B7 CALLER PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP1 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F2 DUP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x14AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x73206974656D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0x1516 PUSH2 0xBE3 DUP4 PUSH1 0x64 PUSH2 0x1B56 JUMP JUMPDEST SWAP1 POP PUSH2 0x152A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x154A JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP4 DUP4 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1595 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x160E SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x163C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x164A DUP7 DUP7 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP6 ADD MLOAD DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH1 0x60 DUP1 DUP11 ADD MLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xBAB4AA6B2D5C0935E0E2937D1F73655848F670D43BF6F0C7E9E11E635BB5D86F SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x16E5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1770 DUP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E646564206174206D61726B6574706C616365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1838 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A1A5CC81A5CC81B9BDD081E5BDD5C88139195 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1874 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x18B8 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP3 MLOAD PUSH32 0xCFD975662262E48E8C2B68605E79D409DA1B108BDC941F32D355C4CF11D35925 SWAP4 PUSH2 0x18F4 SWAP4 SWAP3 SWAP2 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1909 PUSH2 0x1AFC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x90C SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x1924 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x194E PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH2 0x19BC DUP2 PUSH2 0x1F7F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x19C7 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A34 SWAP2 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1A57 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x27FB JUMP JUMPDEST POP PUSH32 0x33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29 CALLER DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x281D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x2856 JUMP JUMPDEST PUSH2 0x1BD9 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x215C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x1BFB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1C0B JUMPI PUSH2 0x1C0B PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1C64 JUMPI POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1C40 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1C50 JUMPI PUSH2 0x1C50 PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1D56 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1C7F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1C8F JUMPI PUSH2 0x1C8F PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1CC8 DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1CF1 DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1F7A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D80 JUMPI PUSH2 0x1D80 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1DCA JUMPI POP DUP2 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DB6 JUMPI PUSH2 0x1DB6 PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1F68 JUMPI PUSH1 0x7 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1DE6 JUMPI PUSH2 0x1DE6 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1E1F DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1E48 DUP4 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH2 0x1E5D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E6D JUMPI PUSH2 0x1E6D PUSH2 0x2732 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E8E JUMPI PUSH2 0x1E8E PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE DUP1 SLOAD DUP1 PUSH2 0x1F15 JUMPI PUSH2 0x1F15 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x1F72 DUP2 PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 MLOAD PUSH1 0x6 SWAP2 DUP3 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP6 ADD SSTORE PUSH1 0x40 DUP1 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP7 ADD DUP1 SLOAD SWAP2 DUP9 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP7 ADD SSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP7 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2127 DUP4 PUSH2 0x275E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2154 DUP4 PUSH2 0x275E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1F7A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x21CF SWAP2 SWAP1 PUSH2 0x27FB JUMP JUMPDEST PUSH2 0x1F7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x223D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2245 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x22A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x22C2 SWAP2 SWAP1 PUSH2 0x28BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2315 DUP8 DUP4 DUP4 DUP8 PUSH2 0x2320 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x238F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2388 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x93A JUMP JUMPDEST POP DUP2 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x223D DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x23A4 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19BC SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2482 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2482 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x244D JUMP JUMPDEST POP PUSH2 0x248E SWAP3 SWAP2 POP PUSH2 0x2492 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x248E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x686 DUP2 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B62 DUP2 PUSH2 0x24C0 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2586 JUMPI PUSH2 0x2573 DUP4 DUP6 MLOAD PUSH2 0x24FD JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0xC0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2560 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F9 PUSH2 0x2592 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x261E JUMPI PUSH2 0x261E PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x263C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2652 DUP6 PUSH2 0x24D5 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2641 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x268B DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2586 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x26B5 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0xF50 DUP3 DUP5 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2709 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2727 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2770 JUMPI PUSH2 0x2770 PUSH2 0x2748 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B62 DUP2 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x283A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF50 JUMPI PUSH2 0xF50 PUSH2 0x2748 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF50 PUSH2 0x2748 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2878 JUMPI PUSH2 0x2878 PUSH2 0x2748 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2899 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x28CC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2896 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28F5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SWAP12 0x4F 0x4D LT 0xD6 0x1F DUP13 ADDRESS 0xB9 0xB3 SWAP13 INVALID CHAINID SWAP8 MSIZE LOG0 SLT 0xC2 0xD5 ADDRESS EXP 0x5F 0xAE 0xC8 MULMOD RETURN SIGNEXTEND MSTORE8 0xED KECCAK256 PUSH17 0x64736F6C63430008120033000000000000 ",
							"sourceMap": "50386:12079:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56077:100;;;;;;;;;;-1:-1:-1;56077:100:0;;;;;:::i;:::-;;:::i;:::-;;56317:538;;;;;;;;;;-1:-1:-1;56317:538:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;57090:553;;;;;;;;;;-1:-1:-1;57090:553:0;;;;;:::i;:::-;;:::i;54614:418::-;;;;;;;;;;-1:-1:-1;54614:418:0;;;;;:::i;:::-;;:::i;57651:1726::-;;;;;;;;;;-1:-1:-1;57651:1726:0;;;;;:::i;:::-;;:::i;54493:115::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;55518:191::-;;;;;;;;;;;;;:::i;51639:90::-;;;;;;;;;;-1:-1:-1;51717:4:0;51639:90;;;4305:14:1;;4298:22;4280:41;;4268:2;4253:18;51639:90:0;4140:187:1;51563:32:0;;;;;;;;;;;;51594:1;51563:32;;;;;4478:25:1;;;4466:2;4451:18;51563:32:0;4332:177:1;49200:86:0;;;;;;;;;;-1:-1:-1;49247:4:0;49271:7;-1:-1:-1;;;49271:7:0;;;;49200:86;;52088:434;;;;;;;;;;-1:-1:-1;52088:434:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;55180:104::-;;;;;;;;;;;;;:::i;2667:103::-;;;;;;;;;;;;;:::i;55292:218::-;;;;;;;;;;-1:-1:-1;55292:218:0;;;;;:::i;:::-;;:::i;2019:87::-;;;;;;;;;;-1:-1:-1;2065:7:0;2092:6;-1:-1:-1;;;;;2092:6:0;2019:87;;;-1:-1:-1;;;;;5599:32:1;;;5581:51;;5569:2;5554:18;2019:87:0;5435:203:1;55986:85:0;;;;;;;;;;-1:-1:-1;56054:9:0;;55986:85;;60577:1292;;;;;;;;;;-1:-1:-1;60577:1292:0;;;;;:::i;:::-;;:::i;56185:126::-;;;;;;;;;;;;;:::i;59387:1182::-;;;;;;:::i;:::-;;:::i;56863:108::-;;;;;;;;;;-1:-1:-1;56943:13:0;:20;56863:108;;56977:107;;;;;;;;;;;;;:::i;61877:585::-;;;;;;;;;;-1:-1:-1;61877:585:0;;;;;:::i;:::-;;:::i;54271:93::-;;;;;;;;;;-1:-1:-1;54344:12:0;;-1:-1:-1;;;;;54344:12:0;54271:93;;55042:126;;;;;;;;;;-1:-1:-1;55042:126:0;;;;;:::i;:::-;;:::i;54370:115::-;;;;;;;;;;-1:-1:-1;54370:115:0;;;;;:::i;:::-;;:::i;2925:201::-;;;;;;;;;;-1:-1:-1;2925:201:0;;;;;:::i;:::-;;:::i;55717:261::-;;;;;;;;;;-1:-1:-1;55717:261:0;;;;;:::i;:::-;;:::i;56077:100::-;1905:13;:11;:13::i;:::-;56145:9:::1;:24:::0;56077:100::o;56317:538::-;-1:-1:-1;;;;;56445:24:0;;56472:1;56445:24;;;:16;:24;;;;;;56401:22;;56445:28;56441:386;;-1:-1:-1;;;;;56512:24:0;;;;;;:16;:24;;;;;;56496:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;56490:47;;56552:15;56591:9;56586:230;56610:13;:20;56606:24;;56586:230;;;56687:6;-1:-1:-1;;;;;56660:33:0;:13;56674:1;56660:16;;;;;;;;:::i;:::-;;;;;;;;;:23;:16;;;;;:23;;-1:-1:-1;;;;;56660:23:0;:33;56656:145;;56733:13;56747:1;56733:16;;;;;;;;:::i;:::-;;;;;;;;;;56718:31;;;;;;;;56733:16;;;;;;;56718:31;;-1:-1:-1;;;;;56718:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;;:3;;56722:7;;56718:12;;;;;;:::i;:::-;;;;;;:31;;;;56772:9;;;;;:::i;:::-;;;;56656:145;56632:3;;;;:::i;:::-;;;;56586:230;;;;56475:352;56441:386;56317:538;;;:::o;57090:553::-;-1:-1:-1;;;;;57205:34:0;;57242:1;57205:34;;;:22;:34;;;;;;57166:22;;57205:38;57201:414;;-1:-1:-1;;;;;57282:34:0;;;;;;:22;:34;;;;;;57266:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;57260:57;;57332:15;57371:9;57366:238;57390:13;:20;57386:24;;57366:238;;;57471:10;-1:-1:-1;;;;;57440:41:0;:13;57454:1;57440:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;-1:-1:-1;;;;;57440:27:0;:41;57436:153;;57521:13;57535:1;57521:16;;;;;;;;:::i;:::-;;;;;;;;;;57506:31;;;;;;;;57521:16;;;;;;;57506:31;;-1:-1:-1;;;;;57506:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;;:3;;57510:7;;57506:12;;;;;;:::i;:::-;;;;;;:31;;;;57560:9;;;;;:::i;:::-;;;;57436:153;57412:3;;;;:::i;:::-;;;;57366:238;;54614:418;1905:13;:11;:13::i;:::-;54711:9:::1;54707:141;54730:18;:25:::0;54726:29;::::1;54707:141;;;54831:5;54777:19;:51;54805:18;54824:1;54805:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;54805:21:0::1;54777:51:::0;;;::::1;::::0;;;;;;;;:59;;-1:-1:-1;;54777:59:0::1;::::0;::::1;;::::0;;;::::1;::::0;;54757:3;::::1;::::0;::::1;:::i;:::-;;;;54707:141;;;-1:-1:-1::0;54858:25:0::1;54865:18;;54858:25;:::i;:::-;54898:9;54894:131;54917:15;:22;54913:1;:26;54894:131;;;54961:18;54993:15;55009:1;54993:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;54961:52;;::::1;::::0;::::1;::::0;;-1:-1:-1;54961:52:0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;54961:52:0::1;-1:-1:-1::0;;;;;54961:52:0;;::::1;::::0;;;::::1;::::0;;54941:3;::::1;::::0;::::1;:::i;:::-;;;;54894:131;;;;54614:418:::0;:::o;57651:1726::-;49247:4;49271:7;-1:-1:-1;;;49271:7:0;;;;49525:9;49517:38;;;;-1:-1:-1;;;49517:38:0;;;;;;;:::i;:::-;;;;;;;;;57763:24:::1;57790:36;57806:10;57818:7;57790:15;:36::i;:::-;57845:18:::0;;57763:63;;-1:-1:-1;;;;;;57845:32:0::1;57837:69;;;::::0;-1:-1:-1;;;57837:69:0;;7124:2:1;57837:69:0::1;::::0;::::1;7106:21:1::0;7163:2;7143:18;;;7136:30;-1:-1:-1;;;7182:18:1;;;7175:54;7246:18;;57837:69:0::1;6922:348:1::0;57837:69:0::1;57925:13;::::0;::::1;::::0;-1:-1:-1;;;;;57925:27:0::1;57917:72;;;::::0;-1:-1:-1;;;57917:72:0;;7477:2:1;57917:72:0::1;::::0;::::1;7459:21:1::0;;;7496:18;;;7489:30;7555:34;7535:18;;;7528:62;7607:18;;57917:72:0::1;7275:356:1::0;57917:72:0::1;58027:13;::::0;::::1;::::0;58075:30:::1;::::0;-1:-1:-1;;;58075:30:0;;58094:10:::1;58075:30;::::0;::::1;5581:51:1::0;58002:15:0::1;::::0;-1:-1:-1;;;;;58075:18:0;::::1;::::0;::::1;::::0;5554::1;;58075:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58052:53;;58140:7;:13;;;58124:12;:29;;58116:94;;;::::0;-1:-1:-1;;;58116:94:0;;8027:2:1;58116:94:0::1;::::0;::::1;8009:21:1::0;8066:2;8046:18;;;8039:30;8105:34;8085:18;;;8078:62;-1:-1:-1;;;8156:18:1;;;8149:50;8216:19;;58116:94:0::1;7825:416:1::0;58116:94:0::1;58246:45;::::0;-1:-1:-1;;;58246:45:0;;58265:10:::1;58246:45;::::0;::::1;8458:34:1::0;58285:4:0::1;8508:18:1::0;;;8501:43;58221:22:0::1;::::0;-1:-1:-1;;;;;58246:18:0;::::1;::::0;::::1;::::0;8393::1;;58246:45:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58221:70;;58328:7;:13;;;58310:14;:31;;58302:102;;;::::0;-1:-1:-1;;;58302:102:0;;8757:2:1;58302:102:0::1;::::0;::::1;8739:21:1::0;8796:2;8776:18;;;8769:30;8835:34;8815:18;;;8808:62;8906:28;8886:18;;;8879:56;8952:19;;58302:102:0::1;8555:422:1::0;58302:102:0::1;58444:13;::::0;::::1;::::0;58427:14:::1;58488:50;58501:25;58444:13:::0;58522:3:::1;58501:12;:25::i;:::-;58528:9;;58488:12;:50::i;:::-;58468:70;;58571:7;2065::::0;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;58571:7:::1;-1:-1:-1::0;;;;;58553:25:0::1;:7;:14;;;-1:-1:-1::0;;;;;58553:25:0::1;::::0;58549:44:::1;;-1:-1:-1::0;58592:1:0::1;58549:44;58604:21;58628:31;58641:6;58649:9;58628:12;:31::i;:::-;58754:14;::::0;::::1;::::0;58604:55;;-1:-1:-1;58672:136:0::1;::::0;-1:-1:-1;;;;;58672:25:0;::::1;::::0;58720:10:::1;::::0;58604:55;58672:25:::1;:136::i;:::-;58823:13:::0;;58819:192:::1;;58943:12;::::0;58853:146:::1;::::0;-1:-1:-1;;;;;58853:25:0;;::::1;::::0;58905:10:::1;::::0;58943:12:::1;58975:9:::0;58853:25:::1;:146::i;:::-;59029:18:::0;;59089:15:::1;::::0;::::1;::::0;59021:84:::1;::::0;-1:-1:-1;;;59021:84:0;;-1:-1:-1;;;;;59021:40:0;;::::1;::::0;::::1;::::0;:84:::1;::::0;59070:4:::1;::::0;59077:10:::1;::::0;59021:84:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;59116:37;59133:10;59145:7;59116:16;:37::i;:::-;59198:14;::::0;;::::1;::::0;59254:18;;59287:15:::1;::::0;;::::1;::::0;59317:13:::1;::::0;;::::1;::::0;59345::::1;::::0;;::::1;::::0;59171:198;;-1:-1:-1;;;;;9705:15:1;;;9687:34;;59228:10:0::1;9737:18:1::0;;;9730:43;;;;9809:15;;;9789:18;;;9782:43;9841:18;;9834:34;;;;9905:15;;9884:19;;;9877:44;;;;9667:3;9937:19;;9930:35;59171:198:0;;::::1;::::0;;;;9636:3:1;59171:198:0;;::::1;57752:1625;;;;;;;57651:1726:::0;;:::o;54493:115::-;54546:16;54582:18;54575:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;54575:25:0;;;;;;;;;;;;;;;;;;;;;;;54493:115;:::o;55518:191::-;1905:13;:11;:13::i;:::-;55618:36:::1;::::0;55586:21:::1;::::0;55626:10:::1;::::0;55618:36;::::1;;;::::0;55586:21;;55569:14:::1;55618:36:::0;55569:14;55618:36;55586:21;55626:10;55618:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;55670:31:0::1;::::0;;55682:10:::1;10150:51:1::0;;10232:2;10217:18;;10210:34;;;55670:31:0::1;::::0;10123:18:1;55670:31:0::1;;;;;;;55558:151;55518:191::o:0;52088:434::-;52171:20;;:::i;:::-;52208:9;52204:290;52227:13;:20;52223:24;;52204:290;;;52323:10;-1:-1:-1;;;;;52292:41:0;:13;52306:1;52292:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;-1:-1:-1;;;;;52292:27:0;:41;52291:118;;;;;52401:7;52373:13;52387:1;52373:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:35;52291:118;52269:214;;;52451:13;52465:1;52451:16;;;;;;;;:::i;:::-;;;;;;;;;;52444:23;;;;;;;;52451:16;;;;;;;52444:23;;-1:-1:-1;;;;;52444:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52444:23:0;;-1:-1:-1;52444:23:0;52269:214;52249:3;;;;:::i;:::-;;;;52204:290;;;;52088:434;;;;;:::o;55180:104::-;55227:16;55263:13;55256:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;55256:20:0;;;;;;;;;;;;;;;;;;;;;;55180:104;:::o;2667:103::-;1905:13;:11;:13::i;:::-;2732:30:::1;2759:1;2732:18;:30::i;:::-;2667:103::o:0;55292:218::-;55352:4;;55369:111;55385:13;:20;55383:22;;55369:111;;;55439:13;55453:1;55439:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;55439:16:0;;;55430:25;;;;55426:42;;-1:-1:-1;55464:4:0;;55292:218;-1:-1:-1;;55292:218:0:o;55426:42::-;55406:3;;;;:::i;:::-;;;;55369:111;;;-1:-1:-1;55497:5:0;;55292:218;-1:-1:-1;;55292:218:0:o;60577:1292::-;49247:4;49271:7;-1:-1:-1;;;49271:7:0;;;;49525:9;49517:38;;;;-1:-1:-1;;;49517:38:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;60820:31:0;::::1;;::::0;;;:19:::1;:31;::::0;;;;;::::1;;60798:107;;;::::0;-1:-1:-1;;;60798:107:0;;10457:2:1;60798:107:0::1;::::0;::::1;10439:21:1::0;10496:2;10476:18;;;10469:30;10535:28;10515:18;;;10508:56;10581:18;;60798:107:0::1;10255:350:1::0;60798:107:0::1;60962:37;::::0;-1:-1:-1;;;60962:37:0;;::::1;::::0;::::1;4478:25:1::0;;;61003:10:0::1;::::0;-1:-1:-1;;;;;60962:27:0;::::1;::::0;::::1;::::0;4451:18:1;;60962:37:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;60962:51:0::1;;60940:126;;;::::0;-1:-1:-1;;;60940:126:0;;11068:2:1;60940:126:0::1;::::0;::::1;11050:21:1::0;11107:2;11087:18;;;11080:30;11146:27;11126:18;;;11119:55;11191:18;;60940:126:0::1;10866:349:1::0;60940:126:0::1;61093:1;61085:5;:9;61077:53;;;::::0;-1:-1:-1;;;61077:53:0;;11422:2:1;61077:53:0::1;::::0;::::1;11404:21:1::0;11461:2;11441:18;;;11434:30;11500:33;11480:18;;;11473:61;11551:18;;61077:53:0::1;11220:355:1::0;61077:53:0::1;-1:-1:-1::0;;;;;61145:20:0;::::1;::::0;61141:172:::1;;61222:22;61237:6;61222:14;:22::i;:::-;:30;;61248:4;61222:30;61214:87;;;::::0;-1:-1:-1;;;61214:87:0;;11782:2:1;61214:87:0::1;::::0;::::1;11764:21:1::0;11821:2;11801:18;;;11794:30;11860:34;11840:18;;;11833:62;-1:-1:-1;;;11911:18:1;;;11904:42;11963:19;;61214:87:0::1;11580:408:1::0;61214:87:0::1;61351:164;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;61351:164:0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;61423:10:::1;61351:164:::0;;;;;;;;;;;;;;::::1;::::0;;;;61489:15:::1;61351:164:::0;;;;61526:69;;-1:-1:-1;;;61526:69:0;;61351:164;;;61526:32:::1;::::0;:69:::1;::::0;61579:4:::1;::::0;61400:8;;61526:69:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;61606:24;61623:6;61606:16;:24::i;:::-;-1:-1:-1::0;;;;;61647:20:0;::::1;61643:219;;61689:70;::::0;;61711:10:::1;12290:34:1::0;;-1:-1:-1;;;;;12360:15:1;;;12355:2;12340:18;;12333:43;12392:18;;;12385:34;;;12455:15;;12450:2;12435:18;;12428:43;12502:3;12487:19;;12480:35;;;61689:70:0;;::::1;::::0;;;;12239:3:1;61689:70:0;;::::1;61643:219;;;61797:53;::::0;;61810:10:::1;12795:34:1::0;;-1:-1:-1;;;;;12865:15:1;;12860:2;12845:18;;12838:43;12897:18;;;12890:34;;;12955:2;12940:18;;12933:34;;;61797:53:0::1;::::0;12744:3:1;12729:19;61797:53:0::1;;;;;;;61643:219;60750:1119;60577:1292:::0;;;;:::o;56185:126::-;56234:18;56272:31;56292:10;56272:19;:31::i;:::-;56265:38;;56185:126;:::o;59387:1182::-;49247:4;49271:7;-1:-1:-1;;;49271:7:0;;;;49525:9;49517:38;;;;-1:-1:-1;;;49517:38:0;;;;;;;:::i;:::-;59512:24:::1;59539:36;59555:10;59567:7;59539:15;:36::i;:::-;59595:18:::0;;59512:63;;-1:-1:-1;;;;;;59595:32:0::1;59586:70;;;::::0;-1:-1:-1;;;59586:70:0;;7124:2:1;59586:70:0::1;::::0;::::1;7106:21:1::0;7163:2;7143:18;;;7136:30;-1:-1:-1;;;7182:18:1;;;7175:54;7246:18;;59586:70:0::1;6922:348:1::0;59586:70:0::1;59714:7;:13;;;59701:9;:26;;59693:77;;;::::0;-1:-1:-1;;;59693:77:0;;13180:2:1;59693:77:0::1;::::0;::::1;13162:21:1::0;13219:2;13199:18;;;13192:30;13258:34;13238:18;;;13231:62;-1:-1:-1;;;13309:18:1;;;13302:36;13355:19;;59693:77:0::1;12978:402:1::0;59693:77:0::1;59833:13;::::0;::::1;::::0;-1:-1:-1;;;;;59833:27:0::1;::::0;59825:66:::1;;;::::0;-1:-1:-1;;;59825:66:0;;13587:2:1;59825:66:0::1;::::0;::::1;13569:21:1::0;13626:2;13606:18;;;13599:30;13665:28;13645:18;;;13638:56;13711:18;;59825:66:0::1;13385:350:1::0;59825:66:0::1;59929:9;59912:14;59969:50;59982:25;59929:9:::0;60003:3:::1;59982:12;:25::i;59969:50::-;59949:70;;60052:7;2065::::0;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;60052:7:::1;-1:-1:-1::0;;;;;60034:25:0::1;:7;:14;;;-1:-1:-1::0;;;;;60034:25:0::1;::::0;60030:44:::1;;-1:-1:-1::0;60073:1:0::1;60030:44;60085:21;60109:31;60122:6;60130:9;60109:12;:31::i;:::-;60085:55;;60161:7;:14;;;-1:-1:-1::0;;;;;60153:32:0::1;:47;60186:13;60153:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;60215:13:0;;60211:87:::1;;60253:12;::::0;60245:41:::1;::::0;-1:-1:-1;;;;;60253:12:0;;::::1;::::0;60245:41;::::1;;;::::0;60276:9;;60253:12:::1;60245:41:::0;60253:12;60245:41;60276:9;60253:12;60245:41;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;60211:87;60326:18:::0;;60386:15:::1;::::0;::::1;::::0;60318:84:::1;::::0;-1:-1:-1;;;60318:84:0;;-1:-1:-1;;;;;60318:40:0;;::::1;::::0;::::1;::::0;:84:::1;::::0;60367:4:::1;::::0;60374:10:::1;::::0;60318:84:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;60413:37;60430:10;60442:7;60413:16;:37::i;:::-;60472:14;::::0;;::::1;::::0;60500:18;;60520:15:::1;::::0;;::::1;::::0;60537:13:::1;::::0;;::::1;::::0;60468:83;;-1:-1:-1;;;;;14055:15:1;;;14037:34;;60488:10:0::1;14087:18:1::0;;;14080:43;;;;14159:15;;;;14139:18;;;14132:43;;;;14191:18;;;14184:34;;;;14249:3;14234:19;;14227:35;60468:83:0::1;::::0;13986:3:1;13971:19;60468:83:0::1;;;;;;;59501:1068;;;;59387:1182:::0;;:::o;56977:107::-;57025:18;57063:13;57056:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;57056:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56977:107;:::o;61877:585::-;61951:22;61976:36;61992:10;62004:7;61976:15;:36::i;:::-;62032:16;;61951:61;;-1:-1:-1;;;;;;62032:30:0;62023:76;;;;-1:-1:-1;;;62023:76:0;;14475:2:1;62023:76:0;;;14457:21:1;;;14494:18;;;14487:30;14553:34;14533:18;;;14526:62;14605:18;;62023:76:0;14273:356:1;62023:76:0;2065:7;2092:6;-1:-1:-1;;;;;2092:6:0;62113:10;:21;62110:112;;62173:5;:12;;;-1:-1:-1;;;;;62159:26:0;:10;-1:-1:-1;;;;;62159:26:0;;62151:59;;;;-1:-1:-1;;;62151:59:0;;14836:2:1;62151:59:0;;;14818:21:1;14875:2;14855:18;;;14848:30;-1:-1:-1;;;14894:18:1;;;14887:50;14954:18;;62151:59:0;14634:344:1;62151:59:0;62240:5;:16;;;-1:-1:-1;;;;;62232:38:0;;62279:4;62286:5;:12;;;62300:5;:13;;;62232:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;62325:48;62342:5;:16;;;62359:5;:13;;;62325:16;:48::i;:::-;62408:12;;;;;62422:16;;62440:13;;;;62391:63;;;;;;62408:12;62422:16;62391:63;:::i;:::-;;;;;;;;61940:522;61877:585;;:::o;55042:126::-;1905:13;:11;:13::i;:::-;55129:31;;::::1;::::0;:13:::1;::::0;:31:::1;::::0;::::1;::::0;::::1;:::i;54370:115::-:0;1905:13;:11;:13::i;:::-;54447:12:::1;:30:::0;;-1:-1:-1;;;;;;54447:30:0::1;-1:-1:-1::0;;;;;54447:30:0;;;::::1;::::0;;;::::1;::::0;;54370:115::o;2925:201::-;1905:13;:11;:13::i;:::-;-1:-1:-1;;;;;3014:22:0;::::1;3006:73;;;::::0;-1:-1:-1;;;3006:73:0;;15185:2:1;3006:73:0::1;::::0;::::1;15167:21:1::0;15224:2;15204:18;;;15197:30;15263:34;15243:18;;;15236:62;-1:-1:-1;;;15314:18:1;;;15307:36;15360:19;;3006:73:0::1;14983:402:1::0;3006:73:0::1;3090:28;3109:8;3090:18;:28::i;:::-;2925:201:::0;:::o;55717:261::-;1905:13;:11;:13::i;:::-;55840:30:::1;::::0;-1:-1:-1;;;55840:30:0;;55864:4:::1;55840:30;::::0;::::1;5581:51:1::0;55805:5:0;;55783:12:::1;::::0;-1:-1:-1;;;;;55840:15:0;::::1;::::0;::::1;::::0;5554:18:1;;55840:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;55822:48;;55881:5;-1:-1:-1::0;;;;;55881:14:0::1;;55896:7;2065::::0;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;55896:7:::1;55881:32;::::0;-1:-1:-1;;;;;;55881:32:0::1;::::0;;;;;;-1:-1:-1;;;;;10168:32:1;;;55881::0::1;::::0;::::1;10150:51:1::0;10217:18;;;10210:34;;;10123:18;;55881:32:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;55929:41;55943:10;55955:5;55962:7;55929:41;;;;;;;;:::i;2184:132::-:0;2065:7;2092:6;-1:-1:-1;;;;;2092:6:0;736:10;2248:23;2240:68;;;;-1:-1:-1;;;2240:68:0;;15874:2:1;2240:68:0;;;15856:21:1;;;15893:18;;;15886:30;15952:34;15932:18;;;15925:62;16004:18;;2240:68:0;15672:356:1;35741:98:0;35799:7;35826:5;35830:1;35826;:5;:::i;:::-;35819:12;35741:98;-1:-1:-1;;;35741:98:0:o;35342:::-;35400:7;35427:5;35431:1;35427;:5;:::i;34985:98::-;35043:7;35070:5;35074:1;35070;:5;:::i;6528:205::-;6629:96;6649:5;6679:27;;;6708:4;6714:2;6718:5;6656:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6656:68:0;;;;;;;;;;;;;;-1:-1:-1;;;;;6656:68:0;-1:-1:-1;;;;;;6656:68:0;;;;;;;;;;6629:19;:96::i;:::-;6528:205;;;;:::o;52743:985::-;52845:13;52859:20;;-1:-1:-1;;;;;52845:64:0;;;:13;52859:24;;52882:1;;52859:24;:::i;:::-;52845:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:50;-1:-1:-1;;;;;52845:50:0;:64;52844:156;;;;-1:-1:-1;52941:13:0;52955:20;;52992:7;;52941:13;52955:24;;52978:1;;52955:24;:::i;:::-;52941:39;;;;;;;;:::i;:::-;;;;;;;;;;;:47;;;:58;52844:156;52826:363;;;53044:13;53058:20;;53027:16;;:63;;53058:23;;53080:1;;53058:23;:::i;:::-;53044:38;;;;;;;;:::i;:::-;;;;;;;;;:45;:38;;;;;:45;;;;;-1:-1:-1;;;;;53044:45:0;53027:63;;;;;;;;;;;;:65;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;53107:34:0;;;;;;:22;:34;;;;;:36;;;;;;:::i;:::-;;;;;;53158:13;:19;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;53158:19:0;;;;;;;;;-1:-1:-1;;;;;;53158:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52826:363;53203:9;53199:522;53222:13;:20;53218:24;;53199:522;;;53318:10;-1:-1:-1;;;;;53287:41:0;:13;53301:1;53287:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;-1:-1:-1;;;;;53287:27:0;:41;53286:118;;;;;53396:7;53368:13;53382:1;53368:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:35;53286:118;53264:446;;;53439:16;:41;53456:13;53470:1;53456:16;;;;;;;;:::i;:::-;;;;;;;;;:23;:16;;;;;:23;;;;;-1:-1:-1;;;;;53456:23:0;53439:41;;;;;;;;;;;;:43;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;53501:34:0;;;;;;:22;:34;;;;;:36;;;;;;:::i;:::-;;;;-1:-1:-1;;53575:13:0;53589:20;;:23;;53611:1;;53589:23;:::i;:::-;53575:38;;;;;;;;:::i;:::-;;;;;;;;;;;53556:13;53570:1;53556:16;;;;;;;;:::i;:::-;;;;;;;;;:57;;:16;;;;;:57;;-1:-1:-1;;;;;53556:57:0;;;-1:-1:-1;;;;;;53556:57:0;;;;;;-1:-1:-1;53556:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53632:19;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;53632:19:0;;;;;;;;;-1:-1:-1;;;;;;53632:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;52743:985:0:o;53264:446::-;53244:3;;;;:::i;:::-;;;;53199:522;;;;52743:985;;:::o;3286:191::-;3360:16;3379:6;;-1:-1:-1;;;;;3396:17:0;;;-1:-1:-1;;;;;;3396:17:0;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;52530:207::-;52602:13;:27;;;;;;;-1:-1:-1;52602:27:0;;;;;;;;;;;;;;-1:-1:-1;;;;;52602:27:0;;;-1:-1:-1;;;;;;52602:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52640:42;;;;;;;:44;;;;;;:::i;:::-;;;;-1:-1:-1;;52712:14:0;;;;;-1:-1:-1;;;;;52695:32:0;;;;;:16;:32;;;;;:34;;;;;;:::i;:::-;;;;;;52530:207;:::o;9231:716::-;9655:23;9681:69;9709:4;9681:69;;;;;;;;;;;;;;;;;9689:5;-1:-1:-1;;;;;9681:27:0;;;:69;;;;;:::i;:::-;9765:17;;9655:95;;-1:-1:-1;9765:21:0;9761:179;;9862:10;9851:30;;;;;;;;;;;;:::i;:::-;9843:85;;;;-1:-1:-1;;;9843:85:0;;17036:2:1;9843:85:0;;;17018:21:1;17075:2;17055:18;;;17048:30;17114:34;17094:18;;;17087:62;-1:-1:-1;;;17165:18:1;;;17158:40;17215:19;;9843:85:0;16834:406:1;42812:229:0;42949:12;42981:52;43003:6;43011:4;43017:1;43020:12;42981:21;:52::i;:::-;42974:59;42812:229;-1:-1:-1;;;;42812:229:0:o;43898:455::-;44068:12;44126:5;44101:21;:30;;44093:81;;;;-1:-1:-1;;;44093:81:0;;17447:2:1;44093:81:0;;;17429:21:1;17486:2;17466:18;;;17459:30;17525:34;17505:18;;;17498:62;-1:-1:-1;;;17576:18:1;;;17569:36;17622:19;;44093:81:0;17245:402:1;44093:81:0;44186:12;44200:23;44227:6;-1:-1:-1;;;;;44227:11:0;44246:5;44253:4;44227:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44185:73;;;;44276:69;44303:6;44311:7;44320:10;44332:12;44276:26;:69::i;:::-;44269:76;43898:455;-1:-1:-1;;;;;;;43898:455:0:o;46471:644::-;46656:12;46685:7;46681:427;;;46713:10;:17;46734:1;46713:22;46709:290;;-1:-1:-1;;;;;40351:19:0;;;46923:60;;;;-1:-1:-1;;;46923:60:0;;18401:2:1;46923:60:0;;;18383:21:1;18440:2;18420:18;;;18413:30;18479:31;18459:18;;;18452:59;18528:18;;46923:60:0;18199:353:1;46923:60:0;-1:-1:-1;47020:10:0;47013:17;;46681:427;47063:33;47071:10;47083:12;47818:17;;:21;47814:388;;48050:10;48044:17;48107:15;48094:10;48090:2;48086:19;48079:44;47814:388;48177:12;48170:20;;-1:-1:-1;;;48170:20:0;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:131::-;-1:-1:-1;;;;;274:31:1;;264:42;;254:70;;320:1;317;310:12;335:134;403:20;;432:31;403:20;432:31;:::i;474:247::-;533:6;586:2;574:9;565:7;561:23;557:32;554:52;;;602:1;599;592:12;554:52;641:9;628:23;660:31;685:5;660:31;:::i;726:439::-;843:12;;-1:-1:-1;;;;;839:21:1;;;827:34;;910:4;899:16;;;893:23;877:14;;;870:47;970:4;959:16;;;953:23;949:32;;933:14;;;926:56;1031:4;1020:16;;;1014:23;998:14;;;991:47;1091:4;1080:16;;;1074:23;1070:32;;;1054:14;;;1047:56;807:3;1141:16;;;1135:23;1119:14;;1112:47;726:439::o;1170:709::-;1395:2;1447:21;;;1517:13;;1420:18;;;1539:22;;;1366:4;;1395:2;1618:15;;;;1592:2;1577:18;;;1366:4;1661:192;1675:6;1672:1;1669:13;1661:192;;;1724:47;1767:3;1758:6;1752:13;1724:47;:::i;:::-;1828:15;;;;1800:4;1791:14;;;;;1697:1;1690:9;1661:192;;;-1:-1:-1;1870:3:1;;1170:709;-1:-1:-1;;;;;;1170:709:1:o;1884:127::-;1945:10;1940:3;1936:20;1933:1;1926:31;1976:4;1973:1;1966:15;2000:4;1997:1;1990:15;2016:1121;2100:6;2131:2;2174;2162:9;2153:7;2149:23;2145:32;2142:52;;;2190:1;2187;2180:12;2142:52;2230:9;2217:23;2259:18;2300:2;2292:6;2289:14;2286:34;;;2316:1;2313;2306:12;2286:34;2354:6;2343:9;2339:22;2329:32;;2399:7;2392:4;2388:2;2384:13;2380:27;2370:55;;2421:1;2418;2411:12;2370:55;2457:2;2444:16;2479:2;2475;2472:10;2469:36;;;2485:18;;:::i;:::-;2531:2;2528:1;2524:10;2563:2;2557:9;2626:2;2622:7;2617:2;2613;2609:11;2605:25;2597:6;2593:38;2681:6;2669:10;2666:22;2661:2;2649:10;2646:18;2643:46;2640:72;;;2692:18;;:::i;:::-;2728:2;2721:22;2778:18;;;2812:15;;;;-1:-1:-1;2854:11:1;;;2850:20;;;2882:19;;;2879:39;;;2914:1;2911;2904:12;2879:39;2938:11;;;;2958:148;2974:6;2969:3;2966:15;2958:148;;;3040:23;3059:3;3040:23;:::i;:::-;3028:36;;2991:12;;;;3084;;;;2958:148;;;3125:6;2016:1121;-1:-1:-1;;;;;;;;2016:1121:1:o;3142:315::-;3210:6;3218;3271:2;3259:9;3250:7;3246:23;3242:32;3239:52;;;3287:1;3284;3277:12;3239:52;3326:9;3313:23;3345:31;3370:5;3345:31;:::i;:::-;3395:5;3447:2;3432:18;;;;3419:32;;-1:-1:-1;;;3142:315:1:o;3462:673::-;3648:2;3700:21;;;3770:13;;3673:18;;;3792:22;;;3619:4;;3648:2;3871:15;;;;3845:2;3830:18;;;3619:4;3914:195;3928:6;3925:1;3922:13;3914:195;;;3993:13;;-1:-1:-1;;;;;3989:39:1;3977:52;;4084:15;;;;4049:12;;;;4025:1;3943:9;3914:195;;4514:253;4702:3;4687:19;;4715:46;4691:9;4743:6;4715:46;:::i;5643:525::-;5729:6;5737;5745;5753;5806:3;5794:9;5785:7;5781:23;5777:33;5774:53;;;5823:1;5820;5813:12;5774:53;5862:9;5849:23;5881:31;5906:5;5881:31;:::i;:::-;5931:5;-1:-1:-1;5983:2:1;5968:18;;5955:32;;-1:-1:-1;6034:2:1;6019:18;;6006:32;;-1:-1:-1;6090:2:1;6075:18;;6062:32;6103:33;6062:32;6103:33;:::i;:::-;5643:525;;;;-1:-1:-1;5643:525:1;;-1:-1:-1;;5643:525:1:o;6173:127::-;6234:10;6229:3;6225:20;6222:1;6215:31;6265:4;6262:1;6255:15;6289:4;6286:1;6279:15;6305:127;6366:10;6361:3;6357:20;6354:1;6347:31;6397:4;6394:1;6387:15;6421:4;6418:1;6411:15;6437:135;6476:3;6497:17;;;6494:43;;6517:18;;:::i;:::-;-1:-1:-1;6564:1:1;6553:13;;6437:135::o;6577:340::-;6779:2;6761:21;;;6818:2;6798:18;;;6791:30;-1:-1:-1;;;6852:2:1;6837:18;;6830:46;6908:2;6893:18;;6577:340::o;7636:184::-;7706:6;7759:2;7747:9;7738:7;7734:23;7730:32;7727:52;;;7775:1;7772;7765:12;7727:52;-1:-1:-1;7798:16:1;;7636:184;-1:-1:-1;7636:184:1:o;8982:375::-;-1:-1:-1;;;;;9240:15:1;;;9222:34;;9292:15;;;;9287:2;9272:18;;9265:43;9339:2;9324:18;;9317:34;;;;9172:2;9157:18;;8982:375::o;10610:251::-;10680:6;10733:2;10721:9;10712:7;10708:23;10704:32;10701:52;;;10749:1;10746;10739:12;10701:52;10781:9;10775:16;10800:31;10825:5;10800:31;:::i;15390:277::-;15457:6;15510:2;15498:9;15489:7;15485:23;15481:32;15478:52;;;15526:1;15523;15516:12;15478:52;15558:9;15552:16;15611:5;15604:13;15597:21;15590:5;15587:32;15577:60;;15633:1;15630;15623:12;16033:217;16073:1;16099;16089:132;;16143:10;16138:3;16134:20;16131:1;16124:31;16178:4;16175:1;16168:15;16206:4;16203:1;16196:15;16089:132;-1:-1:-1;16235:9:1;;16033:217::o;16255:168::-;16328:9;;;16359;;16376:15;;;16370:22;;16356:37;16346:71;;16397:18;;:::i;16428:128::-;16495:9;;;16516:11;;;16513:37;;;16530:18;;:::i;16561:136::-;16600:3;16628:5;16618:39;;16637:18;;:::i;:::-;-1:-1:-1;;;16673:18:1;;16561:136::o;16702:127::-;16763:10;16758:3;16754:20;16751:1;16744:31;16794:4;16791:1;16784:15;16818:4;16815:1;16808:15;17652:250;17737:1;17747:113;17761:6;17758:1;17755:13;17747:113;;;17837:11;;;17831:18;17818:11;;;17811:39;17783:2;17776:10;17747:113;;;-1:-1:-1;;17894:1:1;17876:16;;17869:27;17652:250::o;17907:287::-;18036:3;18074:6;18068:13;18090:66;18149:6;18144:3;18137:4;18129:6;18125:17;18090:66;:::i;:::-;18172:16;;;;;17907:287;-1:-1:-1;;17907:287:1:o;18557:396::-;18706:2;18695:9;18688:21;18669:4;18738:6;18732:13;18781:6;18776:2;18765:9;18761:18;18754:34;18797:79;18869:6;18864:2;18853:9;18849:18;18844:2;18836:6;18832:15;18797:79;:::i;:::-;18937:2;18916:15;-1:-1:-1;;18912:29:1;18897:45;;;;18944:2;18893:54;;18557:396;-1:-1:-1;;18557:396:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2111800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyNFT(address,uint256)": "infinite",
								"buyNFTbyERC20(address,uint256)": "infinite",
								"deSellNFT(address,uint256)": "infinite",
								"getAllowedCollections()": "infinite",
								"getAllowedERC20()": "infinite",
								"getCollectionTokensAtSale(address)": "infinite",
								"getFeeReceiver()": "2420",
								"getMyTokensAtSale()": "infinite",
								"getTokensAtSale()": "infinite",
								"getTokensAtSaleCount()": "2403",
								"getTradeFee()": "2382",
								"getUserTokensAtSale(address)": "infinite",
								"isAllowedERC20(address)": "infinite",
								"isMarketPlaceContract()": "255",
								"marketTokensGet(address,uint256)": "infinite",
								"owner()": "2388",
								"paused()": "2366",
								"renounceOwnership()": "infinite",
								"sellNFT(address,uint256,uint256,address)": "infinite",
								"setAllowedCollections(address[])": "infinite",
								"setAllowedERC20(address[])": "infinite",
								"setFeeReceiver(address)": "26795",
								"setTradeFee(uint256)": "24512",
								"transferOwnership(address)": "infinite",
								"version()": "285",
								"withdrawERC20(address)": "infinite",
								"withdrawWei()": "infinite"
							},
							"internal": {
								"_marketTokensAdd(struct Marketplace.SelledNFT memory)": "infinite",
								"_marketTokensDel(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 51629,
									"end": 51630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51604,
									"end": 51630,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 51604,
									"end": 51630,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 53744,
									"end": 54263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1740,
									"end": 1772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49087,
									"end": 49092,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53935,
									"end": 53948,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 53935,
									"end": 53955,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 53931,
									"end": 53932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53931,
									"end": 53955,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 54017,
									"end": 54021,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53977,
									"end": 53996,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53997,
									"end": 54010,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 54011,
									"end": 54012,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 53997,
									"end": 54013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 53997,
									"end": 54013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 53977,
									"end": 54021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54054,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 54068,
									"end": 54081,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 54082,
									"end": 54083,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 54068,
									"end": 54084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54068,
									"end": 54084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54036,
									"end": 54086,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 53957,
									"end": 53960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53957,
									"end": 53960,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 53915,
									"end": 54098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 54124,
									"end": 54151,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 54124,
									"end": 54151,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 54124,
									"end": 54151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 54168,
									"end": 54181,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54155,
									"end": 54165,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 54123,
									"end": 54181,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54120,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54108,
									"end": 54181,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 54192,
									"end": 54214,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54192,
									"end": 54214,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54192,
									"end": 54214,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54238,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 54225,
									"end": 54238,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 54225,
									"end": 54255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54225,
									"end": 54255,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53744,
									"end": 54263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3349,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 50386,
									"end": 62465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 238,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 225,
									"end": 238,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 267,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 267,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 257,
									"end": 299,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 257,
									"end": 299,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 247,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 247,
									"end": 317,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 313,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 311,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 303,
									"end": 315,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 247,
									"end": 317,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 247,
									"end": 317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1251,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 328,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 393,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 439,
									"end": 443,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 431,
									"end": 437,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 427,
									"end": 444,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 423,
									"end": 450,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 413,
									"end": 468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 413,
									"end": 468,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 461,
									"end": 462,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 454,
									"end": 466,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 413,
									"end": 468,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 413,
									"end": 468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 487,
									"end": 500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 487,
									"end": 500,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 519,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 572,
									"end": 582,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 572,
									"end": 582,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 572,
									"end": 582,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 569,
									"end": 605,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 569,
									"end": 605,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 569,
									"end": 605,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 585,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 585,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 585,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 585,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 585,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 633,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 629,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 624,
									"end": 634,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 666,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 726,
									"end": 728,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 722,
									"end": 729,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 717,
									"end": 719,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 713,
									"end": 715,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 709,
									"end": 720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 705,
									"end": 730,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 697,
									"end": 703,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 693,
									"end": 731,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 769,
									"end": 779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 766,
									"end": 788,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 761,
									"end": 763,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 749,
									"end": 759,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 746,
									"end": 764,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 743,
									"end": 789,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 740,
									"end": 812,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 740,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 740,
									"end": 812,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 792,
									"end": 810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 792,
									"end": 810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 792,
									"end": 810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 792,
									"end": 810,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 792,
									"end": 810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 828,
									"end": 830,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 821,
									"end": 843,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 878,
									"end": 896,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 878,
									"end": 896,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 878,
									"end": 896,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 954,
									"end": 969,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 954,
									"end": 969,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 969,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 950,
									"end": 974,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 950,
									"end": 974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 950,
									"end": 974,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 986,
									"end": 1001,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 986,
									"end": 1001,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 986,
									"end": 1001,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1004,
									"end": 1016,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1050,
									"end": 1052,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1042,
									"end": 1048,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1085,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1174,
									"end": 1177,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1144,
									"end": 1178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1179,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1179,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1245,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1251,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1251,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 1409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1417,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1483,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1468,
									"end": 1477,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1459,
									"end": 1466,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1478,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1484,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1498,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1494,
									"end": 1495,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1487,
									"end": 1499,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1540,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1589,
									"end": 1603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1603,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1616,
									"end": 1617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1614,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1606,
									"end": 1618,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1703,
									"end": 1710,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1700,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1639,
									"end": 1711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1711,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1778,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1730,
									"end": 1779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1779,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1821,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1808,
									"end": 1817,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1804,
									"end": 1822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1823,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1823,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1873,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1873,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 1900,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1888,
									"end": 1896,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1901,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1904,
									"end": 1916,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2003,
									"end": 2010,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1981,
									"end": 1990,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1977,
									"end": 2001,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1937,
									"end": 2011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 2011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 2011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 2011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2149,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2022,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2078,
									"end": 2081,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2074,
									"end": 2094,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2064,
									"end": 2095,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2114,
									"end": 2118,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2111,
									"end": 2112,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2104,
									"end": 2119,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2138,
									"end": 2142,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2135,
									"end": 2136,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2128,
									"end": 2143,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2196,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2283,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2268,
									"end": 2271,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2264,
									"end": 2284,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2254,
									"end": 2285,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2308,
									"end": 2312,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2305,
									"end": 2306,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2298,
									"end": 2313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2336,
									"end": 2340,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2333,
									"end": 2334,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2326,
									"end": 2341,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2379,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2367,
									"end": 2380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2154,
									"end": 2386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 62465,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220529b4f4d10d61f8c30b9b39cfe469759a012c2d5300a5faec809f30b53ed207064736f6c63430008120033",
									".code": [
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "785FA7CE"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "D55A34E4"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "E9E4E160"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "E9E4E160"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "EFDCD974"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "F4F3B200"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "D55A34E4"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "DA24548A"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "E8A35392"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "98F748BD"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "98F748BD"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "A096C5A2"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "A82BA76F"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "C8F77899"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "785FA7CE"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "952977F5"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "5211AC2E"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "6629E913"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "69C57352"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "5211AC2E"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "527F2902"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "10603023"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "19C8C1C5"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "1ED56D44"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "27713536"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "2B205D14"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "3A51F383"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 62465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 56077,
											"end": 56177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 56077,
											"end": 56177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 56317,
											"end": 56855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 56317,
											"end": 56855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 56317,
											"end": 56855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 57090,
											"end": 57643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 57090,
											"end": 57643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 54614,
											"end": 55032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 54614,
											"end": 55032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57651,
											"end": 59377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 57651,
											"end": 59377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54493,
											"end": 54608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 54493,
											"end": 54608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 55518,
											"end": 55709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51717,
											"end": 51721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4305,
											"end": 4319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4321,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4140,
											"end": 4327,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 51594,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4332,
											"end": 4509,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52088,
											"end": 52522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 52088,
											"end": 52522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 52088,
											"end": 52522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 55180,
											"end": 55284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 55292,
											"end": 55510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 55292,
											"end": 55510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5599,
											"end": 5631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5599,
											"end": 5631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5569,
											"end": 5571,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5435,
											"end": 5638,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56054,
											"end": 56063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56054,
											"end": 56063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 55986,
											"end": 56071,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 60577,
											"end": 61869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 60577,
											"end": 61869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 56185,
											"end": 56311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59387,
											"end": 60569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 59387,
											"end": 60569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56943,
											"end": 56956,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56943,
											"end": 56963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 56863,
											"end": 56971,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 56977,
											"end": 57084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61877,
											"end": 62462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 61877,
											"end": 62462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54344,
											"end": 54356,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54344,
											"end": 54356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54344,
											"end": 54356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 54271,
											"end": 54364,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 55042,
											"end": 55168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 55042,
											"end": 55168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 54370,
											"end": 54485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 54370,
											"end": 54485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 55717,
											"end": 55978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 55717,
											"end": 55978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 56077,
											"end": 56177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56145,
											"end": 56154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56145,
											"end": 56169,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56472,
											"end": 56473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56461,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56401,
											"end": 56423,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56401,
											"end": 56423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56441,
											"end": 56827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 56441,
											"end": 56827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56528,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 56496,
											"end": 56537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 56496,
											"end": 56537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56496,
											"end": 56537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56490,
											"end": 56537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56490,
											"end": 56537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56552,
											"end": 56567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56591,
											"end": 56600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56610,
											"end": 56623,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56610,
											"end": 56630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56606,
											"end": 56630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56606,
											"end": 56630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56687,
											"end": 56693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56660,
											"end": 56693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56673,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56674,
											"end": 56675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56660,
											"end": 56676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56683,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56660,
											"end": 56683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56660,
											"end": 56693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56656,
											"end": 56801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56746,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56747,
											"end": 56748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56733,
											"end": 56749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56733,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56722,
											"end": 56729,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56722,
											"end": 56729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56718,
											"end": 56730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56718,
											"end": 56749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 56772,
											"end": 56781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56772,
											"end": 56781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56801,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56656,
											"end": 56801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 56632,
											"end": 56635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56632,
											"end": 56635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56586,
											"end": 56816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56475,
											"end": 56827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56441,
											"end": 56827,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 56441,
											"end": 56827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56317,
											"end": 56855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 57090,
											"end": 57643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57242,
											"end": 57243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57227,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57166,
											"end": 57188,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57166,
											"end": 57188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57205,
											"end": 57243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57201,
											"end": 57615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 57201,
											"end": 57615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57304,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 57266,
											"end": 57317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 57266,
											"end": 57317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57266,
											"end": 57317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57260,
											"end": 57317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57260,
											"end": 57317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57332,
											"end": 57347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57371,
											"end": 57380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57366,
											"end": 57604,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 57366,
											"end": 57604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57390,
											"end": 57403,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57390,
											"end": 57410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57386,
											"end": 57410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57386,
											"end": 57410,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57366,
											"end": 57604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57366,
											"end": 57604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 57366,
											"end": 57604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57471,
											"end": 57481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57440,
											"end": 57481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57453,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57454,
											"end": 57455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 57440,
											"end": 57456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57440,
											"end": 57467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57440,
											"end": 57481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57436,
											"end": 57589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 57436,
											"end": 57589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57534,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57535,
											"end": 57536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 57521,
											"end": 57537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57521,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57509,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57510,
											"end": 57517,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57510,
											"end": 57517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 57506,
											"end": 57518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 57560,
											"end": 57569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57560,
											"end": 57569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57436,
											"end": 57589,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 57436,
											"end": 57589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 57412,
											"end": 57415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57412,
											"end": 57415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57366,
											"end": 57604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 57366,
											"end": 57604,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54730,
											"end": 54748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54730,
											"end": 54755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54726,
											"end": 54755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54726,
											"end": 54755,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54831,
											"end": 54836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54777,
											"end": 54796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54777,
											"end": 54828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54805,
											"end": 54823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54824,
											"end": 54825,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 54805,
											"end": 54826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54805,
											"end": 54826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54805,
											"end": 54826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54777,
											"end": 54836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54777,
											"end": 54836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 54757,
											"end": 54760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 54757,
											"end": 54760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 54757,
											"end": 54760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 54707,
											"end": 54848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54858,
											"end": 54883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54865,
											"end": 54883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54865,
											"end": 54883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54858,
											"end": 54883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 54858,
											"end": 54883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54858,
											"end": 54883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54858,
											"end": 54883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 54907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54917,
											"end": 54932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54917,
											"end": 54939,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54913,
											"end": 54914,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54913,
											"end": 54939,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 54979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54993,
											"end": 55008,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55009,
											"end": 55010,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 54993,
											"end": 55011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54961,
											"end": 55013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54961,
											"end": 55013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54941,
											"end": 54944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54941,
											"end": 54944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 54941,
											"end": 54944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54941,
											"end": 54944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 54941,
											"end": 54944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54941,
											"end": 54944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 54941,
											"end": 54944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54941,
											"end": 54944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54941,
											"end": 54944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54941,
											"end": 54944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54894,
											"end": 55025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 55032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 49517,
											"end": 49555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57763,
											"end": 57787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57790,
											"end": 57826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 57806,
											"end": 57816,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57818,
											"end": 57825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57790,
											"end": 57805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 57790,
											"end": 57826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57790,
											"end": 57826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 57790,
											"end": 57826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57845,
											"end": 57863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57845,
											"end": 57863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57763,
											"end": 57826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57763,
											"end": 57826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57845,
											"end": 57877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57837,
											"end": 57906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57837,
											"end": 57906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57837,
											"end": 57906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7106,
											"end": 7127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7165,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54686973204E4654206973206E6F7420666F722073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6922,
											"end": 7270,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 57837,
											"end": 57906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57925,
											"end": 57938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57925,
											"end": 57938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57925,
											"end": 57938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57925,
											"end": 57938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57925,
											"end": 57952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57917,
											"end": 57989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57917,
											"end": 57989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57917,
											"end": 57989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57917,
											"end": 57989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7589,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 7625,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7607,
											"end": 7625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7275,
											"end": 7631,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 57917,
											"end": 57989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58027,
											"end": 58040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58027,
											"end": 58040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58027,
											"end": 58040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58027,
											"end": 58040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58075,
											"end": 58105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58075,
											"end": 58105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58104,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58075,
											"end": 58105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58002,
											"end": 58017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58002,
											"end": 58017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58075,
											"end": 58093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58093,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 58075,
											"end": 58093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58075,
											"end": 58105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 58075,
											"end": 58105,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 58075,
											"end": 58105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58147,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58140,
											"end": 58153,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58124,
											"end": 58136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58124,
											"end": 58153,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58124,
											"end": 58153,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58116,
											"end": 58210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58116,
											"end": 58210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58116,
											"end": 58210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58116,
											"end": 58210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8009,
											"end": 8030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8066,
											"end": 8068,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8139,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E"
										},
										{
											"begin": 8085,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8085,
											"end": 8103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20796F75722062616C616E636520746F20706179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8149,
											"end": 8199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8216,
											"end": 8235,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8216,
											"end": 8235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7825,
											"end": 8241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 58116,
											"end": 58210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58246,
											"end": 58291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58246,
											"end": 58291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58265,
											"end": 58275,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58246,
											"end": 58291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8458,
											"end": 8492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58285,
											"end": 58289,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58221,
											"end": 58243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58221,
											"end": 58243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58246,
											"end": 58264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58264,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 58246,
											"end": 58264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58246,
											"end": 58291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 58246,
											"end": 58291,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 58246,
											"end": 58291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58221,
											"end": 58291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58221,
											"end": 58291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58328,
											"end": 58335,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58328,
											"end": 58341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58328,
											"end": 58341,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58328,
											"end": 58341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58310,
											"end": 58324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58310,
											"end": 58341,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58310,
											"end": 58341,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58302,
											"end": 58404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58302,
											"end": 58404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58302,
											"end": 58404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8757,
											"end": 8759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58302,
											"end": 58404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 8798,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 8776,
											"end": 8794,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8776,
											"end": 8794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8776,
											"end": 8794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8869,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074"
										},
										{
											"begin": 8815,
											"end": 8833,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8815,
											"end": 8833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 8833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "6F2073656E642074686520707572636861736520616D6F756E74000000000000"
										},
										{
											"begin": 8886,
											"end": 8904,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8886,
											"end": 8904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 8904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8879,
											"end": 8935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8971,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8952,
											"end": 8971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8555,
											"end": 8977,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 58302,
											"end": 58404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58444,
											"end": 58457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58444,
											"end": 58457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58444,
											"end": 58457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58444,
											"end": 58457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58488,
											"end": 58538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 58501,
											"end": 58526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 58444,
											"end": 58457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58522,
											"end": 58525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 58501,
											"end": 58513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 58501,
											"end": 58526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58501,
											"end": 58526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 58501,
											"end": 58526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58528,
											"end": 58537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58528,
											"end": 58537,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58488,
											"end": 58500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 58488,
											"end": 58538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58488,
											"end": 58538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 58488,
											"end": 58538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58468,
											"end": 58538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58468,
											"end": 58538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58571,
											"end": 58578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58571,
											"end": 58578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 58571,
											"end": 58578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58553,
											"end": 58578,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58553,
											"end": 58560,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58553,
											"end": 58567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58553,
											"end": 58567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58553,
											"end": 58567,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58553,
											"end": 58578,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58553,
											"end": 58578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58549,
											"end": 58593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 58549,
											"end": 58593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58592,
											"end": 58593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58549,
											"end": 58593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 58549,
											"end": 58593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58628,
											"end": 58659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 58641,
											"end": 58647,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58649,
											"end": 58658,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58628,
											"end": 58640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 58628,
											"end": 58659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58628,
											"end": 58659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 58628,
											"end": 58659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58754,
											"end": 58768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58754,
											"end": 58768,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58754,
											"end": 58768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58754,
											"end": 58768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58672,
											"end": 58808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 58672,
											"end": 58808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58672,
											"end": 58697,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58672,
											"end": 58697,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58672,
											"end": 58697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58720,
											"end": 58730,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58720,
											"end": 58730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58672,
											"end": 58697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 58672,
											"end": 58808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58672,
											"end": 58808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 58672,
											"end": 58808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58823,
											"end": 58836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58823,
											"end": 58836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58819,
											"end": 59011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 58819,
											"end": 59011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58943,
											"end": 58955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58943,
											"end": 58955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58853,
											"end": 58999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 58853,
											"end": 58999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58853,
											"end": 58878,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58853,
											"end": 58878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58853,
											"end": 58878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58853,
											"end": 58878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58905,
											"end": 58915,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58905,
											"end": 58915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58943,
											"end": 58955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58975,
											"end": 58984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58853,
											"end": 58878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 58853,
											"end": 58999,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58853,
											"end": 58999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 58853,
											"end": 58999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59047,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59089,
											"end": 59104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59089,
											"end": 59104,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59089,
											"end": 59104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59089,
											"end": 59104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59021,
											"end": 59105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59021,
											"end": 59105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59021,
											"end": 59061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59061,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 59021,
											"end": 59061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59021,
											"end": 59105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59070,
											"end": 59074,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 59070,
											"end": 59074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59087,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 59021,
											"end": 59105,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59021,
											"end": 59105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59021,
											"end": 59105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59116,
											"end": 59153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 59133,
											"end": 59143,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 59145,
											"end": 59152,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 59116,
											"end": 59132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 59116,
											"end": 59153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59116,
											"end": 59153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 59116,
											"end": 59153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59198,
											"end": 59212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59198,
											"end": 59212,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59198,
											"end": 59212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59198,
											"end": 59212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59198,
											"end": 59212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59272,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59287,
											"end": 59302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59287,
											"end": 59302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59287,
											"end": 59302,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 59287,
											"end": 59302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59287,
											"end": 59302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59317,
											"end": 59330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59317,
											"end": 59330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59317,
											"end": 59330,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 59317,
											"end": 59330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59317,
											"end": 59330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59345,
											"end": 59358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59345,
											"end": 59358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59345,
											"end": 59358,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 59345,
											"end": 59358,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59345,
											"end": 59358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59228,
											"end": 59238,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9773,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9773,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9807,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9807,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9782,
											"end": 9825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 9859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 9859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9920,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9920,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9903,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9921,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9921,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9670,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9937,
											"end": 9956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A3D27CC8AC4E1915B6A89CE3E468D87AEB3CAF011A47E236DB61D098E452870C"
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9636,
											"end": 9639,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59171,
											"end": 59369,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 57752,
											"end": 59377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57752,
											"end": 59377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57752,
											"end": 59377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57752,
											"end": 59377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57752,
											"end": 59377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57752,
											"end": 59377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57752,
											"end": 59377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 59377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54546,
											"end": 54562,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54582,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54575,
											"end": 54600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54493,
											"end": 54608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 55518,
											"end": 55709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55618,
											"end": 55654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55586,
											"end": 55607,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 55586,
											"end": 55607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55626,
											"end": 55636,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55626,
											"end": 55636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55586,
											"end": 55607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55586,
											"end": 55607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55569,
											"end": 55583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55618,
											"end": 55654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55569,
											"end": 55583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55586,
											"end": 55607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55626,
											"end": 55636,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55618,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 55618,
											"end": 55654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55670,
											"end": 55701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55670,
											"end": 55701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55682,
											"end": 55692,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10217,
											"end": 10235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10217,
											"end": 10235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4"
										},
										{
											"begin": 55670,
											"end": 55701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55670,
											"end": 55701,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 55558,
											"end": 55709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52171,
											"end": 52191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 52171,
											"end": 52191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 52171,
											"end": 52191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52171,
											"end": 52191,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 52171,
											"end": 52191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52208,
											"end": 52217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52227,
											"end": 52240,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52227,
											"end": 52247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52223,
											"end": 52247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52223,
											"end": 52247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52323,
											"end": 52333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52292,
											"end": 52333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52305,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52306,
											"end": 52307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 52292,
											"end": 52308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52292,
											"end": 52319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52291,
											"end": 52409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52291,
											"end": 52409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52291,
											"end": 52409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 52291,
											"end": 52409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52291,
											"end": 52409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52401,
											"end": 52408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52386,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52387,
											"end": 52388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 52373,
											"end": 52389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52373,
											"end": 52397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52373,
											"end": 52408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52291,
											"end": 52409,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 52291,
											"end": 52409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52269,
											"end": 52483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52269,
											"end": 52483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 52269,
											"end": 52483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52464,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52465,
											"end": 52466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 52451,
											"end": 52467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52451,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52444,
											"end": 52467,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52269,
											"end": 52483,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 52269,
											"end": 52483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 52249,
											"end": 52252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52249,
											"end": 52252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52088,
											"end": 52522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55243,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55263,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55256,
											"end": 55276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55180,
											"end": 55284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 2759,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2732,
											"end": 2762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55352,
											"end": 55356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55352,
											"end": 55356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55385,
											"end": 55398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55385,
											"end": 55405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 55405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 55405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55453,
											"end": 55454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 55439,
											"end": 55455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55439,
											"end": 55455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55430,
											"end": 55455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55430,
											"end": 55455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55430,
											"end": 55455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55430,
											"end": 55455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55426,
											"end": 55468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 55426,
											"end": 55468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55464,
											"end": 55468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55464,
											"end": 55468,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55292,
											"end": 55510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55426,
											"end": 55468,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 55426,
											"end": 55468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 55406,
											"end": 55409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55406,
											"end": 55409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 55369,
											"end": 55480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55497,
											"end": 55502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55497,
											"end": 55502,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55292,
											"end": 55510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55292,
											"end": 55510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 49517,
											"end": 49555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60820,
											"end": 60851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60820,
											"end": 60851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60798,
											"end": 60905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60798,
											"end": 60905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60798,
											"end": 60905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60798,
											"end": 60905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10563,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420616C6C6F776564204E465420636F6C6C656374696F6E000000000000"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10508,
											"end": 10564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10255,
											"end": 10605,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 60798,
											"end": 60905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60962,
											"end": 60999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60962,
											"end": 60999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60962,
											"end": 60999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61003,
											"end": 61013,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60962,
											"end": 60989,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60989,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 60962,
											"end": 60989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60962,
											"end": 60999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 60962,
											"end": 60999,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 60962,
											"end": 60999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60962,
											"end": 61013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60962,
											"end": 61013,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60940,
											"end": 61066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60940,
											"end": 61066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60940,
											"end": 61066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11068,
											"end": 11070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60940,
											"end": 61066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11050,
											"end": 11071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11173,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11119,
											"end": 11174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11191,
											"end": 11209,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11191,
											"end": 11209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10866,
											"end": 11215,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 60940,
											"end": 61066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61093,
											"end": 61094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61085,
											"end": 61090,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61085,
											"end": 61094,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61077,
											"end": 61130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61077,
											"end": 61130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61077,
											"end": 61130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11422,
											"end": 11424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61077,
											"end": 61130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11461,
											"end": 11463,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11441,
											"end": 11459,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11441,
											"end": 11459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11441,
											"end": 11459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11434,
											"end": 11464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11500,
											"end": 11533,
											"name": "PUSH",
											"source": 1,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11473,
											"end": 11534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11551,
											"end": 11569,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11551,
											"end": 11569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 11220,
											"end": 11575,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 61077,
											"end": 61130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61145,
											"end": 61165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61145,
											"end": 61165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61145,
											"end": 61165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61141,
											"end": 61313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 61141,
											"end": 61313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61222,
											"end": 61244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 61237,
											"end": 61243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61222,
											"end": 61236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 61222,
											"end": 61244,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61222,
											"end": 61244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 61222,
											"end": 61244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61222,
											"end": 61252,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61222,
											"end": 61252,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61248,
											"end": 61252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61222,
											"end": 61252,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61214,
											"end": 61301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61214,
											"end": 61301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61214,
											"end": 61301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61214,
											"end": 61301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11821,
											"end": 11823,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11860,
											"end": 11894,
											"name": "PUSH",
											"source": 1,
											"value": "54686973204552433230206E6F7420616C6C6F77656420617320612074726164"
										},
										{
											"begin": 11840,
											"end": 11858,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11840,
											"end": 11858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11840,
											"end": 11858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E672063757272656E6379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11911,
											"end": 11929,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11911,
											"end": 11929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11911,
											"end": 11929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11904,
											"end": 11946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11963,
											"end": 11982,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11963,
											"end": 11982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 11580,
											"end": 11988,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 61214,
											"end": 61301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61423,
											"end": 61433,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61489,
											"end": 61504,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61526,
											"end": 61595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61351,
											"end": 61515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 61526,
											"end": 61558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 61526,
											"end": 61595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61579,
											"end": 61583,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 61579,
											"end": 61583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61400,
											"end": 61408,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 61400,
											"end": 61408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 61526,
											"end": 61595,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61526,
											"end": 61595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61526,
											"end": 61595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61606,
											"end": 61630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 61623,
											"end": 61629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61606,
											"end": 61622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 61606,
											"end": 61630,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61606,
											"end": 61630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 61606,
											"end": 61630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61647,
											"end": 61667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61647,
											"end": 61667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61711,
											"end": 61721,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 12324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12290,
											"end": 12324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12360,
											"end": 12375,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12355,
											"end": 12357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12333,
											"end": 12376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12392,
											"end": 12410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12392,
											"end": 12410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12392,
											"end": 12410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12419,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12455,
											"end": 12470,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12455,
											"end": 12470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12452,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12502,
											"end": 12505,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12487,
											"end": 12506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12487,
											"end": 12506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12515,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "44F716B281FA3E96FBD6EF888A275EF2FDF8914960A4C57C0BEF6CCAEBF0DF31"
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12239,
											"end": 12242,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61689,
											"end": 61759,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61797,
											"end": 61850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61797,
											"end": 61850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61810,
											"end": 61820,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12795,
											"end": 12829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12795,
											"end": 12829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 12862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12838,
											"end": 12881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12897,
											"end": 12915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12897,
											"end": 12915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12897,
											"end": 12915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12890,
											"end": 12924,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12890,
											"end": 12924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12890,
											"end": 12924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12955,
											"end": 12957,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12933,
											"end": 12967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12933,
											"end": 12967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12933,
											"end": 12967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C68DC1F889FA3A215DCDD97178AF6BD67FAB7B34138EEF18F4313AAC53F5B364"
										},
										{
											"begin": 61797,
											"end": 61850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12747,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12729,
											"end": 12748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61797,
											"end": 61850,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 61643,
											"end": 61862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60750,
											"end": 61869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60577,
											"end": 61869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56252,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56272,
											"end": 56303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 56292,
											"end": 56302,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 56272,
											"end": 56303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56303,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 56272,
											"end": 56303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56265,
											"end": 56303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56265,
											"end": 56303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56185,
											"end": 56311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 49517,
											"end": 49555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59512,
											"end": 59536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59539,
											"end": 59575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 59555,
											"end": 59565,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59567,
											"end": 59574,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59539,
											"end": 59554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 59539,
											"end": 59575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59539,
											"end": 59575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 59539,
											"end": 59575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59595,
											"end": 59613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59595,
											"end": 59613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59512,
											"end": 59575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59512,
											"end": 59575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59595,
											"end": 59627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59586,
											"end": 59656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59586,
											"end": 59656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59586,
											"end": 59656,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59586,
											"end": 59656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7106,
											"end": 7127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7165,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54686973204E4654206973206E6F7420666F722073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6922,
											"end": 7270,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 59586,
											"end": 59656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59714,
											"end": 59721,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59714,
											"end": 59727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59714,
											"end": 59727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59714,
											"end": 59727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59701,
											"end": 59710,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59701,
											"end": 59727,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59701,
											"end": 59727,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59693,
											"end": 59770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59693,
											"end": 59770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13180,
											"end": 13182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59693,
											"end": 59770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13221,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13192,
											"end": 13222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13258,
											"end": 13292,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F74207061696420656E6F75676820666F7220746869"
										},
										{
											"begin": 13238,
											"end": 13256,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13238,
											"end": 13256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13238,
											"end": 13256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13231,
											"end": 13293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73206974656D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13374,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13355,
											"end": 13374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 12978,
											"end": 13380,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 59693,
											"end": 59770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59833,
											"end": 59846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59833,
											"end": 59846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59833,
											"end": 59846,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59833,
											"end": 59846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59833,
											"end": 59860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59833,
											"end": 59860,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59825,
											"end": 59891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59825,
											"end": 59891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59825,
											"end": 59891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13587,
											"end": 13589,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59825,
											"end": 59891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13626,
											"end": 13628,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13599,
											"end": 13629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13665,
											"end": 13693,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204552433230000000000000"
										},
										{
											"begin": 13645,
											"end": 13663,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13645,
											"end": 13663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 13663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13638,
											"end": 13694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 13385,
											"end": 13735,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 59825,
											"end": 59891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59929,
											"end": 59938,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59912,
											"end": 59926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59969,
											"end": 60019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 59982,
											"end": 60007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 59929,
											"end": 59938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60003,
											"end": 60006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 59982,
											"end": 59994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 59982,
											"end": 60007,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59969,
											"end": 60019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 59969,
											"end": 60019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59949,
											"end": 60019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59949,
											"end": 60019,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60052,
											"end": 60059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60052,
											"end": 60059,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 60052,
											"end": 60059,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60034,
											"end": 60059,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60034,
											"end": 60041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60034,
											"end": 60048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60034,
											"end": 60048,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60034,
											"end": 60048,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60034,
											"end": 60059,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60034,
											"end": 60059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60030,
											"end": 60074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 60030,
											"end": 60074,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60073,
											"end": 60074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60030,
											"end": 60074,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 60030,
											"end": 60074,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60109,
											"end": 60140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 60122,
											"end": 60128,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60130,
											"end": 60139,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60109,
											"end": 60121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 60109,
											"end": 60140,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60109,
											"end": 60140,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 60109,
											"end": 60140,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60161,
											"end": 60168,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60161,
											"end": 60175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60161,
											"end": 60175,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60161,
											"end": 60175,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60153,
											"end": 60185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 60186,
											"end": 60199,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60153,
											"end": 60200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 60153,
											"end": 60200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60215,
											"end": 60228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60215,
											"end": 60228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60211,
											"end": 60298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 60211,
											"end": 60298,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60253,
											"end": 60265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60245,
											"end": 60286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60253,
											"end": 60265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60285,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60245,
											"end": 60286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60285,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60265,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60245,
											"end": 60286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60211,
											"end": 60298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 60211,
											"end": 60298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60326,
											"end": 60344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60326,
											"end": 60344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60386,
											"end": 60401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60386,
											"end": 60401,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60386,
											"end": 60401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60386,
											"end": 60401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60318,
											"end": 60402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60318,
											"end": 60402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60318,
											"end": 60358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60358,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 60318,
											"end": 60358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 60318,
											"end": 60402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60367,
											"end": 60371,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60367,
											"end": 60371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60374,
											"end": 60384,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60374,
											"end": 60384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 60318,
											"end": 60402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60318,
											"end": 60402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60318,
											"end": 60402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60318,
											"end": 60402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60413,
											"end": 60450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 60430,
											"end": 60440,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60442,
											"end": 60449,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60413,
											"end": 60429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 60413,
											"end": 60450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60413,
											"end": 60450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 60413,
											"end": 60450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60472,
											"end": 60486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60472,
											"end": 60486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60472,
											"end": 60486,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60472,
											"end": 60486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60472,
											"end": 60486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60500,
											"end": 60518,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60500,
											"end": 60518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60520,
											"end": 60535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60520,
											"end": 60535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60520,
											"end": 60535,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60520,
											"end": 60535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60520,
											"end": 60535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60537,
											"end": 60550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60537,
											"end": 60550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60537,
											"end": 60550,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 60537,
											"end": 60550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60537,
											"end": 60550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60468,
											"end": 60551,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60468,
											"end": 60551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14055,
											"end": 14070,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 14055,
											"end": 14070,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14055,
											"end": 14070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14037,
											"end": 14071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14037,
											"end": 14071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 60488,
											"end": 60498,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14080,
											"end": 14123,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14080,
											"end": 14123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14080,
											"end": 14123,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14080,
											"end": 14123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14174,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14174,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14139,
											"end": 14157,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14139,
											"end": 14157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14139,
											"end": 14157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14132,
											"end": 14175,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14132,
											"end": 14175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14132,
											"end": 14175,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14132,
											"end": 14175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14249,
											"end": 14252,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14234,
											"end": 14253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14227,
											"end": 14262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "BAB4AA6B2D5C0935E0E2937D1F73655848F670D43BF6F0C7E9E11E635BB5D86F"
										},
										{
											"begin": 60468,
											"end": 60551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13986,
											"end": 13989,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 13971,
											"end": 13990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60468,
											"end": 60551,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 60569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 60569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 60569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 60569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59387,
											"end": 60569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57025,
											"end": 57043,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57063,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57056,
											"end": 57076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56977,
											"end": 57084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61951,
											"end": 61973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61976,
											"end": 62012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 61992,
											"end": 62002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62004,
											"end": 62011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61976,
											"end": 61991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 61976,
											"end": 62012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61976,
											"end": 62012,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 61976,
											"end": 62012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62032,
											"end": 62048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62032,
											"end": 62048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61951,
											"end": 62012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61951,
											"end": 62012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62032,
											"end": 62062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14475,
											"end": 14477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14494,
											"end": 14512,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14494,
											"end": 14512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14494,
											"end": 14512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14587,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E206E6F7420666F756E646564206174206D61726B6574706C616365"
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14605,
											"end": 14623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 14273,
											"end": 14629,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 62023,
											"end": 62099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62113,
											"end": 62123,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 62113,
											"end": 62134,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62110,
											"end": 62222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 62110,
											"end": 62222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62173,
											"end": 62178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62173,
											"end": 62185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62173,
											"end": 62185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62173,
											"end": 62185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62159,
											"end": 62185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62159,
											"end": 62169,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62159,
											"end": 62185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62159,
											"end": 62185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14836,
											"end": 14838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14818,
											"end": 14839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 14877,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14855,
											"end": 14873,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14855,
											"end": 14873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14855,
											"end": 14873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A1A5CC81A5CC81B9BDD081E5BDD5C88139195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 14972,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14954,
											"end": 14972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 14634,
											"end": 14978,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 62151,
											"end": 62210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62240,
											"end": 62256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62232,
											"end": 62270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62270,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 62279,
											"end": 62283,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 62286,
											"end": 62291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62286,
											"end": 62298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62286,
											"end": 62298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62286,
											"end": 62298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62300,
											"end": 62305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62300,
											"end": 62313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62300,
											"end": 62313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62300,
											"end": 62313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 62232,
											"end": 62314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62232,
											"end": 62314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62325,
											"end": 62373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 62342,
											"end": 62347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62342,
											"end": 62358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62342,
											"end": 62358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62342,
											"end": 62358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62359,
											"end": 62364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62359,
											"end": 62372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62359,
											"end": 62372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62359,
											"end": 62372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62325,
											"end": 62341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 62325,
											"end": 62373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62325,
											"end": 62373,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 62325,
											"end": 62373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62408,
											"end": 62420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62408,
											"end": 62420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62408,
											"end": 62420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62408,
											"end": 62420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62408,
											"end": 62420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62422,
											"end": 62438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62422,
											"end": 62438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62440,
											"end": 62453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62440,
											"end": 62453,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62440,
											"end": 62453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62440,
											"end": 62453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "PUSH",
											"source": 0,
											"value": "CFD975662262E48E8C2B68605E79D409DA1B108BDC941F32D355C4CF11D35925"
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62408,
											"end": 62420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62422,
											"end": 62438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 62391,
											"end": 62454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62391,
											"end": 62454,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 61940,
											"end": 62462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61877,
											"end": 62462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 55042,
											"end": 55168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 55129,
											"end": 55160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55129,
											"end": 55142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55129,
											"end": 55160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55160,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55129,
											"end": 55160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 55129,
											"end": 55160,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 54370,
											"end": 54485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54447,
											"end": 54477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54477,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54370,
											"end": 54485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15224,
											"end": 15226,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 15204,
											"end": 15222,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15204,
											"end": 15222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15204,
											"end": 15222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15297,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15243,
											"end": 15261,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15243,
											"end": 15261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15243,
											"end": 15261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15314,
											"end": 15332,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15314,
											"end": 15332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15314,
											"end": 15332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15307,
											"end": 15343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15379,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15360,
											"end": 15379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 14983,
											"end": 15385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3109,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3090,
											"end": 3118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 55717,
											"end": 55978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55840,
											"end": 55870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55840,
											"end": 55870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55864,
											"end": 55868,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55840,
											"end": 55870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55805,
											"end": 55810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55805,
											"end": 55810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55783,
											"end": 55795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55840,
											"end": 55855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 55840,
											"end": 55855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55840,
											"end": 55870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 55840,
											"end": 55870,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 55840,
											"end": 55870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 55870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 55870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55881,
											"end": 55895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 55896,
											"end": 55903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55896,
											"end": 55903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 55896,
											"end": 55903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10168,
											"end": 10200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10168,
											"end": 10200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10168,
											"end": 10200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10217,
											"end": 10235,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10217,
											"end": 10235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10217,
											"end": 10235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55881,
											"end": 55913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 55881,
											"end": 55913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55881,
											"end": 55913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29"
										},
										{
											"begin": 55943,
											"end": 55953,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55955,
											"end": 55960,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55962,
											"end": 55969,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55929,
											"end": 55970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 55929,
											"end": 55970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15893,
											"end": 15911,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15893,
											"end": 15911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15893,
											"end": 15911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 15916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15952,
											"end": 15986,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15932,
											"end": 15950,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15932,
											"end": 15950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15932,
											"end": 15950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15925,
											"end": 15987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16004,
											"end": 16022,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16004,
											"end": 16022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 15672,
											"end": 16028,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35799,
											"end": 35806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 35830,
											"end": 35831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 35826,
											"end": 35831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35831,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35741,
											"end": 35839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35400,
											"end": 35407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 35431,
											"end": 35432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 35427,
											"end": 35432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35043,
											"end": 35050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 35074,
											"end": 35075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 35070,
											"end": 35075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 6649,
											"end": 6654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6656,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 6629,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52743,
											"end": 53728,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 52743,
											"end": 53728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52858,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52859,
											"end": 52879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52859,
											"end": 52879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52845,
											"end": 52909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52859,
											"end": 52883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 52859,
											"end": 52883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52882,
											"end": 52883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52882,
											"end": 52883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52859,
											"end": 52883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 52859,
											"end": 52883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52859,
											"end": 52883,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 52859,
											"end": 52883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 52845,
											"end": 52884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52845,
											"end": 52895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52845,
											"end": 52909,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52844,
											"end": 53000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52844,
											"end": 53000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52844,
											"end": 53000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 52844,
											"end": 53000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52941,
											"end": 52954,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52955,
											"end": 52975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52955,
											"end": 52975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52992,
											"end": 52999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52992,
											"end": 52999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52955,
											"end": 52979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 52955,
											"end": 52979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52978,
											"end": 52979,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52978,
											"end": 52979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52955,
											"end": 52979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 52955,
											"end": 52979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52955,
											"end": 52979,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 52955,
											"end": 52979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 52941,
											"end": 52980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52941,
											"end": 52988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52941,
											"end": 52999,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52844,
											"end": 53000,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 52844,
											"end": 53000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 53189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 53189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 52826,
											"end": 53189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53057,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53058,
											"end": 53078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53058,
											"end": 53078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53043,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53027,
											"end": 53043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53058,
											"end": 53081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 53058,
											"end": 53081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53080,
											"end": 53081,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53080,
											"end": 53081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53058,
											"end": 53081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 53058,
											"end": 53081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53058,
											"end": 53081,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 53058,
											"end": 53081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 53044,
											"end": 53082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53089,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53044,
											"end": 53089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53044,
											"end": 53089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 53027,
											"end": 53092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53027,
											"end": 53092,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53129,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 53107,
											"end": 53143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53107,
											"end": 53143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53171,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 53158,
											"end": 53177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 53189,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 52826,
											"end": 53189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53203,
											"end": 53212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53222,
											"end": 53235,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53222,
											"end": 53242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53218,
											"end": 53242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53218,
											"end": 53242,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53318,
											"end": 53328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53287,
											"end": 53328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53300,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53301,
											"end": 53302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 53287,
											"end": 53303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53287,
											"end": 53314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53287,
											"end": 53328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53286,
											"end": 53404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53286,
											"end": 53404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53286,
											"end": 53404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 53286,
											"end": 53404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53286,
											"end": 53404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53396,
											"end": 53403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53381,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53382,
											"end": 53383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 53368,
											"end": 53384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53392,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53368,
											"end": 53392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53368,
											"end": 53403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53286,
											"end": 53404,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 53286,
											"end": 53404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53264,
											"end": 53710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53264,
											"end": 53710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 53264,
											"end": 53710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53456,
											"end": 53469,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53470,
											"end": 53471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 53456,
											"end": 53472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53479,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53456,
											"end": 53479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53456,
											"end": 53479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 53439,
											"end": 53482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53482,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53523,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53535,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 53501,
											"end": 53537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53501,
											"end": 53537,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53575,
											"end": 53588,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53589,
											"end": 53609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 53589,
											"end": 53612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53611,
											"end": 53612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53611,
											"end": 53612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 53589,
											"end": 53612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53612,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 53589,
											"end": 53612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 53575,
											"end": 53613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53575,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53569,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53570,
											"end": 53571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 53556,
											"end": 53572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53556,
											"end": 53613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 53632,
											"end": 53651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53632,
											"end": 53651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52743,
											"end": 53728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53264,
											"end": 53710,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 53264,
											"end": 53710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 53244,
											"end": 53247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53244,
											"end": 53247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53199,
											"end": 53721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52743,
											"end": 53728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52743,
											"end": 53728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52743,
											"end": 53728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52530,
											"end": 52737,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 52530,
											"end": 52737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52615,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5"
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52602,
											"end": 52629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52682,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 52640,
											"end": 52684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52640,
											"end": 52684,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52712,
											"end": 52726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52712,
											"end": 52726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52712,
											"end": 52726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52712,
											"end": 52726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52712,
											"end": 52726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52711,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52727,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 52695,
											"end": 52729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52695,
											"end": 52729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52530,
											"end": 52737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52530,
											"end": 52737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 9709,
											"end": 9713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 9851,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17036,
											"end": 17038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17018,
											"end": 17039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17075,
											"end": 17077,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 17055,
											"end": 17073,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17055,
											"end": 17073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17055,
											"end": 17073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17048,
											"end": 17078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17114,
											"end": 17148,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 17094,
											"end": 17112,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17094,
											"end": 17112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17087,
											"end": 17149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17165,
											"end": 17183,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17165,
											"end": 17183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17165,
											"end": 17183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17158,
											"end": 17198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17215,
											"end": 17234,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17215,
											"end": 17234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 16834,
											"end": 17240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42961,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 43003,
											"end": 43009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43011,
											"end": 43015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43020,
											"end": 43032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 42981,
											"end": 43033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42974,
											"end": 43033,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42812,
											"end": 43041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44068,
											"end": 44080,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44126,
											"end": 44131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44122,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17447,
											"end": 17449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17429,
											"end": 17450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17486,
											"end": 17488,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17459,
											"end": 17489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17525,
											"end": 17559,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 17505,
											"end": 17523,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17505,
											"end": 17523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17505,
											"end": 17523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17498,
											"end": 17560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17576,
											"end": 17594,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17576,
											"end": 17594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17569,
											"end": 17605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17641,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17622,
											"end": 17641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 17245,
											"end": 17647,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44186,
											"end": 44198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44200,
											"end": 44223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44233,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44227,
											"end": 44238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44246,
											"end": 44251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44253,
											"end": 44257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 44227,
											"end": 44258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 44303,
											"end": 44309,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44311,
											"end": 44318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44320,
											"end": 44330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44332,
											"end": 44344,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 44276,
											"end": 44345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44269,
											"end": 44345,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43898,
											"end": 44353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46656,
											"end": 46668,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46685,
											"end": 46692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46734,
											"end": 46735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46713,
											"end": 46735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18401,
											"end": 18403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18383,
											"end": 18404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18440,
											"end": 18442,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 18420,
											"end": 18438,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18420,
											"end": 18438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18420,
											"end": 18438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18413,
											"end": 18443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18479,
											"end": 18510,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 18459,
											"end": 18477,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18459,
											"end": 18477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18452,
											"end": 18511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18528,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 18528,
											"end": 18546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 18199,
											"end": 18552,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47020,
											"end": 47030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 47071,
											"end": 47081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47083,
											"end": 47095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48050,
											"end": 48060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48044,
											"end": 48061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48107,
											"end": 48122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48094,
											"end": 48104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48090,
											"end": 48092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48086,
											"end": 48105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48079,
											"end": 48123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48177,
											"end": 48189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 48170,
											"end": 48190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "428"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "559"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "418"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "562"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "561"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "562"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "561"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "562"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "563"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "559"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "563"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "559"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "564"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "563"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "564"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 330,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 199,
											"end": 330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 274,
											"end": 305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 274,
											"end": 305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 264,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 254,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 254,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 335,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 335,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 403,
											"end": 423,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 432,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 432,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 474,
											"end": 721,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 474,
											"end": 721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 533,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 574,
											"end": 583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 565,
											"end": 572,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 557,
											"end": 589,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 554,
											"end": 606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 554,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 554,
											"end": 606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 602,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 554,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 554,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 651,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 685,
											"end": 690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 660,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 660,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 726,
											"end": 1165,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 726,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 839,
											"end": 860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 839,
											"end": 860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 827,
											"end": 861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 827,
											"end": 861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 910,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 899,
											"end": 915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 877,
											"end": 891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 870,
											"end": 917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 970,
											"end": 974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 975,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 959,
											"end": 975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 953,
											"end": 976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 949,
											"end": 981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 933,
											"end": 947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 933,
											"end": 947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1068,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 807,
											"end": 810,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1141,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1158,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 726,
											"end": 1165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1879,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1170,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1682,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 1767,
											"end": 1770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1764,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 1724,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 1724,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1843,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1690,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 1661,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1879,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2011,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1884,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1955,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1940,
											"end": 1943,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1936,
											"end": 1956,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 3137,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2016,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2160,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2177,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2240,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2303,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2406,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2396,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2388,
											"end": 2390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2407,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 2370,
											"end": 2425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 2370,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2482,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 2469,
											"end": 2505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2485,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2529,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2524,
											"end": 2534,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2622,
											"end": 2629,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2619,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2688,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2689,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 2640,
											"end": 2712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2692,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2730,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2827,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2901,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2901,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 2879,
											"end": 2918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2916,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2918,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 2879,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2981,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 3059,
											"end": 3062,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 3040,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 2958,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3131,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 3137,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2016,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3142,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3273,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3257,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3269,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3274,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3336,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 3345,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3400,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3451,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3451,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 4135,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3462,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3886,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 4109,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 3914,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 4109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 3914,
											"end": 4109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3943,
											"end": 3952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 3914,
											"end": 4109,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4767,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4514,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4705,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4687,
											"end": 4706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4691,
											"end": 4700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 4715,
											"end": 4761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5753,
											"end": 5759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5794,
											"end": 5803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5792,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5810,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5825,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5872,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 5906,
											"end": 5911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5881,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5912,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 5881,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5936,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 5985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5987,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5987,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6038,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6090,
											"end": 6092,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6062,
											"end": 6094,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 6062,
											"end": 6094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 6103,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 6103,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 6168,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 6168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 6173,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6244,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6229,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6225,
											"end": 6245,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6262,
											"end": 6263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6255,
											"end": 6270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6286,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6294,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 6305,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6376,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6361,
											"end": 6364,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6357,
											"end": 6377,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6387,
											"end": 6402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6426,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6572,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6437,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6497,
											"end": 6514,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6497,
											"end": 6514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6494,
											"end": 6537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 6517,
											"end": 6535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6917,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6577,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6852,
											"end": 6854,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6910,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7820,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7636,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7745,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7734,
											"end": 7757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7762,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 7727,
											"end": 7779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 7727,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9357,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 8982,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9240,
											"end": 9255,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9255,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9287,
											"end": 9289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9174,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10861,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 10610,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10733,
											"end": 10735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10721,
											"end": 10730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10712,
											"end": 10719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10708,
											"end": 10731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 10701,
											"end": 10753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10753,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 10701,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10781,
											"end": 10790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10825,
											"end": 10830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 10800,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15390,
											"end": 15667,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 15390,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15457,
											"end": 15463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15510,
											"end": 15512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15498,
											"end": 15507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15496,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15485,
											"end": 15508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15481,
											"end": 15513,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 15478,
											"end": 15530,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15478,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 15478,
											"end": 15530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15526,
											"end": 15527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15523,
											"end": 15524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15516,
											"end": 15528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15478,
											"end": 15530,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 15478,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15552,
											"end": 15568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15604,
											"end": 15617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15597,
											"end": 15618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15590,
											"end": 15595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15619,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15577,
											"end": 15637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 15577,
											"end": 15637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15633,
											"end": 15634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15630,
											"end": 15631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15623,
											"end": 15635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16250,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 16033,
											"end": 16250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16073,
											"end": 16074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16089,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 16089,
											"end": 16221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16143,
											"end": 16153,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 16138,
											"end": 16141,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16134,
											"end": 16154,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16131,
											"end": 16132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16124,
											"end": 16155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16178,
											"end": 16182,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 16175,
											"end": 16176,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16168,
											"end": 16183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16206,
											"end": 16210,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16203,
											"end": 16204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16196,
											"end": 16211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16089,
											"end": 16221,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 16089,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16235,
											"end": 16244,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16235,
											"end": 16244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16255,
											"end": 16423,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 16255,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16328,
											"end": 16337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16328,
											"end": 16337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16328,
											"end": 16337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16368,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16376,
											"end": 16391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16376,
											"end": 16391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16376,
											"end": 16391,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16370,
											"end": 16392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16370,
											"end": 16392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16356,
											"end": 16393,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 16346,
											"end": 16417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 16397,
											"end": 16415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 16397,
											"end": 16415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 16428,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16495,
											"end": 16504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16495,
											"end": 16504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16495,
											"end": 16504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16516,
											"end": 16527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16516,
											"end": 16527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16516,
											"end": 16527,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16513,
											"end": 16550,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16513,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 16513,
											"end": 16550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 16530,
											"end": 16548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16697,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 16561,
											"end": 16697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16600,
											"end": 16603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16628,
											"end": 16633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16618,
											"end": 16657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 16618,
											"end": 16657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16637,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 16637,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 16637,
											"end": 16655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16637,
											"end": 16655,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 16637,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16673,
											"end": 16691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16829,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 16702,
											"end": 16829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16763,
											"end": 16773,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 16758,
											"end": 16761,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16754,
											"end": 16774,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16751,
											"end": 16752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16744,
											"end": 16775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16794,
											"end": 16798,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16791,
											"end": 16792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16784,
											"end": 16799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16818,
											"end": 16822,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16815,
											"end": 16816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16808,
											"end": 16823,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17652,
											"end": 17902,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 17652,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17737,
											"end": 17738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17761,
											"end": 17767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17758,
											"end": 17759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17755,
											"end": 17768,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 17849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17811,
											"end": 17850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17783,
											"end": 17785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17776,
											"end": 17786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 17747,
											"end": 17860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17894,
											"end": 17895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17876,
											"end": 17892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17876,
											"end": 17892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17869,
											"end": 17896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17652,
											"end": 17902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17907,
											"end": 18194,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 17907,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18036,
											"end": 18039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18074,
											"end": 18080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18068,
											"end": 18081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18090,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 18149,
											"end": 18155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18144,
											"end": 18147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18137,
											"end": 18141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18129,
											"end": 18135,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18125,
											"end": 18142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18090,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 18090,
											"end": 18156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18090,
											"end": 18156,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 18090,
											"end": 18156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17907,
											"end": 18194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17907,
											"end": 18194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18557,
											"end": 18953,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 18557,
											"end": 18953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18695,
											"end": 18704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18688,
											"end": 18709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18669,
											"end": 18673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18738,
											"end": 18744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18732,
											"end": 18745,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18781,
											"end": 18787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18776,
											"end": 18778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18774,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18761,
											"end": 18779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18754,
											"end": 18788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18797,
											"end": 18876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 18869,
											"end": 18875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18864,
											"end": 18866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18853,
											"end": 18862,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18844,
											"end": 18846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18836,
											"end": 18842,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 18847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18797,
											"end": 18876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 18797,
											"end": 18876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18797,
											"end": 18876,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 18797,
											"end": 18876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18937,
											"end": 18939,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18916,
											"end": 18931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18912,
											"end": 18941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18897,
											"end": 18942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18897,
											"end": 18942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18897,
											"end": 18942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18897,
											"end": 18942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18944,
											"end": 18946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18893,
											"end": 18947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18893,
											"end": 18947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18557,
											"end": 18953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18557,
											"end": 18953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyNFT(address,uint256)": "a82ba76f",
							"buyNFTbyERC20(address,uint256)": "2b205d14",
							"deSellNFT(address,uint256)": "da24548a",
							"getAllowedCollections()": "3a51f383",
							"getAllowedERC20()": "69c57352",
							"getCollectionTokensAtSale(address)": "1ed56d44",
							"getFeeReceiver()": "e8a35392",
							"getMyTokensAtSale()": "a096c5a2",
							"getTokensAtSale()": "d55a34e4",
							"getTokensAtSaleCount()": "c8f77899",
							"getTradeFee()": "952977f5",
							"getUserTokensAtSale(address)": "19c8c1c5",
							"isAllowedERC20(address)": "785fa7ce",
							"isMarketPlaceContract()": "527f2902",
							"marketTokensGet(address,uint256)": "6629e913",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"sellNFT(address,uint256,uint256,address)": "98f748bd",
							"setAllowedCollections(address[])": "27713536",
							"setAllowedERC20(address[])": "e9e4e160",
							"setFeeReceiver(address)": "efdcd974",
							"setTradeFee(uint256)": "10603023",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50",
							"withdrawERC20(address)": "f4f3b200",
							"withdrawWei()": "5211ac2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"__collections\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"__feeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__tradeFee\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"__allowedERC20\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BuyWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSaleWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawWei\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFTbyERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deSellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedCollections\",\"outputs\":[{\"internalType\":\"contract IERC721[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedERC20\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"getCollectionTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensAtSaleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getUserTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"isAllowedERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMarketPlaceContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"marketTokensGet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT\",\"name\":\"ret\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"sellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_newCollections\",\"type\":\"address[]\"}],\"name\":\"setAllowedCollections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newAllowedERC20\",\"type\":\"address[]\"}],\"name\":\"setAllowedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTradeFee\",\"type\":\"uint256\"}],\"name\":\"setTradeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2258,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2432,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tradeFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 2444,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_marketCollections",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_contract(IERC721)638)dyn_storage"
							},
							{
								"astId": 2448,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_allowedCollections",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2451,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_allowedERC20",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 2455,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_marketTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(SelledNFT)2426_storage)dyn_storage"
							},
							{
								"astId": 2459,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_collectionTokensCount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2463,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_userTokensCount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2465,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_feeReceiver",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_contract(IERC721)638)dyn_storage": {
								"base": "t_contract(IERC721)638",
								"encoding": "dynamic_array",
								"label": "contract IERC721[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(SelledNFT)2426_storage)dyn_storage": {
								"base": "t_struct(SelledNFT)2426_storage",
								"encoding": "dynamic_array",
								"label": "struct Marketplace.SelledNFT[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC721)638": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(SelledNFT)2426_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.SelledNFT",
								"members": [
									{
										"astId": 2415,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "collection",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2417,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2419,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 2421,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2423,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "erc20",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 2425,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "utx",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a2e7fc6b788e3c95de6511824532eaa0c56ae4ad8f4b968f2c7afbff8fa68e2264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2e7fc6b788e3c95de6511824532eaa0c56ae4ad8f4b968f2c7afbff8fa68e2264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xE7 0xFC PUSH12 0x788E3C95DE6511824532EAA0 0xC5 PUSH11 0xE4AD8F4B968F2C7AFBFF8F 0xA6 DUP15 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;17953:12616:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2e7fc6b788e3c95de6511824532eaa0c56ae4ad8f4b968f2c7afbff8fa68e2264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xE7 0xFC PUSH12 0x788E3C95DE6511824532EAA0 0xC5 PUSH11 0xE4AD8F4B968F2C7AFBFF8F 0xA6 DUP15 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2e7fc6b788e3c95de6511824532eaa0c56ae4ad8f4b968f2c7afbff8fa68e2264736f6c63430008120033",
									".code": [
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2258,
								"contract": "source/Marketplace.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220256bf298d30253ffe3cca21bd17e9179e564987c6d1f5f5d3d977886539fe4e764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256bf298d30253ffe3cca21bd17e9179e564987c6d1f5f5d3d977886539fe4e764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH12 0xF298D30253FFE3CCA21BD17E SWAP2 PUSH26 0xE564987C6D1F5F5D3D977886539FE4E764736F6C634300081200 CALLER ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;6284:3666:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256bf298d30253ffe3cca21bd17e9179e564987c6d1f5f5d3d977886539fe4e764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH12 0xF298D30253FFE3CCA21BD17E SWAP2 PUSH26 0xE564987C6D1F5F5D3D977886539FE4E764736F6C634300081200 CALLER ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220256bf298d30253ffe3cca21bd17e9179e564987c6d1f5f5d3d977886539fe4e764736f6c63430008120033",
									".code": [
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0b71b2d2db753d33fecdd612b153527e96b27d495dd3202ca546fa1fc694f2b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0b71b2d2db753d33fecdd612b153527e96b27d495dd3202ca546fa1fc694f2b64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xB7 SHL 0x2D 0x2D 0xB7 MSTORE8 0xD3 EXTCODEHASH 0xEC 0xDD PUSH2 0x2B15 CALLDATALOAD 0x27 0xE9 PUSH12 0x27D495DD3202CA546FA1FC69 0x4F 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;32254:6409:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0b71b2d2db753d33fecdd612b153527e96b27d495dd3202ca546fa1fc694f2b64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xB7 SHL 0x2D 0x2D 0xB7 MSTORE8 0xD3 EXTCODEHASH 0xEC 0xDD PUSH2 0x2B15 CALLDATALOAD 0x27 0xE9 PUSH12 0x27D495DD3202CA546FA1FC69 0x4F 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0b71b2d2db753d33fecdd612b153527e96b27d495dd3202ca546fa1fc694f2b64736f6c63430008120033",
									".code": [
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c75ad9d34b78e7423fdf5f2222a8346669323404296aa744936972837de75e6464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c75ad9d34b78e7423fdf5f2222a8346669323404296aa744936972837de75e6464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 GAS 0xD9 0xD3 0x4B PUSH25 0xE7423FDF5F2222A8346669323404296AA744936972837DE75E PUSH5 0x64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;30734:1081:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c75ad9d34b78e7423fdf5f2222a8346669323404296aa744936972837de75e6464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 GAS 0xD9 0xD3 0x4B PUSH25 0xE7423FDF5F2222A8346669323404296AA744936972837DE75E PUSH5 0x64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c75ad9d34b78e7423fdf5f2222a8346669323404296aa744936972837de75e6464736f6c63430008120033",
									".code": [
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x0c0fb765e8629436cb1e3bb5a93dda0bd60bc7c0a332a584344bc552fe9b62fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e7b24645f6c0494bba8a1bdd91601d65f5b0fde925ae82665bb82e731efdaa\",\"dweb:/ipfs/QmUhQbvnNa6Xcrr6Fd3d1NWMFtaTY62rRBRctMyr5W58qD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"source/Marketplace.sol": {
				"ast": {
					"absolutePath": "source/Marketplace.sol",
					"exportedSymbols": {
						"Address": [
							2243
						],
						"Context": [
							21
						],
						"IERC165": [
							526
						],
						"IERC20": [
							517
						],
						"IERC20Permit": [
							165
						],
						"IERC721": [
							638
						],
						"Marketplace": [
							3630
						],
						"Math": [
							1502
						],
						"Ownable": [
							131
						],
						"Pausable": [
							2332
						],
						"SafeERC20": [
							441
						],
						"SafeMath": [
							1915
						],
						"SignedMath": [
							1605
						]
					},
					"id": 3631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "641:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "729:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 21,
									"src": "656:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "829:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "840:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "813:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:0"
									},
									"scope": 21,
									"src": "762:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3631,
							"src": "623:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "Context",
										"nameLocations": [
											"1478:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1478:7:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 22,
								"nodeType": "StructuredDocumentation",
								"src": "942:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								21
							],
							"name": "Ownable",
							"nameLocation": "1467:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1509:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "1493:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 32,
									"name": "OwnershipTransferred",
									"nameLocation": "1530:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1567:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1551:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1598:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1582:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:57:0"
									},
									"src": "1524:84:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1729:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 37,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1759:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1759:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1740:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1740:32:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1616:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:0"
									},
									"scope": 131,
									"src": "1715:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1894:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 45,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1905:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1905:13:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "1929:1:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1788:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 50,
									"name": "onlyOwner",
									"nameLocation": "1882:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:2:0"
									},
									"src": "1873:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "2074:32:0",
										"statements": [
											{
												"expression": {
													"id": 56,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "2092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "2085:13:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1946:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2028:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:9:0"
									},
									"scope": 131,
									"src": "2019:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2229:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 64,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "2248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 66,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 63,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "2240:68:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2114:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2193:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:0:0"
									},
									"scope": 131,
									"src": "2184:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2721:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2732:30:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2324:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 76,
												"name": "onlyOwner",
												"nameLocations": [
													"2711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2711:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2676:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2721:0:0"
									},
									"scope": 131,
									"src": "2667:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2995:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "3014:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3026:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 97,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3026:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3026:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3014:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3038:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3006:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "3006:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "3109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3090:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "3090:28:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2778:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"2985:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2985:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2985:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2995:0:0"
									},
									"scope": 131,
									"src": "2925:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3349:128:0",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3368:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "3360:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3360:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"id": 118,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3360:25:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "3396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3405:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3396:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3396:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 125,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3460:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3429:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "3424:45:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3134:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3295:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3322:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3314:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:0"
									},
									"scope": 131,
									"src": "3286:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3631,
							"src": "1449:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "3562:487:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "IERC20Permit",
							"nameLocation": "4061:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4081:812:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "4908:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4983:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4975:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5007:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4999:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5026:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 142,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5026:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5072:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5064:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4914:166:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5089:0:0"
									},
									"scope": 165,
									"src": "4899:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5098:300:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "5413:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:15:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5457:9:0"
									},
									"scope": 165,
									"src": "5404:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5475:130:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5674:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5690:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5716:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5715:9:0"
									},
									"scope": 165,
									"src": "5665:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3631,
							"src": "4051:1677:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "5817:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 441,
							"linearizedBaseContracts": [
								441
							],
							"name": "SafeERC20",
							"nameLocation": "6292:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 169,
									"libraryName": {
										"id": 167,
										"name": "Address",
										"nameLocations": [
											"6315:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2243,
										"src": "6315:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6309:26:0",
									"typeName": {
										"id": 168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6327:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "6415:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "6446:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 183,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "6476:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6482:8:0",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 484,
																		"src": "6476:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6491:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6476:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 186,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "6501:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "6505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 181,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6453:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6457:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6453:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6453:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 179,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6426:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6426:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "6426:86:0"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "6352:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6372:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "IERC20",
														"nameLocations": [
															"6365:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6365:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6387:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6379:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:41:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6415:0:0"
									},
									"scope": 441,
									"src": "6343:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "6618:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 208,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "6679:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6685:12:0",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 516,
																		"src": "6679:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6698:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6679:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 211,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "6708:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 212,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "6714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6718:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6656:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6660:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6656:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6656:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 204,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6629:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6629:96:0"
											}
										]
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6537:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6561:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 193,
														"name": "IERC20",
														"nameLocations": [
															"6554:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6554:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6568:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6590:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6582:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:55:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6618:0:0"
									},
									"scope": 441,
									"src": "6528:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7078:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "7332:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7341:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7331:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 238,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "7372:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7364:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 236,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7364:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7364:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 240,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "7379:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 234,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "7348:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7354:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 494,
																				"src": "7348:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7348:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7391:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7348:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 244,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7347:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7331:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7408:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7309:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7309:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "7506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 253,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "7536:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7542:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7536:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7550:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7536:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "7560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "7569:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 251,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7513:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7517:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7513:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7513:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 249,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7486:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7486:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "7486:90:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6741:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "7011:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7030:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7023:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "IERC20",
														"nameLocations": [
															"7023:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7023:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7023:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7022:46:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7078:0:0"
									},
									"scope": 441,
									"src": "7002:582:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7678:197:0",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "7697:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "7689:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 278,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7736:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7728:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7728:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 280,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 274,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "7712:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7718:9:0",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "7712:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7712:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 282,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "7754:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7712:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7689:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "7790:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 265,
																			"src": "7820:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7826:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7820:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7834:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7820:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 292,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "7844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 293,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "7853:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 287,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7797:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7801:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7797:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7797:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 285,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7770:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7770:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "7770:97:0"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "7601:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 263,
														"name": "IERC20",
														"nameLocations": [
															"7623:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7623:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7623:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7662:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7654:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:46:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7678:0:0"
									},
									"scope": 441,
									"src": "7592:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7969:377:0",
										"statements": [
											{
												"id": 344,
												"nodeType": "UncheckedBlock",
												"src": "7980:359:0",
												"statements": [
													{
														"assignments": [
															309
														],
														"declarations": [
															{
																"constant": false,
																"id": 309,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "8013:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8005:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 308,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 318,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8044:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8044:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8044:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "8059:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 310,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8034:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "8028:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8028:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8005:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "8090:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 321,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "8106:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8090:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8113:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 319,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "8082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8082:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8082:75:0"
													},
													{
														"assignments": [
															327
														],
														"declarations": [
															{
																"constant": false,
																"id": 327,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "8180:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8172:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 331,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 328,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "8195:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "8210:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8172:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 333,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8250:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 336,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 301,
																					"src": "8280:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8286:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 504,
																				"src": "8280:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8294:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "8280:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 339,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 303,
																			"src": "8304:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 340,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "8313:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 334,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "8257:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8261:18:0",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "8257:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8257:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 332,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "8230:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8230:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "8230:97:0"
													}
												]
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "7892:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7921:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "IERC20",
														"nameLocations": [
															"7914:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7914:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7945:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7913:46:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7969:0:0"
									},
									"scope": 441,
									"src": "7883:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8578:262:0",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "8597:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8589:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"arguments": [
														{
															"id": 370,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8624:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8617:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8611:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8611:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8589:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8670:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 379,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8677:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 380,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8687:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 381,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8690:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 382,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8693:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8641:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8647:6:0",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "8641:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8641:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8641:54:0"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "8714:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8706:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"id": 389,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 387,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8727:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8733:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8727:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8727:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8706:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "8765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 394,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "8779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8779:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8765:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8796:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8757:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8757:75:0"
											}
										]
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "8363:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8397:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8384:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$165",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 347,
														"name": "IERC20Permit",
														"nameLocations": [
															"8384:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 165,
														"src": "8384:12:0"
													},
													"referencedDeclaration": 165,
													"src": "8384:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$165",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "8495:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8487:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "8520:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "8540:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8532:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "8560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8373:195:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8578:0:0"
									},
									"scope": 441,
									"src": "8354:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "9301:646:0",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9668:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "9655:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 411,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9655:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [
														{
															"id": 418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9709:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9715:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 415,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9689:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9681:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9681:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9696:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2003,
														"src": "9681:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9655:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 422,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9776:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9765:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9765:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "9761:179:0",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "9788:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 429,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "9862:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "9875:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 430,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "9875:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 432,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9874:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 427,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "9851:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "9855:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "9851:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9851:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9883:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 426,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9843:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9843:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "9843:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8848:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "9240:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9260:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 404,
														"name": "IERC20",
														"nameLocations": [
															"9260:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "9260:6:0"
													},
													"referencedDeclaration": 517,
													"src": "9260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9287:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9274:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9301:0:0"
									},
									"scope": 441,
									"src": "9231:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3631,
							"src": "6284:3666:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "10030:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 517,
							"linearizedBaseContracts": [
								517
							],
							"name": "IERC20",
							"nameLocation": "10114:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "10128:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 451,
									"name": "Transfer",
									"nameLocation": "10303:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10328:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10312:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10350:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10334:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10362:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10311:57:0"
									},
									"src": "10297:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "10377:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 460,
									"name": "Approval",
									"nameLocation": "10540:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10549:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10588:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10572:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10605:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10597:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10548:63:0"
									},
									"src": "10534:78:0"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "10620:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "10703:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10714:2:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "10740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10739:9:0"
									},
									"scope": 517,
									"src": "10694:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "10757:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10846:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10855:17:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10896:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10895:9:0"
									},
									"scope": 517,
									"src": "10837:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "10913:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "11136:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11153:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11145:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11144:28:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11191:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11190:6:0"
									},
									"scope": 517,
									"src": "11127:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "11205:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "11490:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11508:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11500:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11523:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11515:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11499:32:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11555:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11554:9:0"
									},
									"scope": 517,
									"src": "11481:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "11572:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12242:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12249:33:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12301:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:6:0"
									},
									"scope": 517,
									"src": "12233:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "12315:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "12625:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12660:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12652:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12672:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12664:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12637:42:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12697:6:0"
									},
									"scope": 517,
									"src": "12616:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3631,
							"src": "10104:2603:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 526,
							"linearizedBaseContracts": [
								526
							],
							"name": "IERC165",
							"nameLocation": "12723:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "12738:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "13100:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "13125:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13117:20:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13160:6:0"
									},
									"scope": 526,
									"src": "13091:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3631,
							"src": "12713:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "IERC165",
										"nameLocations": [
											"13195:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "13195:7:0"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "13195:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 638,
							"linearizedBaseContracts": [
								638,
								526
							],
							"name": "IERC721",
							"nameLocation": "13184:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "13210:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 537,
									"name": "Transfer",
									"nameLocation": "13312:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13321:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13359:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13343:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13379:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13363:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13320:67:0"
									},
									"src": "13306:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "13396:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 546,
									"name": "Approval",
									"nameLocation": "13504:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13513:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13552:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13536:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13578:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13562:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13512:74:0"
									},
									"src": "13498:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "13595:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 555,
									"name": "ApprovalForAll",
									"nameLocation": "13726:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13741:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13780:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13764:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13795:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13740:64:0"
									},
									"src": "13720:85:0"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "13813:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13906:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13916:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13915:15:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "13962:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13953:17:0"
									},
									"scope": 638,
									"src": "13897:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "13979:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "14131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14138:17:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:0"
									},
									"scope": 638,
									"src": "14122:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "14202:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14785:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14820:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14812:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14897:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14882:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14801:107:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14917:0:0"
									},
									"scope": 638,
									"src": "14776:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "14926:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15641:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15699:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15657:77:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15743:0:0"
									},
									"scope": 638,
									"src": "15632:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "15752:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16284:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16338:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16330:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16296:77:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16382:0:0"
									},
									"scope": 638,
									"src": "16275:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "16391:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16870:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16886:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16878:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16877:29:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16915:0:0"
									},
									"scope": 638,
									"src": "16861:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "16924:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17257:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17283:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17275:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "17298:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17293:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17274:34:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17317:0:0"
									},
									"scope": 638,
									"src": "17248:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "17326:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "17486:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17497:17:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17546:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17538:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17537:18:0"
									},
									"scope": 638,
									"src": "17477:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "17564:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17721:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17761:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17753:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17737:33:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17794:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17794:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17793:6:0"
									},
									"scope": 638,
									"src": "17712:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3631,
							"src": "13174:4629:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "17876:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1502,
							"linearizedBaseContracts": [
								1502
							],
							"name": "Math",
							"nameLocation": "17961:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 643,
									"members": [
										{
											"id": 640,
											"name": "Down",
											"nameLocation": "17998:4:0",
											"nodeType": "EnumValue",
											"src": "17998:4:0"
										},
										{
											"id": 641,
											"name": "Up",
											"nameLocation": "18041:2:0",
											"nodeType": "EnumValue",
											"src": "18041:2:0"
										},
										{
											"id": 642,
											"name": "Zero",
											"nameLocation": "18073:4:0",
											"nodeType": "EnumValue",
											"src": "18073:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "17978:8:0",
									"nodeType": "EnumDefinition",
									"src": "17973:126:0"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "18241:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 653,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "18259:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 654,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "18263:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18259:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 657,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "18271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18259:13:0",
													"trueExpression": {
														"id": 656,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "18267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 659,
												"nodeType": "Return",
												"src": "18252:20:0"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "18107:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "18183:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18195:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18187:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18206:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18198:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18186:22:0"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18231:9:0"
									},
									"scope": 1502,
									"src": "18174:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "18423:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 671,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "18441:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 672,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "18445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18441:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 675,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "18453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18441:13:0",
													"trueExpression": {
														"id": 674,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "18449:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 670,
												"id": 677,
												"nodeType": "Return",
												"src": "18434:20:0"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "18288:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "18365:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18368:22:0"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18413:9:0"
									},
									"scope": 1502,
									"src": "18356:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "18652:85:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 689,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "18709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 690,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "18713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18709:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "18719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "18723:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "18718:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18708:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 700,
												"nodeType": "Return",
												"src": "18701:28:0"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "18470:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "18590:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18606:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18598:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18617:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18609:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18597:22:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18642:9:0"
									},
									"scope": 1502,
									"src": "18581:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "19015:126:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "19105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19110:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19105:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 716,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "19119:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "19128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19118:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "19118:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19105:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 725,
												"nodeType": "Return",
												"src": "19098:35:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "18745:193:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "18953:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18969:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18961:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18960:22:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "19006:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19005:9:0"
									},
									"scope": 1502,
									"src": "18944:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "19562:3898:0",
										"statements": [
											{
												"id": 848,
												"nodeType": "UncheckedBlock",
												"src": "19573:3880:0",
												"statements": [
													{
														"assignments": [
															740
														],
														"declarations": [
															{
																"constant": false,
																"id": 740,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "19906:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19898:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19898:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 741,
														"nodeType": "VariableDeclarationStatement",
														"src": "19898:13:0"
													},
													{
														"assignments": [
															743
														],
														"declarations": [
															{
																"constant": false,
																"id": 743,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "19979:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19971:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 742,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19971:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 744,
														"nodeType": "VariableDeclarationStatement",
														"src": "19971:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20052:161:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20071:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20088:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20091:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20098:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "20094:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20094:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20081:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20081:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "20075:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20119:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20132:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20135:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "20128:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20128:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "20119:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20155:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20172:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20176:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "20168:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20168:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20187:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20191:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20184:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20184:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20164:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20164:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "20155:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20119:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20176:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20191:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "20155:5:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20088:1:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20132:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20091:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20135:1:0",
																"valueSize": 1
															}
														],
														"id": 745,
														"nodeType": "InlineAssembly",
														"src": "20043:170:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 746,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "20297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20306:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 754,
														"nodeType": "IfStatement",
														"src": "20293:77:0",
														"trueBody": {
															"id": 753,
															"nodeType": "Block",
															"src": "20309:61:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 749,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "20335:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 750,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "20343:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20335:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 738,
																	"id": 752,
																	"nodeType": "Return",
																	"src": "20328:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "20483:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 757,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "20497:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20483:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20504:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 755,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "20475:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20475:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "20475:53:0"
													},
													{
														"assignments": [
															763
														],
														"declarations": [
															{
																"constant": false,
																"id": 763,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "20799:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "20791:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 764,
														"nodeType": "VariableDeclarationStatement",
														"src": "20791:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20832:298:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "20903:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20923:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20926:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "20929:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20916:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20916:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "20903:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21026:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "21039:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "21049:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "21060:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "21046:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21046:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21035:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21035:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "21026:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21085:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21098:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "21105:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21094:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21094:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21085:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "20929:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21060:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21085:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21098:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21026:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21039:5:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "20903:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21049:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21105:9:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20923:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20926:1:0",
																"valueSize": 1
															}
														],
														"id": 765,
														"nodeType": "InlineAssembly",
														"src": "20823:307:0"
													},
													{
														"assignments": [
															767
														],
														"declarations": [
															{
																"constant": false,
																"id": 767,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "21451:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "21443:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21443:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 775,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 768,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "21458:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "21473:12:0",
																			"subExpression": {
																				"id": 769,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "21474:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21488:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "21473:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21472:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21458:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21443:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "21514:371:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "21581:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "21600:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21613:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21596:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21596:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "21581:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21688:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21701:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21708:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21697:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21697:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21688:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21831:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21851:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "21854:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21847:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21847:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "21861:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "21843:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21843:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21868:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21839:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21839:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "21831:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21581:11:0",
																"valueSize": 1
															},
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21600:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21688:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21701:5:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21613:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21708:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21831:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21854:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21861:4:0",
																"valueSize": 1
															}
														],
														"id": 776,
														"nodeType": "InlineAssembly",
														"src": "21505:380:0"
													},
													{
														"expression": {
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "21954:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 778,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "21963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 779,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "21971:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21963:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21954:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 782,
														"nodeType": "ExpressionStatement",
														"src": "21954:21:0"
													},
													{
														"assignments": [
															784
														],
														"declarations": [
															{
																"constant": false,
																"id": 784,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "22306:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "22298:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 783,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 791,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22317:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 786,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "22321:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22317:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 788,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22316:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "22316:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22298:39:0"
													},
													{
														"expression": {
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22573:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 795,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22573:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22569:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22558:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 799,
														"nodeType": "ExpressionStatement",
														"src": "22558:36:0"
													},
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 800,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 802,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22643:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 803,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22657:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22643:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22639:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22628:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "22628:36:0"
													},
													{
														"expression": {
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 808,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22714:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 811,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22728:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22714:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22710:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22699:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 815,
														"nodeType": "ExpressionStatement",
														"src": "22699:36:0"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 816,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 818,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22785:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 819,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22785:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22781:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22770:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "22770:36:0"
													},
													{
														"expression": {
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 826,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22856:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 827,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22870:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22856:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22852:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22841:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 831,
														"nodeType": "ExpressionStatement",
														"src": "22841:36:0"
													},
													{
														"expression": {
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22913:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22924:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 834,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 835,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22928:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22924:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22913:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 839,
														"nodeType": "ExpressionStatement",
														"src": "22913:36:0"
													},
													{
														"expression": {
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 840,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "23389:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 841,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "23398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 842,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "23406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23398:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23389:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 845,
														"nodeType": "ExpressionStatement",
														"src": "23389:24:0"
													},
													{
														"expression": {
															"id": 846,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "23435:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 738,
														"id": 847,
														"nodeType": "Return",
														"src": "23428:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "19149:309:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "19473:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "19488:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19480:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "19499:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "19510:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19502:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19479:43:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19545:16:0"
									},
									"scope": 1502,
									"src": "19464:3996:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "23707:195:0",
										"statements": [
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23726:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "23718:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "23742:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 869,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "23745:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 870,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "23748:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															850,
															894
														],
														"referencedDeclaration": 850,
														"src": "23735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23735:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23718:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$643",
															"typeString": "enum Math.Rounding"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "23775:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 874,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "23787:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "23796:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 641,
															"src": "23787:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "23775:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "23809:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 879,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "23812:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 880,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "23815:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 877,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "23802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23802:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23830:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23802:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23775:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "23771:100:0",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "23833:38:0",
													"statements": [
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 885,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "23848:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "23848:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 891,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 866,
													"src": "23888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 864,
												"id": 892,
												"nodeType": "Return",
												"src": "23881:13:0"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "23468:123:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "23606:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "23621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "23632:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23624:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "23643:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23635:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23656:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "Rounding",
														"nameLocations": [
															"23656:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "23656:8:0"
													},
													"referencedDeclaration": 643,
													"src": "23656:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23612:62:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23698:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23697:9:0"
									},
									"scope": 1502,
									"src": "23597:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "24185:1616:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "24200:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24205:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24200:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "24196:47:0",
												"trueBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "24208:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 901,
															"id": 906,
															"nodeType": "Return",
															"src": "24223:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24942:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "24934:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24951:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 913,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "24962:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 912,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1174,
																			1210
																		],
																		"referencedDeclaration": 1174,
																		"src": "24957:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24957:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24968:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24957:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 917,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24956:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24951:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24934:36:0"
											},
											{
												"id": 1004,
												"nodeType": "UncheckedBlock",
												"src": "25377:417:0",
												"statements": [
													{
														"expression": {
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 920,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25402:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 921,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25412:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 922,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25421:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 923,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25425:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25421:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25412:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 926,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25411:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25411:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25402:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 930,
														"nodeType": "ExpressionStatement",
														"src": "25402:35:0"
													},
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 931,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 932,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25462:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 933,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25471:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 934,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25475:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25471:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25462:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 937,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25461:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25461:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25452:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "25452:35:0"
													},
													{
														"expression": {
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 942,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25502:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 943,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25512:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 944,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25521:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 945,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25525:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25521:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25512:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25511:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25511:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25502:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 952,
														"nodeType": "ExpressionStatement",
														"src": "25502:35:0"
													},
													{
														"expression": {
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 953,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 954,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25562:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 955,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25571:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 956,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25575:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25571:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25562:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 959,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25561:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25561:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25552:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 963,
														"nodeType": "ExpressionStatement",
														"src": "25552:35:0"
													},
													{
														"expression": {
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 964,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25602:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 965,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25612:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 966,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25621:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 967,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25625:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25621:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25612:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 970,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25611:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25636:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25611:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25602:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "25602:35:0"
													},
													{
														"expression": {
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25652:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 976,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25662:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 977,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25671:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 978,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25675:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25671:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25662:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25661:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25686:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25661:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25652:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 985,
														"nodeType": "ExpressionStatement",
														"src": "25652:35:0"
													},
													{
														"expression": {
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 986,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25702:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 987,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25712:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 988,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 989,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25725:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25721:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25712:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25711:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25736:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25711:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25702:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 996,
														"nodeType": "ExpressionStatement",
														"src": "25702:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 998,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "25763:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 999,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "25771:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1000,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "25775:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25771:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 997,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "25759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25759:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 901,
														"id": 1003,
														"nodeType": "Return",
														"src": "25752:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "23910:212:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "24137:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24150:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24142:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24141:11:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24175:9:0"
									},
									"scope": 1502,
									"src": "24128:1673:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25982:166:0",
										"statements": [
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "25993:148:0",
												"statements": [
													{
														"assignments": [
															1018
														],
														"declarations": [
															{
																"constant": false,
																"id": 1018,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26026:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1040,
																"src": "26018:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1017,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1022,
														"initialValue": {
															"arguments": [
																{
																	"id": 1020,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "26040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1019,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1006,
																	1042
																],
																"referencedDeclaration": 1006,
																"src": "26035:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26035:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26018:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "26064:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1024,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "26074:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1025,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "26086:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "26095:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "26086:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "26074:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1028,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26101:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1029,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26110:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26101:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1009,
																					"src": "26119:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26101:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26074:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26127:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26074:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26073:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26064:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1016,
														"id": 1039,
														"nodeType": "Return",
														"src": "26057:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "25809:91:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25915:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25928:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25920:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25931:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "Rounding",
														"nameLocations": [
															"25931:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "25931:8:0"
													},
													"referencedDeclaration": 643,
													"src": "25931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25919:30:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25972:9:0"
									},
									"scope": 1502,
									"src": "25906:242:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "26339:958:0",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26358:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "26350:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"hexValue": "30",
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26367:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26350:18:0"
											},
											{
												"id": 1170,
												"nodeType": "UncheckedBlock",
												"src": "26379:887:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26408:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26417:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "26408:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26423:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26408:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "26404:102:0",
														"trueBody": {
															"id": 1067,
															"nodeType": "Block",
															"src": "26426:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26445:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26455:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26445:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "26445:13:0"
																},
																{
																	"expression": {
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1063,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26477:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26487:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26477:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1066,
																	"nodeType": "ExpressionStatement",
																	"src": "26477:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1069,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26524:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26533:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "26524:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26538:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26524:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1083,
														"nodeType": "IfStatement",
														"src": "26520:99:0",
														"trueBody": {
															"id": 1082,
															"nodeType": "Block",
															"src": "26541:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26560:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26570:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26560:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1077,
																	"nodeType": "ExpressionStatement",
																	"src": "26560:12:0"
																},
																{
																	"expression": {
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1078,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26591:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26601:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26591:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1081,
																	"nodeType": "ExpressionStatement",
																	"src": "26591:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1084,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26637:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26646:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "26637:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26637:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1098,
														"nodeType": "IfStatement",
														"src": "26633:99:0",
														"trueBody": {
															"id": 1097,
															"nodeType": "Block",
															"src": "26654:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1089,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26673:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26683:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26673:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "26673:12:0"
																},
																{
																	"expression": {
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1093,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26704:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26714:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26704:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1096,
																	"nodeType": "ExpressionStatement",
																	"src": "26704:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26759:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26750:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26764:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26750:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1113,
														"nodeType": "IfStatement",
														"src": "26746:99:0",
														"trueBody": {
															"id": 1112,
															"nodeType": "Block",
															"src": "26767:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26786:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26796:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26786:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1107,
																	"nodeType": "ExpressionStatement",
																	"src": "26786:12:0"
																},
																{
																	"expression": {
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1108,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26817:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26827:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26817:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1111,
																	"nodeType": "ExpressionStatement",
																	"src": "26817:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26872:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26863:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26876:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26863:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1128,
														"nodeType": "IfStatement",
														"src": "26859:96:0",
														"trueBody": {
															"id": 1127,
															"nodeType": "Block",
															"src": "26879:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1119,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26898:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26908:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26898:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1122,
																	"nodeType": "ExpressionStatement",
																	"src": "26898:11:0"
																},
																{
																	"expression": {
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26928:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26938:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1126,
																	"nodeType": "ExpressionStatement",
																	"src": "26928:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26973:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26982:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26986:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26973:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1143,
														"nodeType": "IfStatement",
														"src": "26969:96:0",
														"trueBody": {
															"id": 1142,
															"nodeType": "Block",
															"src": "26989:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27008:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27018:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27008:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1137,
																	"nodeType": "ExpressionStatement",
																	"src": "27008:11:0"
																},
																{
																	"expression": {
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27038:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1141,
																	"nodeType": "ExpressionStatement",
																	"src": "27038:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27083:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27092:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27083:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27083:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1158,
														"nodeType": "IfStatement",
														"src": "27079:96:0",
														"trueBody": {
															"id": 1157,
															"nodeType": "Block",
															"src": "27099:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27118:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27128:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27118:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "27118:11:0"
																},
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27148:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27158:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27148:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "27148:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27193:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27206:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27193:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1169,
														"nodeType": "IfStatement",
														"src": "27189:66:0",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "27209:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27228:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27238:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27228:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "27228:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1171,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1051,
													"src": "27283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1172,
												"nodeType": "Return",
												"src": "27276:13:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "26156:116:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26287:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26291:15:0"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26329:9:0"
									},
									"scope": 1502,
									"src": "26278:1019:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "27536:170:0",
										"statements": [
											{
												"id": 1208,
												"nodeType": "UncheckedBlock",
												"src": "27547:152:0",
												"statements": [
													{
														"assignments": [
															1186
														],
														"declarations": [
															{
																"constant": false,
																"id": 1186,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27580:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1208,
																"src": "27572:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1190,
														"initialValue": {
															"arguments": [
																{
																	"id": 1188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "27594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1187,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1174,
																	1210
																],
																"referencedDeclaration": 1174,
																"src": "27589:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27589:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27572:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "27622:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "27632:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1193,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "27644:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "27653:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "27644:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "27632:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "27659:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1197,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "27664:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27659:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1199,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1177,
																					"src": "27673:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27659:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "27632:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27685:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "27632:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27681:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "27631:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "27622:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1184,
														"id": 1207,
														"nodeType": "Return",
														"src": "27615:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "27305:145:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "27465:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27494:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27485:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1178,
														"name": "Rounding",
														"nameLocations": [
															"27485:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "27485:8:0"
													},
													"referencedDeclaration": 643,
													"src": "27485:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27469:34:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27526:9:0"
									},
									"scope": 1502,
									"src": "27456:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "27899:886:0",
										"statements": [
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "27918:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "27910:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"hexValue": "30",
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27927:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27910:18:0"
											},
											{
												"id": 1335,
												"nodeType": "UncheckedBlock",
												"src": "27939:815:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "27968:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27977:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27983:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27977:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "27968:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1238,
														"nodeType": "IfStatement",
														"src": "27964:106:0",
														"trueBody": {
															"id": 1237,
															"nodeType": "Block",
															"src": "27987:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28006:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28015:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28021:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "28015:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "28006:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "28006:17:0"
																},
																{
																	"expression": {
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1233,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28042:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28052:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "28042:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1236,
																	"nodeType": "ExpressionStatement",
																	"src": "28042:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1239,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28088:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28097:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28103:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28097:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "28088:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "28084:106:0",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "28107:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1244,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28126:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28135:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28141:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "28135:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "28126:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "28126:17:0"
																},
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28162:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28172:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "28162:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "28162:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1256,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28217:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28223:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "28217:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "28208:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1272,
														"nodeType": "IfStatement",
														"src": "28204:106:0",
														"trueBody": {
															"id": 1271,
															"nodeType": "Block",
															"src": "28227:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28246:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28255:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28261:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "28255:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "28246:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1266,
																	"nodeType": "ExpressionStatement",
																	"src": "28246:17:0"
																},
																{
																	"expression": {
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28282:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28292:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "28282:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1270,
																	"nodeType": "ExpressionStatement",
																	"src": "28282:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28328:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28337:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "28337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "28328:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1289,
														"nodeType": "IfStatement",
														"src": "28324:103:0",
														"trueBody": {
															"id": 1288,
															"nodeType": "Block",
															"src": "28346:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28365:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28374:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "28374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "28365:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"nodeType": "ExpressionStatement",
																	"src": "28365:16:0"
																},
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28400:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28410:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "28400:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "28400:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28445:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28454:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "28454:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "28445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1306,
														"nodeType": "IfStatement",
														"src": "28441:103:0",
														"trueBody": {
															"id": 1305,
															"nodeType": "Block",
															"src": "28463:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1295,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28482:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28491:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28497:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "28491:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "28482:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "28482:16:0"
																},
																{
																	"expression": {
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28517:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28527:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "28517:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"nodeType": "ExpressionStatement",
																	"src": "28517:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28562:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28571:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "28571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "28562:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1323,
														"nodeType": "IfStatement",
														"src": "28558:103:0",
														"trueBody": {
															"id": 1322,
															"nodeType": "Block",
															"src": "28580:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28599:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28608:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28614:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "28608:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "28599:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"nodeType": "ExpressionStatement",
																	"src": "28599:16:0"
																},
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28634:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28644:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "28634:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "28634:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28679:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28688:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28694:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "28688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "28679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1334,
														"nodeType": "IfStatement",
														"src": "28675:68:0",
														"trueBody": {
															"id": 1333,
															"nodeType": "Block",
															"src": "28697:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28716:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28726:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "28716:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "28716:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1336,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1219,
													"src": "28771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1337,
												"nodeType": "Return",
												"src": "28764:13:0"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "27714:117:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "27846:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27860:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27851:15:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27890:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27889:9:0"
									},
									"scope": 1502,
									"src": "27837:948:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "29026:172:0",
										"statements": [
											{
												"id": 1373,
												"nodeType": "UncheckedBlock",
												"src": "29037:154:0",
												"statements": [
													{
														"assignments": [
															1351
														],
														"declarations": [
															{
																"constant": false,
																"id": 1351,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "29070:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1373,
																"src": "29062:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29062:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1355,
														"initialValue": {
															"arguments": [
																{
																	"id": 1353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "29085:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1352,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1339,
																	1375
																],
																"referencedDeclaration": 1339,
																"src": "29079:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29079:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29062:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "29113:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1357,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1345,
																					"src": "29123:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1358,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "29135:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "29144:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "29135:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "29123:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "29150:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1362,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1351,
																						"src": "29156:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29150:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1364,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "29165:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29150:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "29123:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29177:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "29123:55:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29173:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29122:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "29113:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1349,
														"id": 1372,
														"nodeType": "Return",
														"src": "29106:73:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "28793:146:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "28954:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28968:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28960:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28984:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28975:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1343,
														"name": "Rounding",
														"nameLocations": [
															"28975:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "28975:8:0"
													},
													"referencedDeclaration": 643,
													"src": "28975:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28959:34:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "29017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29016:9:0"
									},
									"scope": 1502,
									"src": "28945:253:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "29520:624:0",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29539:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "29531:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"hexValue": "30",
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29548:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29531:18:0"
											},
											{
												"id": 1458,
												"nodeType": "UncheckedBlock",
												"src": "29560:553:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29589:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29598:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "29589:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29589:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1401,
														"nodeType": "IfStatement",
														"src": "29585:101:0",
														"trueBody": {
															"id": 1400,
															"nodeType": "Block",
															"src": "29607:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29626:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29636:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "29626:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "29626:13:0"
																},
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29658:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29668:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29658:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "29658:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29713:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29704:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29718:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29704:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1416,
														"nodeType": "IfStatement",
														"src": "29700:98:0",
														"trueBody": {
															"id": 1415,
															"nodeType": "Block",
															"src": "29721:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29750:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29740:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1410,
																	"nodeType": "ExpressionStatement",
																	"src": "29740:12:0"
																},
																{
																	"expression": {
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1411,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29771:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29781:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29771:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1414,
																	"nodeType": "ExpressionStatement",
																	"src": "29771:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29816:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29825:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29816:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29830:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29816:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1431,
														"nodeType": "IfStatement",
														"src": "29812:98:0",
														"trueBody": {
															"id": 1430,
															"nodeType": "Block",
															"src": "29833:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1422,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29852:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29862:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29852:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1425,
																	"nodeType": "ExpressionStatement",
																	"src": "29852:12:0"
																},
																{
																	"expression": {
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1426,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29883:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29893:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29883:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1429,
																	"nodeType": "ExpressionStatement",
																	"src": "29883:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29937:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29928:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29928:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "29924:98:0",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "29945:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29964:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29974:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29964:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1440,
																	"nodeType": "ExpressionStatement",
																	"src": "29964:12:0"
																},
																{
																	"expression": {
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29995:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30005:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29995:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1444,
																	"nodeType": "ExpressionStatement",
																	"src": "29995:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "30040:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30049:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "30040:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30053:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30040:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1457,
														"nodeType": "IfStatement",
														"src": "30036:66:0",
														"trueBody": {
															"id": 1456,
															"nodeType": "Block",
															"src": "30056:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1452,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "30075:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30085:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30075:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1455,
																	"nodeType": "ExpressionStatement",
																	"src": "30075:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1459,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "30130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1460,
												"nodeType": "Return",
												"src": "30123:13:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "29206:245:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "29466:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29481:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29472:15:0"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29511:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29510:9:0"
									},
									"scope": 1502,
									"src": "29457:687:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "30387:179:0",
										"statements": [
											{
												"id": 1499,
												"nodeType": "UncheckedBlock",
												"src": "30398:161:0",
												"statements": [
													{
														"assignments": [
															1474
														],
														"declarations": [
															{
																"constant": false,
																"id": 1474,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30431:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1499,
																"src": "30423:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1473,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30423:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1478,
														"initialValue": {
															"arguments": [
																{
																	"id": 1476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "30447:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1475,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1462,
																	1501
																],
																"referencedDeclaration": 1462,
																"src": "30440:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30440:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30423:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "30475:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1480,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "30485:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1481,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "30497:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "30506:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "30497:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "30485:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "30512:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1487,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1485,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "30518:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1486,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "30528:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "30518:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1488,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "30517:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "30512:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1490,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1465,
																					"src": "30533:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30512:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "30485:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30545:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "30485:61:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30541:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "30484:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "30475:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1472,
														"id": 1498,
														"nodeType": "Return",
														"src": "30468:79:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "30152:147:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30314:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30336:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1466,
														"name": "Rounding",
														"nameLocations": [
															"30336:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "30336:8:0"
													},
													"referencedDeclaration": 643,
													"src": "30336:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30320:34:0"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30377:9:0"
									},
									"scope": 1502,
									"src": "30305:261:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3631,
							"src": "17953:12616:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "30650:82:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1605,
							"linearizedBaseContracts": [
								1605
							],
							"name": "SignedMath",
							"nameLocation": "30742:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "30898:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1513,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "30916:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1514,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "30920:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "30916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1517,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "30928:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "30916:13:0",
													"trueExpression": {
														"id": 1516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "30924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1519,
												"nodeType": "Return",
												"src": "30909:20:0"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "30760:68:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "30843:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30854:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30847:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30864:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30857:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1507,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30846:20:0"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30890:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1510,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30889:8:0"
									},
									"scope": 1605,
									"src": "30834:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "31084:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1531,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "31102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1532,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "31106:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "31102:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "31114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31102:13:0",
													"trueExpression": {
														"id": 1534,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "31110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1537,
												"nodeType": "Return",
												"src": "31095:20:0"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "30945:69:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "31029:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31033:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1523,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31050:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31043:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1525,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31043:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31032:20:0"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31076:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1528,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31075:8:0"
									},
									"scope": 1605,
									"src": "31020:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "31334:166:0",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "31405:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "31398:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1549,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "31398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1551,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "31410:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1552,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "31414:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31410:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1555,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31421:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1556,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31425:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31421:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "31420:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1561,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31419:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31409:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31398:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1564,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "31451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1569,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1550,
																						"src": "31471:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "31463:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1567,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "31463:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31463:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31477:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "31463:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31456:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1565,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "31456:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31456:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1574,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31485:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1575,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31485:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31484:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31456:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1579,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31455:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31451:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1581,
												"nodeType": "Return",
												"src": "31444:48:0"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "31131:129:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "31275:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31283:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31300:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31293:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31282:20:0"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31326:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1546,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31325:8:0"
									},
									"scope": 1605,
									"src": "31266:234:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "31649:163:0",
										"statements": [
											{
												"id": 1602,
												"nodeType": "UncheckedBlock",
												"src": "31660:145:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1593,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31777:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31782:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "31777:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "31790:2:0",
																		"subExpression": {
																			"id": 1597,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31791:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "31777:15:0",
																	"trueExpression": {
																		"id": 1596,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "31786:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1591,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31769:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1590,
														"id": 1601,
														"nodeType": "Return",
														"src": "31762:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "31508:80:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "31603:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "31614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31607:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1585,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31607:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31606:10:0"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31639:9:0"
									},
									"scope": 1605,
									"src": "31594:218:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3631,
							"src": "30734:1081:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1606,
								"nodeType": "StructuredDocumentation",
								"src": "32051:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1915,
							"linearizedBaseContracts": [
								1915
							],
							"name": "SafeMath",
							"nameLocation": "32262:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "32495:146:0",
										"statements": [
											{
												"id": 1636,
												"nodeType": "UncheckedBlock",
												"src": "32506:128:0",
												"statements": [
													{
														"assignments": [
															1619
														],
														"declarations": [
															{
																"constant": false,
																"id": 1619,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "32539:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1636,
																"src": "32531:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1623,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1621,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "32547:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32531:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "32567:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1625,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1631,
														"nodeType": "IfStatement",
														"src": "32563:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32582:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32589:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1617,
															"id": 1630,
															"nodeType": "Return",
															"src": "32574:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1633,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "32620:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1634,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1617,
														"id": 1635,
														"nodeType": "Return",
														"src": "32606:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "32278:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "32428:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32443:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32434:22:0"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32479:15:0"
									},
									"scope": 1915,
									"src": "32419:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "32869:118:0",
										"statements": [
											{
												"id": 1664,
												"nodeType": "UncheckedBlock",
												"src": "32880:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "32909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1651,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "32913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1657,
														"nodeType": "IfStatement",
														"src": "32905:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32924:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32931:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1656,
															"nodeType": "Return",
															"src": "32916:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1659,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "32962:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1660,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "32966:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32962:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32955:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1649,
														"id": 1663,
														"nodeType": "Return",
														"src": "32948:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "32649:138:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "32802:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32817:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32809:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32828:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32820:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32808:22:0"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32854:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32854:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32853:15:0"
									},
									"scope": 1915,
									"src": "32793:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "33218:427:0",
										"statements": [
											{
												"id": 1706,
												"nodeType": "UncheckedBlock",
												"src": "33229:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1678,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33491:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1685,
														"nodeType": "IfStatement",
														"src": "33487:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33507:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33513:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33506:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1684,
															"nodeType": "Return",
															"src": "33499:16:0"
														}
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "33538:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1706,
																"src": "33530:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "33530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1691,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1689,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33530:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1692,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1693,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "33570:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33566:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33575:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33566:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1701,
														"nodeType": "IfStatement",
														"src": "33562:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33586:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33593:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33585:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1700,
															"nodeType": "Return",
															"src": "33578:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1703,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1677,
														"id": 1705,
														"nodeType": "Return",
														"src": "33610:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "32995:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "33151:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33157:22:0"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33203:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33202:15:0"
									},
									"scope": 1915,
									"src": "33142:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "33877:119:0",
										"statements": [
											{
												"id": 1734,
												"nodeType": "UncheckedBlock",
												"src": "33888:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "33917:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "33913:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33933:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1719,
															"id": 1726,
															"nodeType": "Return",
															"src": "33925:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33965:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "33971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "33975:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33971:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33964:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1719,
														"id": 1733,
														"nodeType": "Return",
														"src": "33957:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "33653:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "33810:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33825:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33836:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33828:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33816:22:0"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33861:15:0"
									},
									"scope": 1915,
									"src": "33801:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "34238:119:0",
										"statements": [
											{
												"id": 1762,
												"nodeType": "UncheckedBlock",
												"src": "34249:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "34278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1755,
														"nodeType": "IfStatement",
														"src": "34274:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34294:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34301:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "34293:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1747,
															"id": 1754,
															"nodeType": "Return",
															"src": "34286:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34326:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1757,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "34332:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1758,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "34336:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "34332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1760,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "34325:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1747,
														"id": 1761,
														"nodeType": "Return",
														"src": "34318:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "34004:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "34171:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34197:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34189:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34177:22:0"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34223:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34223:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34222:15:0"
									},
									"scope": 1915,
									"src": "34162:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "34671:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "34689:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "34693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34689:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1777,
												"nodeType": "Return",
												"src": "34682:12:0"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "34365:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "34613:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34636:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34628:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34616:22:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34661:9:0"
									},
									"scope": 1915,
									"src": "34604:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "35052:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "35070:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "35074:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35070:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1792,
												"nodeType": "Return",
												"src": "35063:12:0"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "34710:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "34994:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35006:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "34998:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34997:22:0"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35042:9:0"
									},
									"scope": 1915,
									"src": "34985:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "35409:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "35427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1805,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "35431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1807,
												"nodeType": "Return",
												"src": "35420:12:0"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "35091:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "35351:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35354:22:0"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35399:9:0"
									},
									"scope": 1915,
									"src": "35342:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "35808:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "35826:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "35830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1822,
												"nodeType": "Return",
												"src": "35819:12:0"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "35448:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "35750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35753:22:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35798:9:0"
									},
									"scope": 1915,
									"src": "35741:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "36373:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "36391:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1835,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "36395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36391:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1837,
												"nodeType": "Return",
												"src": "36384:12:0"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "35847:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "36315:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36327:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36318:22:0"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36363:9:0"
									},
									"scope": 1915,
									"src": "36306:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "36978:111:0",
										"statements": [
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "36989:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "37022:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "37027:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1855,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "37030:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1851,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37014:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1857,
														"nodeType": "ExpressionStatement",
														"src": "37014:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1858,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "37065:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "37069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1850,
														"id": 1861,
														"nodeType": "Return",
														"src": "37058:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "36412:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "36892:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "36932:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36918:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36918:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36895:50:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36968:9:0"
									},
									"scope": 1915,
									"src": "36883:206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "37682:110:0",
										"statements": [
											{
												"id": 1887,
												"nodeType": "UncheckedBlock",
												"src": "37693:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1877,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "37726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37730:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "37726:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1880,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "37733:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1876,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37718:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37718:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1882,
														"nodeType": "ExpressionStatement",
														"src": "37718:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1883,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "37768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "37772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1875,
														"id": 1886,
														"nodeType": "Return",
														"src": "37761:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "37097:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "37596:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37608:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37600:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37619:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37611:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "37636:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37622:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37599:50:0"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37672:9:0"
									},
									"scope": 1915,
									"src": "37587:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "38550:110:0",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "38561:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1902,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "38594:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38598:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "38594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1905,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "38601:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1901,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "38586:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38586:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1907,
														"nodeType": "ExpressionStatement",
														"src": "38586:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "38636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1909,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "38640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1900,
														"id": 1911,
														"nodeType": "Return",
														"src": "38629:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "37800:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "38464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "38504:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38490:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38467:50:0"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38540:9:0"
									},
									"scope": 1915,
									"src": "38455:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3631,
							"src": "32254:6409:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1916,
								"nodeType": "StructuredDocumentation",
								"src": "38736:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2243,
							"linearizedBaseContracts": [
								2243
							],
							"name": "Address",
							"nameLocation": "38815:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "40122:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1924,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "40351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40359:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "40351:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40364:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "40351:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40351:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1929,
												"nodeType": "Return",
												"src": "40344:30:0"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "38830:1220:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "40065:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "40084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40076:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40075:17:0"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40115:6:0"
									},
									"scope": 2243,
									"src": "40056:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "41387:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1942,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "41414:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "41406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1940,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "41406:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41406:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "41420:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "41406:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1945,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41406:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41439:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41398:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "41398:73:0"
											},
											{
												"assignments": [
													1951,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1951,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "41490:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "41485:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1950,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "41485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1958,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41533:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1952,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "41503:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41513:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "41503:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1954,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "41503:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41503:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41484:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1960,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "41555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41564:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41547:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "41547:78:0"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "40390:920:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "41325:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "41351:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41335:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41335:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41370:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41362:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41334:43:0"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41387:0:0"
									},
									"scope": 2243,
									"src": "41316:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "42484:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "42524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "42532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42538:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42541:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1975,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42502:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42502:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1974,
												"id": 1981,
												"nodeType": "Return",
												"src": "42495:79:0"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "41641:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42404:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42433:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42416:35:0"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42470:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42469:14:0"
									},
									"scope": 2243,
									"src": "42395:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "42963:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1996,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "43003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "43011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43017:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1999,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "43020:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1995,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42981:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42981:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1994,
												"id": 2001,
												"nodeType": "Return",
												"src": "42974:59:0"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "42590:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42821:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42869:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42869:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42911:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42897:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42833:97:0"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42949:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42948:14:0"
									},
									"scope": 2243,
									"src": "42812:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "43529:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "43569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2017,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "43577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2018,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "43583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43590:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2015,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "43547:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43547:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2021,
												"nodeType": "Return",
												"src": "43540:94:0"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "43049:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43425:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43463:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43446:50:0"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43515:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43515:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43514:14:0"
									},
									"scope": 2243,
									"src": "43416:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "44082:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2040,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "44109:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "44101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2038,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "44101:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44101:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "44115:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "44101:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44126:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44101:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44133:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44093:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "44093:81:0"
											},
											{
												"assignments": [
													2049,
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "44191:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44186:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2048,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "44186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "44213:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44200:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2050,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "44200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"arguments": [
														{
															"id": 2056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "44253:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2052,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "44227:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "44234:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "44227:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "44227:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44227:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44185:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2060,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "44303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2061,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "44311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2062,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "44320:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2063,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "44332:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2059,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "44276:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44276:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2065,
												"nodeType": "Return",
												"src": "44269:76:0"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "43650:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43907:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43947:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43939:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43977:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43964:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "44030:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44016:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "44016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43928:121:0"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44068:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44067:14:0"
									},
									"scope": 2243,
									"src": "43898:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "44638:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2078,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "44675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2079,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "44683:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44689:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2077,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2084,
															2113
														],
														"referencedDeclaration": 2113,
														"src": "44656:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44656:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2076,
												"id": 2082,
												"nodeType": "Return",
												"src": "44649:80:0"
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "44361:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44547:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44595:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44582:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44565:35:0"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44624:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44624:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44623:14:0"
									},
									"scope": 2243,
									"src": "44538:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "45091:171:0",
										"statements": [
											{
												"assignments": [
													2097,
													2099
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "45108:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45103:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2096,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "45103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2099,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "45130:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45117:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2098,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "45117:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2104,
												"initialValue": {
													"arguments": [
														{
															"id": 2102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "45162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45151:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "45144:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45144:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45102:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45212:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "45220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2108,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "45229:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2109,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "45241:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2105,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "45185:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45185:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2095,
												"id": 2111,
												"nodeType": "Return",
												"src": "45178:76:0"
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "44745:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44938:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44992:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45034:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45020:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2090,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44956:97:0"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45077:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45076:14:0"
									},
									"scope": 2243,
									"src": "44929:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "45546:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "45585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "45593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45599:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2123,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2130,
															2159
														],
														"referencedDeclaration": 2159,
														"src": "45564:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45564:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2122,
												"id": 2128,
												"nodeType": "Return",
												"src": "45557:84:0"
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "45270:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45458:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45478:35:0"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45532:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45531:14:0"
									},
									"scope": 2243,
									"src": "45449:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "46002:173:0",
										"statements": [
											{
												"assignments": [
													2143,
													2145
												],
												"declarations": [
													{
														"constant": false,
														"id": 2143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "46019:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46014:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "46014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "46041:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46028:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "46028:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2150,
												"initialValue": {
													"arguments": [
														{
															"id": 2148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "46075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46055:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46062:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "46055:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46055:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46013:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "46133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2154,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "46142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "46154:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2151,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "46098:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46098:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2157,
												"nodeType": "Return",
												"src": "46091:76:0"
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "45657:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45852:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45891:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45883:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45908:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45908:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45950:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45936:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45872:97:0"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45988:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45987:14:0"
									},
									"scope": 2243,
									"src": "45843:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "46670:445:0",
										"statements": [
											{
												"condition": {
													"id": 2173,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2164,
													"src": "46685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "47048:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2191,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "47071:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2192,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "47083:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2190,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47063:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "47063:33:0"
														}
													]
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "46681:427:0",
												"trueBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "46694:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2174,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "46713:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "46724:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "46713:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "46713:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2186,
															"nodeType": "IfStatement",
															"src": "46709:290:0",
															"trueBody": {
																"id": 2185,
																"nodeType": "Block",
																"src": "46737:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2180,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2162,
																							"src": "46942:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2179,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1931,
																						"src": "46931:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "46931:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "46951:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2178,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "46923:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46923:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2184,
																		"nodeType": "ExpressionStatement",
																		"src": "46923:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2187,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "47020:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2188,
															"nodeType": "Return",
															"src": "47013:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "46183:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "46480:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "46525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "46547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46542:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "46542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "46578:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46565:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "46613:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46599:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46506:126:0"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46656:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46655:14:0"
									},
									"scope": 2243,
									"src": "46471:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "47508:141:0",
										"statements": [
											{
												"condition": {
													"id": 2210,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2201,
													"src": "47523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2219,
													"nodeType": "Block",
													"src": "47582:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2215,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "47605:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2216,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "47617:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2214,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47597:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2218,
															"nodeType": "ExpressionStatement",
															"src": "47597:33:0"
														}
													]
												},
												"id": 2220,
												"nodeType": "IfStatement",
												"src": "47519:123:0",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "47532:44:0",
													"statements": [
														{
															"expression": {
																"id": 2211,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "47554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2209,
															"id": 2212,
															"nodeType": "Return",
															"src": "47547:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "47123:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "47353:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "47385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47416:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47403:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47403:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47451:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47437:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47369:101:0"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47494:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47494:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47493:14:0"
									},
									"scope": 2243,
									"src": "47344:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "47740:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2229,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "47818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47829:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47818:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47838:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "47818:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2239,
													"nodeType": "Block",
													"src": "48155:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2236,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2226,
																		"src": "48177:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2235,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "48170:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48170:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2238,
															"nodeType": "ExpressionStatement",
															"src": "48170:20:0"
														}
													]
												},
												"id": 2240,
												"nodeType": "IfStatement",
												"src": "47814:388:0",
												"trueBody": {
													"id": 2234,
													"nodeType": "Block",
													"src": "47841:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "48002:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "48021:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "48050:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "48044:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48044:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "48025:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "48090:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "48094:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "48086:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "48086:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "48107:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "48079:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48079:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "48079:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48050:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48094:10:0",
																	"valueSize": 1
																}
															],
															"id": 2233,
															"nodeType": "InlineAssembly",
															"src": "47993:145:0"
														}
													]
												}
											}
										]
									},
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "47666:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47687:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47674:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47674:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47713:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47699:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47673:53:0"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47740:0:0"
									},
									"scope": 2243,
									"src": "47657:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3631,
							"src": "38807:9405:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2245,
										"name": "Context",
										"nameLocations": [
											"48695:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "48695:7:0"
									},
									"id": 2246,
									"nodeType": "InheritanceSpecifier",
									"src": "48695:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2244,
								"nodeType": "StructuredDocumentation",
								"src": "48216:447:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2332,
							"linearizedBaseContracts": [
								2332,
								21
							],
							"name": "Pausable",
							"nameLocation": "48683:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "48710:75:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2251,
									"name": "Paused",
									"nameLocation": "48797:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "48804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48803:17:0"
									},
									"src": "48791:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "48829:72:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2256,
									"name": "Unpaused",
									"nameLocation": "48913:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "48922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48921:17:0"
									},
									"src": "48907:32:0"
								},
								{
									"constant": false,
									"id": 2258,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "48960:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2332,
									"src": "48947:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2257,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "48947:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "49066:34:0",
										"statements": [
											{
												"expression": {
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2262,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "49077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49087:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "49077:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "49077:15:0"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "48976:69:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2267,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49063:2:0"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49066:0:0"
									},
									"scope": 2332,
									"src": "49051:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "49253:33:0",
										"statements": [
											{
												"expression": {
													"id": 2273,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2258,
													"src": "49271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2272,
												"id": 2274,
												"nodeType": "Return",
												"src": "49264:14:0"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "49108:86:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "49209:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49215:2:0"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "49247:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "49247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49246:6:0"
									},
									"scope": 2332,
									"src": "49200:86:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "49506:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "49525:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2280,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "49526:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49526:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49536:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49517:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "49517:38:0"
											},
											{
												"id": 2286,
												"nodeType": "PlaceholderStatement",
												"src": "49566:1:0"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "49294:181:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2288,
									"name": "whenNotPaused",
									"nameLocation": "49490:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49503:2:0"
									},
									"src": "49481:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "49784:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2292,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "49803:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49803:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49813:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49795:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "49795:41:0"
											},
											{
												"id": 2297,
												"nodeType": "PlaceholderStatement",
												"src": "49847:1:0"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "49583:173:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2299,
									"name": "whenPaused",
									"nameLocation": "49771:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49781:2:0"
									},
									"src": "49762:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "50049:69:0",
										"statements": [
											{
												"expression": {
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2305,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "50060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50070:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "50060:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2308,
												"nodeType": "ExpressionStatement",
												"src": "50060:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2310,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "50097:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50097:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2309,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "50090:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50090:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2313,
												"nodeType": "EmitStatement",
												"src": "50085:25:0"
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "49864:130:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2302,
												"name": "whenNotPaused",
												"nameLocations": [
													"50035:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "50035:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50035:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "50009:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50015:2:0"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50049:0:0"
									},
									"scope": 2332,
									"src": "50000:118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "50307:72:0",
										"statements": [
											{
												"expression": {
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2321,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "50318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "50318:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "50318:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2326,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "50358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50358:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2325,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "50349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50349:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2329,
												"nodeType": "EmitStatement",
												"src": "50344:27:0"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "50126:127:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2318,
												"name": "whenPaused",
												"nameLocations": [
													"50296:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2299,
												"src": "50296:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50296:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "50268:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50276:2:0"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50307:0:0"
									},
									"scope": 2332,
									"src": "50259:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3631,
							"src": "48665:1717:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2333,
										"name": "Ownable",
										"nameLocations": [
											"50410:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "50410:7:0"
									},
									"id": 2334,
									"nodeType": "InheritanceSpecifier",
									"src": "50410:7:0"
								},
								{
									"baseName": {
										"id": 2335,
										"name": "Pausable",
										"nameLocations": [
											"50419:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2332,
										"src": "50419:8:0"
									},
									"id": 2336,
									"nodeType": "InheritanceSpecifier",
									"src": "50419:8:0"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3630,
							"linearizedBaseContracts": [
								3630,
								2332,
								131,
								21
							],
							"name": "Marketplace",
							"nameLocation": "50395:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2339,
									"libraryName": {
										"id": 2337,
										"name": "SafeMath",
										"nameLocations": [
											"50441:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1915,
										"src": "50441:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "50435:27:0",
									"typeName": {
										"id": 2338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "50454:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2343,
									"libraryName": {
										"id": 2340,
										"name": "SafeERC20",
										"nameLocations": [
											"50474:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 441,
										"src": "50474:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "50468:27:0",
									"typeName": {
										"id": 2342,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2341,
											"name": "IERC20",
											"nameLocations": [
												"50488:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 517,
											"src": "50488:6:0"
										},
										"referencedDeclaration": 517,
										"src": "50488:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$517",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "bab4aa6b2d5c0935e0e2937d1f73655848f670d43bf6f0c7e9e11e635bb5d86f",
									"id": 2355,
									"name": "Buy",
									"nameLocation": "50507:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "50534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50526:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50549:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50541:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50569:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50561:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50587:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50579:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50510:83:0"
									},
									"src": "50501:93:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a3d27cc8ac4e1915b6a89ce3e468d87aeb3caf011a47e236db61d098e452870c",
									"id": 2369,
									"name": "BuyWithERC20",
									"nameLocation": "50606:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50619:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "50642:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50634:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50657:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50649:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50677:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50669:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "50694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50709:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50701:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50618:97:0"
									},
									"src": "50600:116:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c68dc1f889fa3a215dcdd97178af6bd67fab7b34138eef18f4313aac53f5b364",
									"id": 2379,
									"name": "PutUpForSale",
									"nameLocation": "50728:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50749:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50741:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50764:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50756:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50784:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50776:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50801:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50793:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50740:67:0"
									},
									"src": "50722:86:0"
								},
								{
									"anonymous": false,
									"eventSelector": "44f716b281fa3e96fbd6ef888a275ef2fdf8914960a4c57c0bef6ccaebf0df31",
									"id": 2391,
									"name": "PutUpForSaleWithERC20",
									"nameLocation": "50820:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50850:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50842:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50865:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50857:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50885:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50877:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "50902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50841:82:0"
									},
									"src": "50814:110:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cfd975662262e48e8c2b68605e79d409da1b108bdc941f32d355c4cf11d35925",
									"id": 2399,
									"name": "WithdrawFromSale",
									"nameLocation": "50936:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50961:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "50953:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50976:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "50968:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50996:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "50988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50952:52:0"
									},
									"src": "50930:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2f15b7a52fc8a006876377705647acbd22eed72dec9b154aa290e286c06a3cd4",
									"id": 2405,
									"name": "WithdrawWei",
									"nameLocation": "51017:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51037:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "51029:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "51049:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "51041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51028:28:0"
									},
									"src": "51011:46:0"
								},
								{
									"anonymous": false,
									"eventSelector": "33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb29",
									"id": 2413,
									"name": "WithdrawERC20",
									"nameLocation": "51069:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51091:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "51083:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "51103:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "51095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "51118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "51110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51082:43:0"
									},
									"src": "51063:63:0"
								},
								{
									"canonicalName": "Marketplace.SelledNFT",
									"id": 2426,
									"members": [
										{
											"constant": false,
											"id": 2415,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "51174:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51166:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2414,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51166:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2417,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "51229:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51221:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51221:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2419,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "51277:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51269:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2418,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51269:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2421,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "51326:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51318:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51318:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2423,
											"mutability": "mutable",
											"name": "erc20",
											"nameLocation": "51373:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51365:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2422,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51365:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2425,
											"mutability": "mutable",
											"name": "utx",
											"nameLocation": "51468:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51460:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2424,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51460:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SelledNFT",
									"nameLocation": "51145:9:0",
									"nodeType": "StructDefinition",
									"scope": 3630,
									"src": "51138:417:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54fd4d50",
									"id": 2429,
									"mutability": "constant",
									"name": "version",
									"nameLocation": "51584:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51563:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2427,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "51563:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "51594:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2432,
									"mutability": "mutable",
									"name": "_tradeFee",
									"nameLocation": "51617:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51604:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2430,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "51604:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "51629:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "51699:30:0",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51717:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2436,
												"id": 2438,
												"nodeType": "Return",
												"src": "51710:11:0"
											}
										]
									},
									"functionSelector": "527f2902",
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMarketPlaceContract",
									"nameLocation": "51648:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51669:2:0"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "51693:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51693:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51692:6:0"
									},
									"scope": 3630,
									"src": "51639:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2444,
									"mutability": "mutable",
									"name": "_marketCollections",
									"nameLocation": "51755:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51737:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
										"typeString": "contract IERC721[]"
									},
									"typeName": {
										"baseType": {
											"id": 2442,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2441,
												"name": "IERC721",
												"nameLocations": [
													"51737:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 638,
												"src": "51737:7:0"
											},
											"referencedDeclaration": 638,
											"src": "51737:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$638",
												"typeString": "contract IERC721"
											}
										},
										"id": 2443,
										"nodeType": "ArrayTypeName",
										"src": "51737:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr",
											"typeString": "contract IERC721[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2448,
									"mutability": "mutable",
									"name": "_allowedCollections",
									"nameLocation": "51813:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51780:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2447,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2445,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51788:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "51780:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2446,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "51799:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2451,
									"mutability": "mutable",
									"name": "_allowedERC20",
									"nameLocation": "51859:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51841:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2449,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51841:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2450,
										"nodeType": "ArrayTypeName",
										"src": "51841:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2455,
									"mutability": "mutable",
									"name": "_marketTokens",
									"nameLocation": "51901:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51881:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
										"typeString": "struct Marketplace.SelledNFT[]"
									},
									"typeName": {
										"baseType": {
											"id": 2453,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2452,
												"name": "SelledNFT",
												"nameLocations": [
													"51881:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2426,
												"src": "51881:9:0"
											},
											"referencedDeclaration": 2426,
											"src": "51881:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
												"typeString": "struct Marketplace.SelledNFT"
											}
										},
										"id": 2454,
										"nodeType": "ArrayTypeName",
										"src": "51881:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
											"typeString": "struct Marketplace.SelledNFT[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2459,
									"mutability": "mutable",
									"name": "_collectionTokensCount",
									"nameLocation": "51959:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51923:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2458,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2456,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51931:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "51923:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2457,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "51942:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2463,
									"mutability": "mutable",
									"name": "_userTokensCount",
									"nameLocation": "52026:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "51990:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2462,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2460,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51998:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "51990:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2461,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "52009:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2465,
									"mutability": "mutable",
									"name": "_feeReceiver",
									"nameLocation": "52067:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3630,
									"src": "52051:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2464,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52051:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2511,
										"nodeType": "Block",
										"src": "52193:329:0",
										"statements": [
											{
												"body": {
													"id": 2507,
													"nodeType": "Block",
													"src": "52254:240:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2486,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "52292:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2488,
																					"indexExpression": {
																						"id": 2487,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2476,
																						"src": "52306:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "52292:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2489,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "52309:10:0",
																				"memberName": "collection",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2415,
																				"src": "52292:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2490,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2467,
																				"src": "52323:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "52292:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2492,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52291:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2493,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "52373:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2495,
																					"indexExpression": {
																						"id": 2494,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2476,
																						"src": "52387:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "52373:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2496,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "52390:7:0",
																				"memberName": "tokenId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2417,
																				"src": "52373:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2497,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2469,
																				"src": "52401:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "52373:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2499,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52372:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "52291:118:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2506,
															"nodeType": "IfStatement",
															"src": "52269:214:0",
															"trueBody": {
																"id": 2505,
																"nodeType": "Block",
																"src": "52425:58:0",
																"statements": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2501,
																				"name": "_marketTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "52451:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																				}
																			},
																			"id": 2503,
																			"indexExpression": {
																				"id": 2502,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2476,
																				"src": "52465:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "52451:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"functionReturnParameters": 2474,
																		"id": 2504,
																		"nodeType": "Return",
																		"src": "52444:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2479,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "52223:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2480,
															"name": "_marketTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "52227:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52241:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52227:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52223:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2508,
												"initializationExpression": {
													"assignments": [
														2476
													],
													"declarations": [
														{
															"constant": false,
															"id": 2476,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "52216:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2508,
															"src": "52208:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2475,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52208:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2478,
													"initialValue": {
														"hexValue": "30",
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "52208:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "52249:3:0",
														"subExpression": {
															"id": 2483,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "52249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2485,
													"nodeType": "ExpressionStatement",
													"src": "52249:3:0"
												},
												"nodeType": "ForStatement",
												"src": "52204:290:0"
											},
											{
												"expression": {
													"id": 2509,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2473,
													"src": "52511:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"functionReturnParameters": 2474,
												"id": 2510,
												"nodeType": "Return",
												"src": "52504:10:0"
											}
										]
									},
									"functionSelector": "6629e913",
									"id": 2512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "marketTokensGet",
									"nameLocation": "52097:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "52121:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "52113:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52141:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "52133:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52112:37:0"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "52188:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "52171:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT"
												},
												"typeName": {
													"id": 2472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2471,
														"name": "SelledNFT",
														"nameLocations": [
															"52171:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2426,
														"src": "52171:9:0"
													},
													"referencedDeclaration": 2426,
													"src": "52171:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52170:22:0"
									},
									"scope": 3630,
									"src": "52088:434:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "52591:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2521,
															"name": "lotInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "52621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														],
														"expression": {
															"id": 2518,
															"name": "_marketTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "52602:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
															}
														},
														"id": 2520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52616:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "52602:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$_t_struct$_SelledNFT_$2426_storage_$returns$__$attached_to$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Marketplace.SelledNFT storage ref[] storage pointer,struct Marketplace.SelledNFT storage ref)"
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52602:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2523,
												"nodeType": "ExpressionStatement",
												"src": "52602:27:0"
											},
											{
												"expression": {
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "52640:44:0",
													"subExpression": {
														"baseExpression": {
															"id": 2524,
															"name": "_collectionTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "52640:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2527,
														"indexExpression": {
															"expression": {
																"id": 2525,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "52663:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52671:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "52663:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52640:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2529,
												"nodeType": "ExpressionStatement",
												"src": "52640:44:0"
											},
											{
												"expression": {
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "52695:34:0",
													"subExpression": {
														"baseExpression": {
															"id": 2530,
															"name": "_userTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "52695:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2533,
														"indexExpression": {
															"expression": {
																"id": 2531,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "52712:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52720:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "52712:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52695:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2535,
												"nodeType": "ExpressionStatement",
												"src": "52695:34:0"
											}
										]
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_marketTokensAdd",
									"nameLocation": "52539:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "lotInfo",
												"nameLocation": "52573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "52556:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT"
												},
												"typeName": {
													"id": 2514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2513,
														"name": "SelledNFT",
														"nameLocations": [
															"52556:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2426,
														"src": "52556:9:0"
													},
													"referencedDeclaration": 2426,
													"src": "52556:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52555:26:0"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52591:0:0"
									},
									"scope": 3630,
									"src": "52530:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "52815:913:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2544,
																			"name": "_marketTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2455,
																			"src": "52845:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																			}
																		},
																		"id": 2549,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2545,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "52859:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "52873:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "52859:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52882:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "52859:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "52845:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "52885:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "52845:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2551,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2539,
																	"src": "52899:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "52845:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2553,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52844:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2554,
																			"name": "_marketTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2455,
																			"src": "52941:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																			}
																		},
																		"id": 2559,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2555,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "52955:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "52969:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "52955:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52978:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "52955:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "52941:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "52981:7:0",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2417,
																	"src": "52941:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2561,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "52992:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "52941:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2563,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52940:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "52844:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2587,
												"nodeType": "IfStatement",
												"src": "52826:363:0",
												"trueBody": {
													"id": 2586,
													"nodeType": "Block",
													"src": "53012:177:0",
													"statements": [
														{
															"expression": {
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "53027:65:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 2565,
																		"name": "_userTokensCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2463,
																		"src": "53027:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2573,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2566,
																				"name": "_marketTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "53044:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																				}
																			},
																			"id": 2571,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2567,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "53058:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "53072:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "53058:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "53080:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "53058:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "53044:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "53083:6:0",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2419,
																		"src": "53044:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "53027:63:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2575,
															"nodeType": "ExpressionStatement",
															"src": "53027:65:0"
														},
														{
															"expression": {
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "53107:36:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 2576,
																		"name": "_collectionTokensCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2459,
																		"src": "53107:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2578,
																	"indexExpression": {
																		"id": 2577,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2539,
																		"src": "53130:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "53107:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2580,
															"nodeType": "ExpressionStatement",
															"src": "53107:36:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2581,
																		"name": "_marketTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2455,
																		"src": "53158:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																		}
																	},
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "53172:3:0",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "53158:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Marketplace.SelledNFT storage ref[] storage pointer)"
																	}
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53158:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2585,
															"nodeType": "ExpressionStatement",
															"src": "53158:19:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 2646,
													"nodeType": "Block",
													"src": "53249:472:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2599,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "53287:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2601,
																					"indexExpression": {
																						"id": 2600,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2589,
																						"src": "53301:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "53287:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "53304:10:0",
																				"memberName": "collection",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2415,
																				"src": "53287:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2603,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2539,
																				"src": "53318:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "53287:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "53286:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2606,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "53368:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2608,
																					"indexExpression": {
																						"id": 2607,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2589,
																						"src": "53382:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "53368:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "53385:7:0",
																				"memberName": "tokenId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2417,
																				"src": "53368:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2610,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2541,
																				"src": "53396:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "53368:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2612,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "53367:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "53286:118:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2645,
															"nodeType": "IfStatement",
															"src": "53264:446:0",
															"trueBody": {
																"id": 2644,
																"nodeType": "Block",
																"src": "53420:290:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "53439:43:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 2614,
																					"name": "_userTokensCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2463,
																					"src": "53439:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2619,
																				"indexExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 2615,
																							"name": "_marketTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2455,
																							"src": "53456:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																							}
																						},
																						"id": 2617,
																						"indexExpression": {
																							"id": 2616,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2589,
																							"src": "53470:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "53456:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref"
																						}
																					},
																					"id": 2618,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "53473:6:0",
																					"memberName": "seller",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2419,
																					"src": "53456:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "53439:41:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2621,
																		"nodeType": "ExpressionStatement",
																		"src": "53439:43:0"
																	},
																	{
																		"expression": {
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "53501:36:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 2622,
																					"name": "_collectionTokensCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2459,
																					"src": "53501:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2624,
																				"indexExpression": {
																					"id": 2623,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2539,
																					"src": "53524:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "53501:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2626,
																		"nodeType": "ExpressionStatement",
																		"src": "53501:36:0"
																	},
																	{
																		"expression": {
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2627,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "53556:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2629,
																				"indexExpression": {
																					"id": 2628,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2589,
																					"src": "53570:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "53556:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2630,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "53575:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2635,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2631,
																							"name": "_marketTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2455,
																							"src": "53589:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																							}
																						},
																						"id": 2632,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "53603:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "53589:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "53611:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "53589:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "53575:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref"
																				}
																			},
																			"src": "53556:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 2637,
																		"nodeType": "ExpressionStatement",
																		"src": "53556:57:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2638,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "53632:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "53646:3:0",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "53632:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$",
																					"typeString": "function (struct Marketplace.SelledNFT storage ref[] storage pointer)"
																				}
																			},
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53632:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2642,
																		"nodeType": "ExpressionStatement",
																		"src": "53632:19:0"
																	},
																	{
																		"functionReturnParameters": 2543,
																		"id": 2643,
																		"nodeType": "Return",
																		"src": "53688:7:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2592,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "53218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2593,
															"name": "_marketTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "53222:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
															}
														},
														"id": 2594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53236:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "53222:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53218:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2647,
												"initializationExpression": {
													"assignments": [
														2589
													],
													"declarations": [
														{
															"constant": false,
															"id": 2589,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "53211:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2647,
															"src": "53203:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2588,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53203:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2591,
													"initialValue": {
														"hexValue": "30",
														"id": 2590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53215:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53203:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53244:3:0",
														"subExpression": {
															"id": 2596,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2589,
															"src": "53244:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2598,
													"nodeType": "ExpressionStatement",
													"src": "53244:3:0"
												},
												"nodeType": "ForStatement",
												"src": "53199:522:0"
											}
										]
									},
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_marketTokensDel",
									"nameLocation": "52752:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "52777:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "52769:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52797:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "52789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52768:37:0"
									},
									"returnParameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52815:0:0"
									},
									"scope": 3630,
									"src": "52743:985:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2715,
										"nodeType": "Block",
										"src": "53904:359:0",
										"statements": [
											{
												"body": {
													"id": 2691,
													"nodeType": "Block",
													"src": "53962:136:0",
													"statements": [
														{
															"expression": {
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2673,
																		"name": "_allowedCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "53977:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2677,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2674,
																			"name": "__collections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2652,
																			"src": "53997:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2676,
																		"indexExpression": {
																			"id": 2675,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2663,
																			"src": "54011:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "53997:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "53977:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54017:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "53977:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2680,
															"nodeType": "ExpressionStatement",
															"src": "53977:44:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 2685,
																					"name": "__collections",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2652,
																					"src": "54068:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2687,
																				"indexExpression": {
																					"id": 2686,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2663,
																					"src": "54082:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "54068:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2684,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "54060:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54060:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	],
																	"expression": {
																		"id": 2681,
																		"name": "_marketCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2444,
																		"src": "54036:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																			"typeString": "contract IERC721[] storage ref"
																		}
																	},
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54055:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "54036:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$_t_contract$_IERC721_$638_$returns$__$attached_to$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$",
																		"typeString": "function (contract IERC721[] storage pointer,contract IERC721)"
																	}
																},
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54036:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2690,
															"nodeType": "ExpressionStatement",
															"src": "54036:50:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2666,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2663,
														"src": "53931:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2667,
															"name": "__collections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2652,
															"src": "53935:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53949:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "53935:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53931:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2692,
												"initializationExpression": {
													"assignments": [
														2663
													],
													"declarations": [
														{
															"constant": false,
															"id": 2663,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "53924:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2692,
															"src": "53919:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2662,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "53919:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2665,
													"initialValue": {
														"hexValue": "30",
														"id": 2664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53928:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53919:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53957:3:0",
														"subExpression": {
															"id": 2670,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "53957:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2672,
													"nodeType": "ExpressionStatement",
													"src": "53957:3:0"
												},
												"nodeType": "ForStatement",
												"src": "53915:183:0"
											},
											{
												"expression": {
													"id": 2705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2693,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "54108:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2694,
																		"name": "__feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2654,
																		"src": "54124:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54149:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54141:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2695,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "54141:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54141:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "54124:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2700,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "54123:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 2703,
															"name": "__feeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2654,
															"src": "54168:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "54123:58:0",
														"trueExpression": {
															"expression": {
																"id": 2701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54155:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54159:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54155:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54108:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2706,
												"nodeType": "ExpressionStatement",
												"src": "54108:73:0"
											},
											{
												"expression": {
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2707,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "54192:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2708,
														"name": "__tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2656,
														"src": "54204:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54192:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2710,
												"nodeType": "ExpressionStatement",
												"src": "54192:22:0"
											},
											{
												"expression": {
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2711,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "54225:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2712,
														"name": "__allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "54241:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "54225:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2714,
												"nodeType": "ExpressionStatement",
												"src": "54225:30:0"
											}
										]
									},
									"id": 2716,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "__collections",
												"nameLocation": "53783:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "53766:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2650,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "53766:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2651,
													"nodeType": "ArrayTypeName",
													"src": "53766:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "__feeReceiver",
												"nameLocation": "53815:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "53807:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "__tradeFee",
												"nameLocation": "53844:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "53839:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "53839:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "__allowedERC20",
												"nameLocation": "53882:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "53865:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2657,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "53865:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2658,
													"nodeType": "ArrayTypeName",
													"src": "53865:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53755:148:0"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53904:0:0"
									},
									"scope": 3630,
									"src": "53744:519:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2723,
										"nodeType": "Block",
										"src": "54326:38:0",
										"statements": [
											{
												"expression": {
													"id": 2721,
													"name": "_feeReceiver",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2465,
													"src": "54344:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2720,
												"id": 2722,
												"nodeType": "Return",
												"src": "54337:19:0"
											}
										]
									},
									"functionSelector": "e8a35392",
									"id": 2724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeReceiver",
									"nameLocation": "54280:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54294:2:0"
									},
									"returnParameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "54317:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54316:9:0"
									},
									"scope": 3630,
									"src": "54271:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2735,
										"nodeType": "Block",
										"src": "54436:49:0",
										"statements": [
											{
												"expression": {
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2731,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "54447:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2732,
														"name": "_newFeeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2726,
														"src": "54462:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54447:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2734,
												"nodeType": "ExpressionStatement",
												"src": "54447:30:0"
											}
										]
									},
									"functionSelector": "efdcd974",
									"id": 2736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2729,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2728,
												"name": "onlyOwner",
												"nameLocations": [
													"54426:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "54426:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "54426:9:0"
										}
									],
									"name": "setFeeReceiver",
									"nameLocation": "54379:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "_newFeeReceiver",
												"nameLocation": "54402:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "54394:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54393:25:0"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54436:0:0"
									},
									"scope": 3630,
									"src": "54370:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "54564:44:0",
										"statements": [
											{
												"expression": {
													"id": 2743,
													"name": "_marketCollections",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2444,
													"src": "54582:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
														"typeString": "contract IERC721[] storage ref"
													}
												},
												"functionReturnParameters": 2742,
												"id": 2744,
												"nodeType": "Return",
												"src": "54575:25:0"
											}
										]
									},
									"functionSelector": "3a51f383",
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowedCollections",
									"nameLocation": "54502:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54523:2:0"
									},
									"returnParameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "54546:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 2739,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2738,
															"name": "IERC721",
															"nameLocations": [
																"54546:7:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 638,
															"src": "54546:7:0"
														},
														"referencedDeclaration": 638,
														"src": "54546:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"id": 2740,
													"nodeType": "ArrayTypeName",
													"src": "54546:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54545:18:0"
									},
									"scope": 3630,
									"src": "54493:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2804,
										"nodeType": "Block",
										"src": "54696:336:0",
										"statements": [
											{
												"body": {
													"id": 2776,
													"nodeType": "Block",
													"src": "54762:86:0",
													"statements": [
														{
															"expression": {
																"id": 2774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2765,
																		"name": "_allowedCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "54777:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2772,
																	"indexExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 2768,
																					"name": "_marketCollections",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2444,
																					"src": "54805:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																						"typeString": "contract IERC721[] storage ref"
																					}
																				},
																				"id": 2770,
																				"indexExpression": {
																					"id": 2769,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2755,
																					"src": "54824:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "54805:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC721_$638",
																					"typeString": "contract IERC721"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC721_$638",
																					"typeString": "contract IERC721"
																				}
																			],
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54797:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2766,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "54797:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54797:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "54777:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54831:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "54777:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2775,
															"nodeType": "ExpressionStatement",
															"src": "54777:59:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2758,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "54726:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2759,
															"name": "_marketCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "54730:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 2760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54749:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54730:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54726:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2777,
												"initializationExpression": {
													"assignments": [
														2755
													],
													"declarations": [
														{
															"constant": false,
															"id": 2755,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "54719:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2777,
															"src": "54711:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2754,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54711:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2757,
													"initialValue": {
														"hexValue": "30",
														"id": 2756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54723:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "54711:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "54757:3:0",
														"subExpression": {
															"id": 2762,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "54757:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2764,
													"nodeType": "ExpressionStatement",
													"src": "54757:3:0"
												},
												"nodeType": "ForStatement",
												"src": "54707:141:0"
											},
											{
												"expression": {
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "54858:25:0",
													"subExpression": {
														"id": 2778,
														"name": "_marketCollections",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "54865:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
															"typeString": "contract IERC721[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "54858:25:0"
											},
											{
												"body": {
													"id": 2802,
													"nodeType": "Block",
													"src": "54946:79:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 2796,
																					"name": "_newCollections",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2749,
																					"src": "54993:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2798,
																				"indexExpression": {
																					"id": 2797,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2782,
																					"src": "55009:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "54993:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2795,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "54985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54985:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	],
																	"expression": {
																		"id": 2792,
																		"name": "_marketCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2444,
																		"src": "54961:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																			"typeString": "contract IERC721[] storage ref"
																		}
																	},
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54980:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "54961:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$_t_contract$_IERC721_$638_$returns$__$attached_to$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$",
																		"typeString": "function (contract IERC721[] storage pointer,contract IERC721)"
																	}
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54961:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2801,
															"nodeType": "ExpressionStatement",
															"src": "54961:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2785,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "54913:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2786,
															"name": "_newCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "54917:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54933:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54917:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54913:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2803,
												"initializationExpression": {
													"assignments": [
														2782
													],
													"declarations": [
														{
															"constant": false,
															"id": 2782,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "54906:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2803,
															"src": "54898:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2781,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2784,
													"initialValue": {
														"hexValue": "30",
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "54898:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "54941:3:0",
														"subExpression": {
															"id": 2789,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2782,
															"src": "54941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2791,
													"nodeType": "ExpressionStatement",
													"src": "54941:3:0"
												},
												"nodeType": "ForStatement",
												"src": "54894:131:0"
											}
										]
									},
									"functionSelector": "27713536",
									"id": 2805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2751,
												"name": "onlyOwner",
												"nameLocations": [
													"54686:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "54686:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "54686:9:0"
										}
									],
									"name": "setAllowedCollections",
									"nameLocation": "54623:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "_newCollections",
												"nameLocation": "54662:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "54645:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2747,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "54645:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2748,
													"nodeType": "ArrayTypeName",
													"src": "54645:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54644:34:0"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54696:0:0"
									},
									"scope": 3630,
									"src": "54614:418:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "55118:50:0",
										"statements": [
											{
												"expression": {
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2813,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "55129:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2814,
														"name": "newAllowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "55145:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "55129:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2816,
												"nodeType": "ExpressionStatement",
												"src": "55129:31:0"
											}
										]
									},
									"functionSelector": "e9e4e160",
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2811,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2810,
												"name": "onlyOwner",
												"nameLocations": [
													"55108:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "55108:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55108:9:0"
										}
									],
									"name": "setAllowedERC20",
									"nameLocation": "55051:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "newAllowedERC20",
												"nameLocation": "55084:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "55067:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2806,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "55067:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2807,
													"nodeType": "ArrayTypeName",
													"src": "55067:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55066:34:0"
									},
									"returnParameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55118:0:0"
									},
									"scope": 3630,
									"src": "55042:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "55245:39:0",
										"statements": [
											{
												"expression": {
													"id": 2824,
													"name": "_allowedERC20",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2451,
													"src": "55263:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2823,
												"id": 2825,
												"nodeType": "Return",
												"src": "55256:20:0"
											}
										]
									},
									"functionSelector": "69c57352",
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowedERC20",
									"nameLocation": "55189:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55204:2:0"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "55227:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2820,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "55227:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2821,
													"nodeType": "ArrayTypeName",
													"src": "55227:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55226:18:0"
									},
									"scope": 3630,
									"src": "55180:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2857,
										"nodeType": "Block",
										"src": "55358:152:0",
										"statements": [
											{
												"body": {
													"id": 2853,
													"nodeType": "Block",
													"src": "55411:69:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2845,
																	"name": "erc20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "55430:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2846,
																		"name": "_allowedERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2451,
																		"src": "55439:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2848,
																	"indexExpression": {
																		"id": 2847,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2835,
																		"src": "55453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55439:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "55430:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2852,
															"nodeType": "IfStatement",
															"src": "55426:42:0",
															"trueBody": {
																"expression": {
																	"hexValue": "74727565",
																	"id": 2850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55464:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 2833,
																"id": 2851,
																"nodeType": "Return",
																"src": "55457:11:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2838,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "55383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2839,
															"name": "_allowedERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2451,
															"src": "55385:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55399:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55385:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55383:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2854,
												"initializationExpression": {
													"assignments": [
														2835
													],
													"declarations": [
														{
															"constant": false,
															"id": 2835,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "55378:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2854,
															"src": "55373:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2834,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "55373:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2837,
													"initialValue": {
														"hexValue": "30",
														"id": 2836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55380:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "55373:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "55406:3:0",
														"subExpression": {
															"id": 2842,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "55406:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2844,
													"nodeType": "ExpressionStatement",
													"src": "55406:3:0"
												},
												"nodeType": "ForStatement",
												"src": "55369:111:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2855,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "55497:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2833,
												"id": 2856,
												"nodeType": "Return",
												"src": "55490:12:0"
											}
										]
									},
									"functionSelector": "785fa7ce",
									"id": 2858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllowedERC20",
									"nameLocation": "55301:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "55324:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "55316:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55315:15:0"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "55352:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55351:6:0"
									},
									"scope": 3630,
									"src": "55292:218:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2886,
										"nodeType": "Block",
										"src": "55558:151:0",
										"statements": [
											{
												"assignments": [
													2864
												],
												"declarations": [
													{
														"constant": false,
														"id": 2864,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "55577:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2886,
														"src": "55569:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2870,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2867,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "55594:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Marketplace_$3630",
																	"typeString": "contract Marketplace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Marketplace_$3630",
																	"typeString": "contract Marketplace"
																}
															],
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2865,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55586:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55586:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "55600:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "55586:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55569:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2877,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "55647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2873,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "55626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55630:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "55626:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55618:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2871,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "55618:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55618:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55638:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "55618:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55618:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2879,
												"nodeType": "ExpressionStatement",
												"src": "55618:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2881,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55682:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55686:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55682:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2883,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "55694:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2880,
														"name": "WithdrawWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "55670:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55670:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2885,
												"nodeType": "EmitStatement",
												"src": "55665:36:0"
											}
										]
									},
									"functionSelector": "5211ac2e",
									"id": 2887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2861,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2860,
												"name": "onlyOwner",
												"nameLocations": [
													"55548:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "55548:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55548:9:0"
										}
									],
									"name": "withdrawWei",
									"nameLocation": "55527:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55538:2:0"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55558:0:0"
									},
									"scope": 3630,
									"src": "55518:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2926,
										"nodeType": "Block",
										"src": "55772:206:0",
										"statements": [
											{
												"assignments": [
													2896
												],
												"declarations": [
													{
														"constant": false,
														"id": 2896,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "55790:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2926,
														"src": "55783:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2895,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2894,
																"name": "IERC20",
																"nameLocations": [
																	"55783:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "55783:6:0"
															},
															"referencedDeclaration": 517,
															"src": "55783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2900,
												"initialValue": {
													"arguments": [
														{
															"id": 2898,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2889,
															"src": "55805:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2897,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "55798:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 2899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55798:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55783:28:0"
											},
											{
												"assignments": [
													2902
												],
												"declarations": [
													{
														"constant": false,
														"id": 2902,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "55830:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2926,
														"src": "55822:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2910,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2907,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "55864:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55856:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "55856:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55856:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2903,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2896,
															"src": "55840:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55846:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "55840:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55840:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55822:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2914,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "55896:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55896:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2916,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "55905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2911,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2896,
															"src": "55881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55887:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "55881:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55881:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2918,
												"nodeType": "ExpressionStatement",
												"src": "55881:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2920,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55943:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55947:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55943:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2922,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2889,
															"src": "55955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2923,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "55962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2919,
														"name": "WithdrawERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "55929:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55929:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2925,
												"nodeType": "EmitStatement",
												"src": "55924:46:0"
											}
										]
									},
									"functionSelector": "f4f3b200",
									"id": 2927,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2891,
												"name": "onlyOwner",
												"nameLocations": [
													"55762:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "55762:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55762:9:0"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "55726:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "55748:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "55740:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55739:15:0"
									},
									"returnParameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55772:0:0"
									},
									"scope": 3630,
									"src": "55717:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "56036:35:0",
										"statements": [
											{
												"expression": {
													"id": 2932,
													"name": "_tradeFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2432,
													"src": "56054:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2931,
												"id": 2933,
												"nodeType": "Return",
												"src": "56047:16:0"
											}
										]
									},
									"functionSelector": "952977f5",
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTradeFee",
									"nameLocation": "55995:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56006:2:0"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "56030:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "56030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56029:6:0"
									},
									"scope": 3630,
									"src": "55986:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2946,
										"nodeType": "Block",
										"src": "56134:43:0",
										"statements": [
											{
												"expression": {
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2942,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "56145:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2943,
														"name": "_newTradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2937,
														"src": "56157:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56145:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2945,
												"nodeType": "ExpressionStatement",
												"src": "56145:24:0"
											}
										]
									},
									"functionSelector": "10603023",
									"id": 2947,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2940,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2939,
												"name": "onlyOwner",
												"nameLocations": [
													"56124:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "56124:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56124:9:0"
										}
									],
									"name": "setTradeFee",
									"nameLocation": "56086:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "_newTradeFee",
												"nameLocation": "56103:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "56098:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2936,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "56098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56097:19:0"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56134:0:0"
									},
									"scope": 3630,
									"src": "56077:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "56254:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2955,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56292:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56296:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56292:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2954,
														"name": "getUserTokensAtSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3026,
														"src": "56272:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (struct Marketplace.SelledNFT memory[] memory)"
														}
													},
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56272:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 2953,
												"id": 2958,
												"nodeType": "Return",
												"src": "56265:38:0"
											}
										]
									},
									"functionSelector": "a096c5a2",
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTokensAtSale",
									"nameLocation": "56194:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56211:2:0"
									},
									"returnParameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "56234:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2950,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2949,
															"name": "SelledNFT",
															"nameLocations": [
																"56234:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "56234:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "56234:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2951,
													"nodeType": "ArrayTypeName",
													"src": "56234:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56233:20:0"
									},
									"scope": 3630,
									"src": "56185:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3025,
										"nodeType": "Block",
										"src": "56430:425:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2969,
															"name": "_userTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "56445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2971,
														"indexExpression": {
															"id": 2970,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2962,
															"src": "56462:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "56445:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56445:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3022,
												"nodeType": "IfStatement",
												"src": "56441:386:0",
												"trueBody": {
													"id": 3021,
													"nodeType": "Block",
													"src": "56475:352:0",
													"statements": [
														{
															"expression": {
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2974,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2967,
																	"src": "56490:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2979,
																				"name": "_userTokensCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2463,
																				"src": "56512:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2981,
																			"indexExpression": {
																				"id": 2980,
																				"name": "seller",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2962,
																				"src": "56529:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "56512:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "56496:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 2976,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 2975,
																					"name": "SelledNFT",
																					"nameLocations": [
																						"56500:9:0"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2426,
																					"src": "56500:9:0"
																				},
																				"referencedDeclaration": 2426,
																				"src": "56500:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																					"typeString": "struct Marketplace.SelledNFT"
																				}
																			},
																			"id": 2977,
																			"nodeType": "ArrayTypeName",
																			"src": "56500:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
																				"typeString": "struct Marketplace.SelledNFT[]"
																			}
																		}
																	},
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56496:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"src": "56490:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory[] memory"
																}
															},
															"id": 2984,
															"nodeType": "ExpressionStatement",
															"src": "56490:47:0"
														},
														{
															"assignments": [
																2986
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2986,
																	"mutability": "mutable",
																	"name": "counter",
																	"nameLocation": "56560:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3021,
																	"src": "56552:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2985,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56552:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2988,
															"initialValue": {
																"hexValue": "30",
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56570:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56552:19:0"
														},
														{
															"body": {
																"id": 3019,
																"nodeType": "Block",
																"src": "56637:179:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 3005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3000,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "56660:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 3002,
																					"indexExpression": {
																						"id": 3001,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2990,
																						"src": "56674:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "56660:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 3003,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "56677:6:0",
																				"memberName": "seller",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2419,
																				"src": "56660:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3004,
																				"name": "seller",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2962,
																				"src": "56687:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "56660:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3018,
																		"nodeType": "IfStatement",
																		"src": "56656:145:0",
																		"trueBody": {
																			"id": 3017,
																			"nodeType": "Block",
																			"src": "56695:106:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 3012,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3006,
																								"name": "ret",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2967,
																								"src": "56718:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Marketplace.SelledNFT memory[] memory"
																								}
																							},
																							"id": 3008,
																							"indexExpression": {
																								"id": 3007,
																								"name": "counter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2986,
																								"src": "56722:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "56718:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																								"typeString": "struct Marketplace.SelledNFT memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 3009,
																								"name": "_marketTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2455,
																								"src": "56733:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																									"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																								}
																							},
																							"id": 3011,
																							"indexExpression": {
																								"id": 3010,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2990,
																								"src": "56747:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "56733:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref"
																							}
																						},
																						"src": "56718:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																							"typeString": "struct Marketplace.SelledNFT memory"
																						}
																					},
																					"id": 3013,
																					"nodeType": "ExpressionStatement",
																					"src": "56718:31:0"
																				},
																				{
																					"expression": {
																						"id": 3015,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "56772:9:0",
																						"subExpression": {
																							"id": 3014,
																							"name": "counter",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2986,
																							"src": "56772:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3016,
																					"nodeType": "ExpressionStatement",
																					"src": "56772:9:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2993,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2990,
																	"src": "56606:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2994,
																		"name": "_marketTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2455,
																		"src": "56610:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																		}
																	},
																	"id": 2995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56624:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "56610:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "56606:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3020,
															"initializationExpression": {
																"assignments": [
																	2990
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2990,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "56599:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 3020,
																		"src": "56591:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2989,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "56591:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2992,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56603:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "56591:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 2998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "56632:3:0",
																	"subExpression": {
																		"id": 2997,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2990,
																		"src": "56632:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2999,
																"nodeType": "ExpressionStatement",
																"src": "56632:3:0"
															},
															"nodeType": "ForStatement",
															"src": "56586:230:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3023,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2967,
													"src": "56844:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 2968,
												"id": 3024,
												"nodeType": "Return",
												"src": "56837:10:0"
											}
										]
									},
									"functionSelector": "19c8c1c5",
									"id": 3026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTokensAtSale",
									"nameLocation": "56326:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "56354:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "56346:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56345:16:0"
									},
									"returnParameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "56420:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "56401:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2965,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2964,
															"name": "SelledNFT",
															"nameLocations": [
																"56401:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "56401:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "56401:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2966,
													"nodeType": "ArrayTypeName",
													"src": "56401:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56400:24:0"
									},
									"scope": 3630,
									"src": "56317:538:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3034,
										"nodeType": "Block",
										"src": "56925:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3031,
														"name": "_marketTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "56943:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
														}
													},
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "56957:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "56943:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3030,
												"id": 3033,
												"nodeType": "Return",
												"src": "56936:27:0"
											}
										]
									},
									"functionSelector": "c8f77899",
									"id": 3035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensAtSaleCount",
									"nameLocation": "56872:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56892:2:0"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "56916:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56915:9:0"
									},
									"scope": 3630,
									"src": "56863:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3044,
										"nodeType": "Block",
										"src": "57045:39:0",
										"statements": [
											{
												"expression": {
													"id": 3042,
													"name": "_marketTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2455,
													"src": "57063:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
														"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 3041,
												"id": 3043,
												"nodeType": "Return",
												"src": "57056:20:0"
											}
										]
									},
									"functionSelector": "d55a34e4",
									"id": 3045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensAtSale",
									"nameLocation": "56986:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57001:2:0"
									},
									"returnParameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "57025:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3038,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3037,
															"name": "SelledNFT",
															"nameLocations": [
																"57025:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "57025:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "57025:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 3039,
													"nodeType": "ArrayTypeName",
													"src": "57025:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57024:20:0"
									},
									"scope": 3630,
									"src": "56977:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "57190:453:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3054,
															"name": "_collectionTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "57205:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3056,
														"indexExpression": {
															"id": 3055,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "57228:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "57205:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57242:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57205:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3107,
												"nodeType": "IfStatement",
												"src": "57201:414:0",
												"trueBody": {
													"id": 3106,
													"nodeType": "Block",
													"src": "57245:370:0",
													"statements": [
														{
															"expression": {
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3059,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3052,
																	"src": "57260:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 3064,
																				"name": "_collectionTokensCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2459,
																				"src": "57282:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3066,
																			"indexExpression": {
																				"id": 3065,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3047,
																				"src": "57305:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "57282:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "57266:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 3061,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 3060,
																					"name": "SelledNFT",
																					"nameLocations": [
																						"57270:9:0"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2426,
																					"src": "57270:9:0"
																				},
																				"referencedDeclaration": 2426,
																				"src": "57270:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																					"typeString": "struct Marketplace.SelledNFT"
																				}
																			},
																			"id": 3062,
																			"nodeType": "ArrayTypeName",
																			"src": "57270:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
																				"typeString": "struct Marketplace.SelledNFT[]"
																			}
																		}
																	},
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57266:51:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"src": "57260:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory[] memory"
																}
															},
															"id": 3069,
															"nodeType": "ExpressionStatement",
															"src": "57260:57:0"
														},
														{
															"assignments": [
																3071
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3071,
																	"mutability": "mutable",
																	"name": "counter",
																	"nameLocation": "57340:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3106,
																	"src": "57332:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3070,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57332:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3073,
															"initialValue": {
																"hexValue": "30",
																"id": 3072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "57350:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "57332:19:0"
														},
														{
															"body": {
																"id": 3104,
																"nodeType": "Block",
																"src": "57417:187:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 3090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3085,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "57440:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 3087,
																					"indexExpression": {
																						"id": 3086,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3075,
																						"src": "57454:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "57440:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 3088,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "57457:10:0",
																				"memberName": "collection",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2415,
																				"src": "57440:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3089,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3047,
																				"src": "57471:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "57440:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3103,
																		"nodeType": "IfStatement",
																		"src": "57436:153:0",
																		"trueBody": {
																			"id": 3102,
																			"nodeType": "Block",
																			"src": "57483:106:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 3097,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3091,
																								"name": "ret",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3052,
																								"src": "57506:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Marketplace.SelledNFT memory[] memory"
																								}
																							},
																							"id": 3093,
																							"indexExpression": {
																								"id": 3092,
																								"name": "counter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3071,
																								"src": "57510:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "57506:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																								"typeString": "struct Marketplace.SelledNFT memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 3094,
																								"name": "_marketTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2455,
																								"src": "57521:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																									"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																								}
																							},
																							"id": 3096,
																							"indexExpression": {
																								"id": 3095,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3075,
																								"src": "57535:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "57521:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref"
																							}
																						},
																						"src": "57506:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																							"typeString": "struct Marketplace.SelledNFT memory"
																						}
																					},
																					"id": 3098,
																					"nodeType": "ExpressionStatement",
																					"src": "57506:31:0"
																				},
																				{
																					"expression": {
																						"id": 3100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "57560:9:0",
																						"subExpression": {
																							"id": 3099,
																							"name": "counter",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3071,
																							"src": "57560:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3101,
																					"nodeType": "ExpressionStatement",
																					"src": "57560:9:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3078,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3075,
																	"src": "57386:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 3079,
																		"name": "_marketTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2455,
																		"src": "57390:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																		}
																	},
																	"id": 3080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57404:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "57390:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57386:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3105,
															"initializationExpression": {
																"assignments": [
																	3075
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3075,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "57379:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 3105,
																		"src": "57371:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3074,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "57371:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3077,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57383:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "57371:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 3083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "57412:3:0",
																	"subExpression": {
																		"id": 3082,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3075,
																		"src": "57412:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3084,
																"nodeType": "ExpressionStatement",
																"src": "57412:3:0"
															},
															"nodeType": "ForStatement",
															"src": "57366:238:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3108,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3052,
													"src": "57632:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 3053,
												"id": 3109,
												"nodeType": "Return",
												"src": "57625:10:0"
											}
										]
									},
									"functionSelector": "1ed56d44",
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectionTokensAtSale",
									"nameLocation": "57099:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "57133:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "57125:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57124:20:0"
									},
									"returnParameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "57185:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "57166:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3050,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3049,
															"name": "SelledNFT",
															"nameLocations": [
																"57166:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "57166:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "57166:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 3051,
													"nodeType": "ArrayTypeName",
													"src": "57166:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57165:24:0"
									},
									"scope": 3630,
									"src": "57090:553:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3300,
										"nodeType": "Block",
										"src": "57752:1625:0",
										"statements": [
											{
												"assignments": [
													3122
												],
												"declarations": [
													{
														"constant": false,
														"id": 3122,
														"mutability": "mutable",
														"name": "lotInfo",
														"nameLocation": "57780:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "57763:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3121,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3120,
																"name": "SelledNFT",
																"nameLocations": [
																	"57763:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "57763:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "57763:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3127,
												"initialValue": {
													"arguments": [
														{
															"id": 3124,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "57806:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3115,
															"src": "57818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3123,
														"name": "marketTokensGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "57790:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_SelledNFT_$2426_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57790:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57763:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3129,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "57845:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3130,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57853:10:0",
																"memberName": "collection",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "57845:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57875:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "57867:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3131,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "57867:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57867:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "57845:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 3136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57879:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 3128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57837:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3138,
												"nodeType": "ExpressionStatement",
												"src": "57837:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3140,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "57925:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3141,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57933:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2423,
																"src": "57925:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57950:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "57942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3142,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "57942:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57942:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "57925:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57954:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															},
															"value": "This token selled by Native coin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															}
														],
														"id": 3139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57917:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3149,
												"nodeType": "ExpressionStatement",
												"src": "57917:72:0"
											},
											{
												"assignments": [
													3152
												],
												"declarations": [
													{
														"constant": false,
														"id": 3152,
														"mutability": "mutable",
														"name": "payToken",
														"nameLocation": "58009:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "58002:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 3151,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3150,
																"name": "IERC20",
																"nameLocations": [
																	"58002:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "58002:6:0"
															},
															"referencedDeclaration": 517,
															"src": "58002:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3157,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3154,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "58027:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58035:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2423,
															"src": "58027:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3153,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "58020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 3156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58020:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58002:39:0"
											},
											{
												"assignments": [
													3159
												],
												"declarations": [
													{
														"constant": false,
														"id": 3159,
														"mutability": "mutable",
														"name": "buyerBalance",
														"nameLocation": "58060:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "58052:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3165,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58094:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58098:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58094:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3160,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "58075:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58084:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "58075:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58075:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58052:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3167,
																"name": "buyerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3159,
																"src": "58124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3168,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "58140:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3169,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58148:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2421,
																"src": "58140:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58124:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e20796f75722062616c616e636520746f20706179",
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58155:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															},
															"value": "You do not have enough tokens on your balance to pay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															}
														],
														"id": 3166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58116:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58116:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3173,
												"nodeType": "ExpressionStatement",
												"src": "58116:94:0"
											},
											{
												"assignments": [
													3175
												],
												"declarations": [
													{
														"constant": false,
														"id": 3175,
														"mutability": "mutable",
														"name": "buyerAllowance",
														"nameLocation": "58229:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "58221:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3185,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58265:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58269:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58265:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3182,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "58285:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58277:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3180,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "58277:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58277:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3176,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "58246:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58255:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "58246:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 3184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58246:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58221:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3187,
																"name": "buyerAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3175,
																"src": "58310:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3188,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "58328:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3189,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58336:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2421,
																"src": "58328:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58310:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e747261637420746f2073656e642074686520707572636861736520616d6f756e74",
															"id": 3191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58343:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															},
															"value": "You did not allow the contract to send the purchase amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															}
														],
														"id": 3186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58302:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3193,
												"nodeType": "ExpressionStatement",
												"src": "58302:102:0"
											},
											{
												"assignments": [
													3195
												],
												"declarations": [
													{
														"constant": false,
														"id": 3195,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "58435:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "58427:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3198,
												"initialValue": {
													"expression": {
														"id": 3196,
														"name": "lotInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "58444:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT memory"
														}
													},
													"id": 3197,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "58452:5:0",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2421,
													"src": "58444:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58427:30:0"
											},
											{
												"assignments": [
													3200
												],
												"declarations": [
													{
														"constant": false,
														"id": 3200,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "58476:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "58468:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3210,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3205,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3195,
																	"src": "58514:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 3206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58522:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 3203,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "58501:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58510:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "58501:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58501:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3208,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "58528:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3201,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "58488:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58497:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "58488:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58488:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58468:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3211,
															"name": "lotInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "58553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														},
														"id": 3212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58561:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2419,
														"src": "58553:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3213,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "58571:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58571:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "58553:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3220,
												"nodeType": "IfStatement",
												"src": "58549:44:0",
												"trueBody": {
													"expression": {
														"id": 3218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3216,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3200,
															"src": "58580:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58592:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "58580:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3219,
													"nodeType": "ExpressionStatement",
													"src": "58580:13:0"
												}
											},
											{
												"assignments": [
													3222
												],
												"declarations": [
													{
														"constant": false,
														"id": 3222,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "58612:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "58604:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3228,
												"initialValue": {
													"arguments": [
														{
															"id": 3225,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3195,
															"src": "58641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3226,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3200,
															"src": "58649:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3223,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "58628:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58637:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "58628:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58628:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58604:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3234,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "58720:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "58724:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "58720:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58712:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "58712:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58712:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3239,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3122,
																		"src": "58754:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "58762:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2419,
																	"src": "58754:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58746:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3237,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "58746:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58746:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3242,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3222,
															"src": "58784:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3229,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "58672:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58681:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 218,
														"src": "58672:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58672:136:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3244,
												"nodeType": "ExpressionStatement",
												"src": "58672:136:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3245,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3200,
														"src": "58823:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58835:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58823:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3264,
												"nodeType": "IfStatement",
												"src": "58819:192:0",
												"trueBody": {
													"id": 3263,
													"nodeType": "Block",
													"src": "58838:173:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 3253,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "58905:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "58909:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "58905:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "58897:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3251,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "58897:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "58897:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3258,
																				"name": "_feeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2465,
																				"src": "58943:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "58935:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3256,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "58935:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "58935:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3260,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3200,
																		"src": "58975:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3248,
																		"name": "payToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3152,
																		"src": "58853:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "58862:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "58853:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58853:146:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3262,
															"nodeType": "ExpressionStatement",
															"src": "58853:146:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3272,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "59070:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59062:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3270,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "59062:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59062:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59077:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59081:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59077:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3276,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "59089:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59097:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "59089:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3266,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3122,
																		"src": "59029:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3267,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59037:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "59029:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3265,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "59021:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59021:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59049:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "59021:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59021:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3279,
												"nodeType": "ExpressionStatement",
												"src": "59021:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3281,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "59133:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3282,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3115,
															"src": "59145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3280,
														"name": "_marketTokensDel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "59116:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59116:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3284,
												"nodeType": "ExpressionStatement",
												"src": "59116:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3286,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "59198:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3287,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59206:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "59198:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3288,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59228:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59232:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59228:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3290,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "59254:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3291,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59262:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "59254:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3292,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "59287:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3293,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59295:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "59287:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3294,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "59317:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3295,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59325:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2423,
															"src": "59317:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3296,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "59345:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3297,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59353:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2421,
															"src": "59345:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3285,
														"name": "BuyWithERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "59171:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,address,uint256)"
														}
													},
													"id": 3298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59171:198:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3299,
												"nodeType": "EmitStatement",
												"src": "59166:203:0"
											}
										]
									},
									"functionSelector": "2b205d14",
									"id": 3301,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3118,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3117,
												"name": "whenNotPaused",
												"nameLocations": [
													"57733:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "57733:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57733:13:0"
										}
									],
									"name": "buyNFTbyERC20",
									"nameLocation": "57660:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "57682:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3301,
												"src": "57674:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "57699:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3301,
												"src": "57694:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "57694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57673:34:0"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57752:0:0"
									},
									"scope": 3630,
									"src": "57651:1726:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3439,
										"nodeType": "Block",
										"src": "59501:1068:0",
										"statements": [
											{
												"assignments": [
													3312
												],
												"declarations": [
													{
														"constant": false,
														"id": 3312,
														"mutability": "mutable",
														"name": "lotInfo",
														"nameLocation": "59529:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3439,
														"src": "59512:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3311,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3310,
																"name": "SelledNFT",
																"nameLocations": [
																	"59512:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "59512:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "59512:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3317,
												"initialValue": {
													"arguments": [
														{
															"id": 3314,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3303,
															"src": "59555:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3315,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3305,
															"src": "59567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3313,
														"name": "marketTokensGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "59539:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_SelledNFT_$2426_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59539:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59512:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3319,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3312,
																	"src": "59595:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3320,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59603:10:0",
																"memberName": "collection",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "59595:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "59625:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "59617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3321,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "59617:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59617:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "59595:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59629:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 3318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59586:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3328,
												"nodeType": "ExpressionStatement",
												"src": "59586:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3330,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "59701:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59705:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "59701:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3332,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3312,
																	"src": "59714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3333,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59722:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2421,
																"src": "59714:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "59701:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f722074686973206974656d",
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59729:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															},
															"value": "You have not paid enough for this item"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															}
														],
														"id": 3329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59693:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3337,
												"nodeType": "ExpressionStatement",
												"src": "59693:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3339,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3312,
																	"src": "59833:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3340,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59841:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2423,
																"src": "59833:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "59858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "59850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3341,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "59850:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59850:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "59833:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
															"id": 3346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59862:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															},
															"value": "This token selled by ERC20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															}
														],
														"id": 3338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59825:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3348,
												"nodeType": "ExpressionStatement",
												"src": "59825:66:0"
											},
											{
												"assignments": [
													3350
												],
												"declarations": [
													{
														"constant": false,
														"id": 3350,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "59920:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3439,
														"src": "59912:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "59912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3353,
												"initialValue": {
													"expression": {
														"id": 3351,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "59929:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59933:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "59929:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59912:26:0"
											},
											{
												"assignments": [
													3355
												],
												"declarations": [
													{
														"constant": false,
														"id": 3355,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "59957:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3439,
														"src": "59949:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "59949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3365,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3360,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3350,
																	"src": "59995:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 3361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "60003:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 3358,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "59982:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 3359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59991:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "59982:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59982:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3363,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "60009:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3356,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "59969:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59978:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "59969:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59969:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59949:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3366,
															"name": "lotInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3312,
															"src": "60034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														},
														"id": 3367,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60042:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2419,
														"src": "60034:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3368,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "60052:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60052:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60034:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3375,
												"nodeType": "IfStatement",
												"src": "60030:44:0",
												"trueBody": {
													"expression": {
														"id": 3373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3371,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3355,
															"src": "60061:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60073:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "60061:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3374,
													"nodeType": "ExpressionStatement",
													"src": "60061:13:0"
												}
											},
											{
												"assignments": [
													3377
												],
												"declarations": [
													{
														"constant": false,
														"id": 3377,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "60093:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3439,
														"src": "60085:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3383,
												"initialValue": {
													"arguments": [
														{
															"id": 3380,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3350,
															"src": "60122:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3381,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3355,
															"src": "60130:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3378,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "60109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60118:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "60109:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60109:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60085:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3390,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3377,
															"src": "60186:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3386,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3312,
																		"src": "60161:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3387,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60169:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2419,
																	"src": "60161:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60153:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60153:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60177:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "60153:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60153:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3392,
												"nodeType": "ExpressionStatement",
												"src": "60153:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3393,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3355,
														"src": "60215:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60227:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "60215:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3405,
												"nodeType": "IfStatement",
												"src": "60211:87:0",
												"trueBody": {
													"id": 3404,
													"nodeType": "Block",
													"src": "60230:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3401,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3355,
																		"src": "60276:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3398,
																				"name": "_feeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2465,
																				"src": "60253:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "60245:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 3396,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "60245:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60245:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 3400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60267:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "60245:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60245:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3403,
															"nodeType": "ExpressionStatement",
															"src": "60245:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3413,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "60367:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60359:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60359:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60359:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "60374:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60378:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "60374:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3417,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "60386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3418,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60394:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "60386:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3407,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3312,
																		"src": "60326:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3408,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60334:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "60326:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3406,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "60318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60318:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60346:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "60318:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60318:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3420,
												"nodeType": "ExpressionStatement",
												"src": "60318:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3422,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3303,
															"src": "60430:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3305,
															"src": "60442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3421,
														"name": "_marketTokensDel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "60413:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60413:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3425,
												"nodeType": "ExpressionStatement",
												"src": "60413:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3427,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "60472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3428,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60480:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "60472:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3429,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "60488:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60492:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "60488:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3431,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "60500:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3432,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60508:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "60500:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3433,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "60520:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3434,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60528:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "60520:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3435,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "60537:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3436,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60545:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2421,
															"src": "60537:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3426,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "60468:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 3437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60468:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3438,
												"nodeType": "EmitStatement",
												"src": "60463:88:0"
											}
										]
									},
									"functionSelector": "a82ba76f",
									"id": 3440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3307,
												"name": "whenNotPaused",
												"nameLocations": [
													"59482:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "59482:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "59482:13:0"
										}
									],
									"name": "buyNFT",
									"nameLocation": "59396:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "59411:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3440,
												"src": "59403:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59431:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3440,
												"src": "59423:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59402:37:0"
									},
									"returnParameters": {
										"id": 3309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59501:0:0"
									},
									"scope": 3630,
									"src": "59387:1182:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3554,
										"nodeType": "Block",
										"src": "60750:1119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3454,
																"name": "_allowedCollections",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "60820:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3456,
															"indexExpression": {
																"id": 3455,
																"name": "collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3442,
																"src": "60840:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "60820:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564204e465420636f6c6c656374696f6e",
															"id": 3457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60866:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244",
																"typeString": "literal_string \"Not allowed NFT collection\""
															},
															"value": "Not allowed NFT collection"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244",
																"typeString": "literal_string \"Not allowed NFT collection\""
															}
														],
														"id": 3453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60798:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3459,
												"nodeType": "ExpressionStatement",
												"src": "60798:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3465,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3444,
																		"src": "60990:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3462,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3442,
																				"src": "60970:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3461,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "60962:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 3463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60962:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60982:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 571,
																	"src": "60962:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60962:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3467,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "61003:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "61007:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "61003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "60962:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "61028:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 3460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60940:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3472,
												"nodeType": "ExpressionStatement",
												"src": "60940:126:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3474,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3446,
																"src": "61085:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "61093:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "61085:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 3477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "61096:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 3473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "61077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61077:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3479,
												"nodeType": "ExpressionStatement",
												"src": "61077:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3480,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "61145:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "61163:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "61155:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3481,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "61155:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61155:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61145:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3496,
												"nodeType": "IfStatement",
												"src": "61141:172:0",
												"trueBody": {
													"id": 3495,
													"nodeType": "Block",
													"src": "61167:146:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3488,
																					"name": "_erc20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3448,
																					"src": "61237:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3487,
																				"name": "isAllowedERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2858,
																				"src": "61222:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																					"typeString": "function (address) view returns (bool)"
																				}
																			},
																			"id": 3489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "61222:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 3490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "61248:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "61222:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164696e672063757272656e6379",
																		"id": 3492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "61254:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		},
																		"value": "This ERC20 not allowed as a trading currency"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		}
																	],
																	"id": 3486,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "61214:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61214:87:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3494,
															"nodeType": "ExpressionStatement",
															"src": "61214:87:0"
														}
													]
												}
											},
											{
												"assignments": [
													3499
												],
												"declarations": [
													{
														"constant": false,
														"id": 3499,
														"mutability": "mutable",
														"name": "newLot",
														"nameLocation": "61342:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3554,
														"src": "61325:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3498,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3497,
																"name": "SelledNFT",
																"nameLocations": [
																	"61325:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "61325:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "61325:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3510,
												"initialValue": {
													"arguments": [
														{
															"id": 3501,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3442,
															"src": "61375:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3502,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3444,
															"src": "61400:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "61423:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61427:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "61423:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3505,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3446,
															"src": "61448:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3506,
															"name": "_erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3448,
															"src": "61468:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3507,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "61489:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61495:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "61489:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3500,
														"name": "SelledNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "61351:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2426_storage_ptr_$",
															"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
														}
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61351:164:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61325:190:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "61559:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61563:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "61559:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3519,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "61579:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "61571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3517,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "61571:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61571:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3521,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3444,
															"src": "61586:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3512,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3442,
																	"src": "61534:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3511,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "61526:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61526:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "61546:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "61526:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61526:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3523,
												"nodeType": "ExpressionStatement",
												"src": "61526:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3525,
															"name": "newLot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3499,
															"src": "61623:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														],
														"id": 3524,
														"name": "_marketTokensAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2537,
														"src": "61606:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SelledNFT_$2426_memory_ptr_$returns$__$",
															"typeString": "function (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61606:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3527,
												"nodeType": "ExpressionStatement",
												"src": "61606:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3528,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "61647:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "61665:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "61657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3529,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "61657:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61657:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61647:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3552,
													"nodeType": "Block",
													"src": "61777:85:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3545,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "61810:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "61814:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "61810:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3547,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3442,
																		"src": "61822:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3548,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3444,
																		"src": "61834:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3549,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3446,
																		"src": "61844:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3544,
																	"name": "PutUpForSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2379,
																	"src": "61797:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256)"
																	}
																},
																"id": 3550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61797:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3551,
															"nodeType": "EmitStatement",
															"src": "61792:58:0"
														}
													]
												},
												"id": 3553,
												"nodeType": "IfStatement",
												"src": "61643:219:0",
												"trueBody": {
													"id": 3543,
													"nodeType": "Block",
													"src": "61669:102:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3535,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "61711:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "61715:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "61711:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3537,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3442,
																		"src": "61723:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3538,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3444,
																		"src": "61735:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3539,
																		"name": "_erc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3448,
																		"src": "61745:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3540,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3446,
																		"src": "61753:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3534,
																	"name": "PutUpForSaleWithERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "61689:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,address,uint256)"
																	}
																},
																"id": 3541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61689:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3542,
															"nodeType": "EmitStatement",
															"src": "61684:75:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "98f748bd",
									"id": 3555,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3450,
												"name": "whenNotPaused",
												"nameLocations": [
													"60731:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "60731:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60731:13:0"
										}
									],
									"name": "sellNFT",
									"nameLocation": "60586:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "60612:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "60604:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3444,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "60641:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "60633:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "60668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "60660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "60692:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "60684:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60593:112:0"
									},
									"returnParameters": {
										"id": 3452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60750:0:0"
									},
									"scope": 3630,
									"src": "60577:1292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3628,
										"nodeType": "Block",
										"src": "61940:522:0",
										"statements": [
											{
												"assignments": [
													3564
												],
												"declarations": [
													{
														"constant": false,
														"id": 3564,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "61968:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3628,
														"src": "61951:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3563,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3562,
																"name": "SelledNFT",
																"nameLocations": [
																	"61951:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "61951:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "61951:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3569,
												"initialValue": {
													"arguments": [
														{
															"id": 3566,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3557,
															"src": "61992:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3567,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3559,
															"src": "62004:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3565,
														"name": "marketTokensGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "61976:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_SelledNFT_$2426_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61976:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61951:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3571,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3564,
																	"src": "62032:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3572,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "62038:10:0",
																"memberName": "collection",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "62032:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "62060:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "62052:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3573,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "62052:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "62052:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "62032:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420666f756e646564206174206d61726b6574706c616365",
															"id": 3578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "62064:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595",
																"typeString": "literal_string \"Token not founded at marketplace\""
															},
															"value": "Token not founded at marketplace"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595",
																"typeString": "literal_string \"Token not founded at marketplace\""
															}
														],
														"id": 3570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "62023:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62023:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3580,
												"nodeType": "ExpressionStatement",
												"src": "62023:76:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3581,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "62113:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62117:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "62113:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3583,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "62127:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "62127:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "62113:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3596,
												"nodeType": "IfStatement",
												"src": "62110:112:0",
												"trueBody": {
													"id": 3595,
													"nodeType": "Block",
													"src": "62136:86:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3587,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "62159:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "62163:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "62159:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 3589,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3564,
																				"src": "62173:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																					"typeString": "struct Marketplace.SelledNFT memory"
																				}
																			},
																			"id": 3590,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "62179:6:0",
																			"memberName": "seller",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2419,
																			"src": "62173:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "62159:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"id": 3592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "62187:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		},
																		"value": "This is not your NFT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		}
																	],
																	"id": 3586,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "62151:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "62151:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3594,
															"nodeType": "ExpressionStatement",
															"src": "62151:59:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3604,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "62279:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3630",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "62271:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "62271:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "62271:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3606,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "62286:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3607,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62292:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "62286:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3608,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "62300:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3609,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62306:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "62300:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3598,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3564,
																		"src": "62240:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3599,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "62246:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "62240:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3597,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "62232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "62232:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62258:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "62232:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62232:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3611,
												"nodeType": "ExpressionStatement",
												"src": "62232:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3613,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "62342:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3614,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62348:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "62342:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3615,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "62359:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3616,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62365:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "62359:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3612,
														"name": "_marketTokensDel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "62325:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62325:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3618,
												"nodeType": "ExpressionStatement",
												"src": "62325:48:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3620,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "62408:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3621,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62414:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "62408:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3622,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "62422:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62428:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "62422:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3624,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "62440:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3625,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62446:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "62440:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3619,
														"name": "WithdrawFromSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "62391:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62391:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3627,
												"nodeType": "EmitStatement",
												"src": "62386:68:0"
											}
										]
									},
									"functionSelector": "da24548a",
									"id": 3629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deSellNFT",
									"nameLocation": "61886:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3557,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "61904:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "61896:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3559,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "61924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3629,
												"src": "61916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61895:37:0"
									},
									"returnParameters": {
										"id": 3561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61940:0:0"
									},
									"scope": 3630,
									"src": "61877:585:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3631,
							"src": "50386:12079:0",
							"usedErrors": []
						}
					],
					"src": "33:62434:0"
				},
				"id": 0
			}
		}
	}
}