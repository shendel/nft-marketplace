{
	"id": "06fe64ad353471d5a263915863d354fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor () {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n\r\ncontract Marketplace is Ownable, Pausable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    event Buy(address owner, address buyer, address collection, uint256 tokenId,  uint256 price);\r\n    event BuyWithERC20(address owner, address buyer, address collection, uint256 tokenId, address erc20, uint256 price);\r\n    event PutUpForSale(address owner, address collection, uint256 tokenId, uint256 price);\r\n    event PutUpForSaleWithERC20(address owner, address collection, uint256 tokenId, address erc20, uint256 price);\r\n    event WithdrawFromSale(address owner, address collection, uint256 tokenId);\r\n    event WithdrawWei(address to, uint256 amount);\r\n    event WithdrawERC20(address to, address erc20, uint256 amount);\r\n    \r\n    struct SelledNFT {\r\n        address collection; // NFT коллекция\r\n        uint256 tokenId;    // ID токена\r\n        address seller;     // Продавец\r\n        uint256 price;      // Цена (wei)\r\n        address erc20;      // Если указано - продается за токены\r\n        uint256 utx;        // Время истечения лота (0 - бессрочный)\r\n    }\r\n\r\n    uint constant public version = 1;\r\n\r\n    uint private _tradeFee = 0;\r\n\r\n    function isMarketPlaceContract() public pure returns (bool) {\r\n        return true;\r\n    }\r\n\r\n    IERC721[] private _marketCollections;\r\n    mapping(address => bool) private _allowedCollections;\r\n\r\n    address[] private _allowedERC20;\r\n\r\n    SelledNFT[] private _marketTokens;\r\n\r\n    mapping(address => uint256) private _collectionTokensCount;\r\n\r\n    mapping(address => uint256) private _userTokensCount;\r\n\r\n    mapping(address => mapping(address => uint256)) private _userTokensCountByCollections;\r\n\r\n    address private _feeReceiver;\r\n\r\n    function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {\r\n        for(uint256 i = 0; i < _marketTokens.length; i++) {\r\n            if (\r\n                (_marketTokens[i].collection == collection)\r\n                &&\r\n                (_marketTokens[i].tokenId == tokenId)\r\n            ) {\r\n                return _marketTokens[i];\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function getColletionTokensCount(address collection) public view returns (uint256) {\r\n        return _collectionTokensCount[collection];\r\n    }\r\n    function getUserCollectionTokensCount(address user, address collection) public view returns(uint256) {\r\n        return _userTokensCountByCollections[user][collection];\r\n    }\r\n    \r\n    struct CollectionTokenCount {\r\n        address collection;\r\n        uint256 count;\r\n    }\r\n    function getCollectionsTokensCount() public view returns (CollectionTokenCount[] memory ret) {\r\n        ret = new CollectionTokenCount[](_marketCollections.length);\r\n        for(uint256 i = 0; i < _marketCollections.length; i++) {\r\n            ret[i] = CollectionTokenCount(\r\n                address(_marketCollections[i]),\r\n                _collectionTokensCount[address(_marketCollections[i])]\r\n            );\r\n        }\r\n        return ret;\r\n    }\r\n    function getUserCollectionsTokenCount(address user) public view returns(CollectionTokenCount[] memory ret) {\r\n        ret = new CollectionTokenCount[](_marketCollections.length);\r\n        for(uint256 i = 0; i < _marketCollections.length; i++) {\r\n            ret[i] = CollectionTokenCount(\r\n                address(_marketCollections[i]),\r\n                _userTokensCountByCollections[user][address(_marketCollections[i])]\r\n            );\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function _marketTokensAdd(SelledNFT memory lotInfo) internal {\r\n        _marketTokens.push(lotInfo);\r\n        _collectionTokensCount[lotInfo.collection]++;\r\n        _userTokensCount[lotInfo.seller]++;\r\n        _userTokensCountByCollections[lotInfo.seller][lotInfo.collection]++;\r\n    }\r\n    function _marketTokensDel(address collection, uint256 tokenId) internal {\r\n        if (\r\n            (_marketTokens[_marketTokens.length - 1].collection == collection)\r\n            &&\r\n            (_marketTokens[_marketTokens.length - 1].tokenId == tokenId)\r\n        ) {\r\n            _userTokensCount[_marketTokens[_marketTokens.length -1].seller]--;\r\n            _userTokensCountByCollections[_marketTokens[_marketTokens.length -1].seller][collection]--;\r\n            _collectionTokensCount[collection]--;\r\n            _marketTokens.pop();\r\n        }\r\n        for(uint256 i = 0; i < _marketTokens.length; i++) {\r\n            if (\r\n                (_marketTokens[i].collection == collection)\r\n                &&\r\n                (_marketTokens[i].tokenId == tokenId)\r\n            ) {\r\n                _userTokensCount[_marketTokens[i].seller]--;\r\n                _userTokensCountByCollections[_marketTokens[i].seller][collection]--;\r\n                _collectionTokensCount[collection]--;\r\n                _marketTokens[i] = _marketTokens[_marketTokens.length -1];\r\n                _marketTokens.pop();\r\n                \r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    constructor(\r\n        address[] memory __collections,\r\n        address __feeReceiver,\r\n        uint __tradeFee,\r\n        address[] memory __allowedERC20\r\n    ) {\r\n        for(uint i = 0; i < __collections.length; i++) {\r\n            _allowedCollections[__collections[i]] = true;\r\n            _marketCollections.push(IERC721(__collections[i]));\r\n        }\r\n        _feeReceiver = (__feeReceiver == address(0)) ? msg.sender : __feeReceiver;\r\n        _tradeFee = __tradeFee;\r\n        _allowedERC20 = __allowedERC20;\r\n    }\r\n\r\n    function getFeeReceiver() public view returns(address) {\r\n        return _feeReceiver;\r\n    }\r\n    function setFeeReceiver(address _newFeeReceiver) public onlyOwner {\r\n        _feeReceiver = _newFeeReceiver;\r\n    }\r\n\r\n    function getAllowedCollections() public view returns(IERC721[] memory) {\r\n        return _marketCollections;\r\n    }\r\n    function setAllowedCollections(address[] memory _newCollections) public onlyOwner {\r\n        for(uint256 i = 0; i < _marketCollections.length; i++) {\r\n            _allowedCollections[address(_marketCollections[i])] = false;\r\n        }\r\n        delete _marketCollections;\r\n        for(uint256 i = 0; i < _newCollections.length; i++) {\r\n            _marketCollections.push(IERC721(_newCollections[i]));\r\n            _allowedCollections[_newCollections[i]] = true;\r\n        }\r\n    }\r\n\r\n\r\n    function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {\r\n        _allowedERC20 = newAllowedERC20;\r\n    }\r\n    \r\n    function getAllowedERC20() public view returns(address[] memory) {\r\n        return _allowedERC20;\r\n    }\r\n\r\n    function isAllowedERC20(address erc20) public view returns (bool) {\r\n        for(uint i=0; i<_allowedERC20.length;i++) {\r\n            if (erc20 == _allowedERC20[i]) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function withdrawWei() public onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        payable(msg.sender).transfer(amount);\r\n        emit WithdrawWei(msg.sender, amount);\r\n    }\r\n\r\n    function withdrawERC20(address erc20) public onlyOwner {\r\n        IERC20 token = IERC20(erc20);\r\n        uint256 balance = token.balanceOf(address(this));\r\n        token.transfer(owner(), balance);\r\n        emit WithdrawERC20(msg.sender, erc20, balance);\r\n    }\r\n\r\n    function getTradeFee() public view returns (uint) {\r\n        return _tradeFee;\r\n    }\r\n    function setTradeFee(uint _newTradeFee) public onlyOwner {\r\n        _tradeFee = _newTradeFee;\r\n    }\r\n\r\n    function getMyTokensAtSale(uint256 offset, uint256 limit) public view returns(SelledNFT[] memory) {\r\n        return getUserTokensAtSale(msg.sender, offset, limit);\r\n    }\r\n    function getUserTokensAtSale(address seller, uint256 offset, uint256 limit)\r\n        public view\r\n        returns (SelledNFT[] memory ret)\r\n    {\r\n        if (_userTokensCount[seller] > 0) {\r\n            ret = new SelledNFT[](_userTokensCount[seller]);\r\n            uint256 counter = 0;\r\n            for (uint256 i = 0; i < _marketTokens.length; i++) {\r\n                if (_marketTokens[i].seller == seller) {\r\n                    ret[counter] = _marketTokens[i];\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function getTokensAtSaleCount() public view returns (uint256) {\r\n        return _marketTokens.length;\r\n    }\r\n    function getTokensAtSale(uint256 limit, uint256 offset) public view returns (SelledNFT[] memory) {\r\n        return _marketTokens;\r\n    }\r\n    function getCollectionTokensAtSale(address collection, uint256 offset, uint256 limit) public view returns (SelledNFT[] memory ret) {\r\n        if (_collectionTokensCount[collection] > 0) {\r\n            ret = new SelledNFT[](_collectionTokensCount[collection]);\r\n            uint256 counter = 0;\r\n            for (uint256 i = 0; i < _marketTokens.length; i++) {\r\n                if (_marketTokens[i].collection == collection) {\r\n                    ret[counter] = _marketTokens[i];\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function buyNFTbyERC20(address collection, uint tokenId)\r\n        public\r\n        whenNotPaused\r\n    {\r\n        SelledNFT memory lotInfo = marketTokensGet(collection, tokenId);\r\n        require(lotInfo.collection != address(0), \"This NFT is not for sale\");\r\n        require(lotInfo.erc20 != address(0), \"This token selled by Native coin\");\r\n\r\n        IERC20 payToken = IERC20(lotInfo.erc20);\r\n        uint256 buyerBalance = payToken.balanceOf(msg.sender);\r\n        require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\");\r\n        uint256 buyerAllowance = payToken.allowance(msg.sender, address(this));\r\n        require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\");\r\n        \r\n\r\n        uint256 amount = lotInfo.price;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (lotInfo.seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payToken.safeTransferFrom(\r\n            address(msg.sender),\r\n            address(lotInfo.seller),\r\n            amountWithFee\r\n        );\r\n        if (feeAmount > 0) {\r\n            payToken.safeTransferFrom(\r\n                address(msg.sender),\r\n                address(_feeReceiver),\r\n                feeAmount\r\n            );\r\n        }\r\n        IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId);\r\n        _marketTokensDel(collection, tokenId);\r\n\r\n        emit BuyWithERC20(\r\n            lotInfo.seller, \r\n            msg.sender, \r\n            lotInfo.collection,\r\n            lotInfo.tokenId,\r\n            lotInfo.erc20,\r\n            lotInfo.price\r\n        );\r\n    }\r\n\r\n\r\n    function buyNFT(address collection, uint256 tokenId)\r\n        public\r\n        payable\r\n        whenNotPaused\r\n    {\r\n        SelledNFT memory lotInfo = marketTokensGet(collection, tokenId);\r\n        require( lotInfo.collection != address(0), \"This NFT is not for sale\");\r\n        // check - price\r\n        require(msg.value >= lotInfo.price, \"You have not paid enough for this item\");\r\n        // check this is not sell by ERC20\r\n        require(lotInfo.erc20 == address(0), \"This token selled by ERC20\");\r\n        \r\n        uint256 amount = msg.value;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (lotInfo.seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payable(lotInfo.seller).transfer(amountWithFee);\r\n        if (feeAmount > 0) {\r\n            payable(_feeReceiver).transfer(feeAmount);\r\n        }\r\n        \r\n        IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId);\r\n        _marketTokensDel(collection, tokenId);\r\n\r\n        emit Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price);\r\n        \r\n    }\r\n\r\n    function sellNFT(\r\n        address collection,\r\n        uint256 _tokenId,\r\n        uint256 price,\r\n        address _erc20\r\n    )\r\n        public\r\n        whenNotPaused\r\n    {\r\n        // Check collection allowed\r\n        require(\r\n            _allowedCollections[collection],\r\n            \"Not allowed NFT collection\"\r\n        );\r\n        // Check owner\r\n        require(\r\n            IERC721(collection).ownerOf(_tokenId) == msg.sender,\r\n            \"You don't own this token!\"\r\n        );\r\n        require(price > 0, \"Price must be greater than zero\");\r\n        if (_erc20 != address(0)) {\r\n            // Sell with ERC20\r\n            require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\");\r\n        }\r\n\r\n        SelledNFT memory newLot = SelledNFT(\r\n            collection,\r\n            _tokenId,\r\n            msg.sender,\r\n            price,\r\n            _erc20,\r\n            block.timestamp\r\n        );\r\n        IERC721(collection).transferFrom(msg.sender, address(this), _tokenId);\r\n        _marketTokensAdd(newLot);\r\n\r\n        if (_erc20 == address(0)) {\r\n            emit PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price);\r\n        } else {\r\n            emit PutUpForSale(msg.sender, collection, _tokenId, price);\r\n        }\r\n    }\r\n\r\n    function deSellNFT(address collection, uint256 tokenId) public {\r\n        SelledNFT memory token = marketTokensGet(collection, tokenId);\r\n        require( token.collection != address(0), \"Token not founded at marketplace\");\r\n        if(msg.sender != owner()) {\r\n            require(msg.sender == token.seller, \"This is not your NFT\");\r\n        }\r\n        IERC721(token.collection).transferFrom(address(this), token.seller, token.tokenId);\r\n        _marketTokensDel(token.collection,token.tokenId);\r\n\r\n        emit WithdrawFromSale(token.seller, token.collection, token.tokenId);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"source/Marketplace.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a558a56de03b0e11f77cd712f1e92e32dfefeeedf98f61eb224057132f50308864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a558a56de03b0e11f77cd712f1e92e32dfefeeedf98f61eb224057132f50308864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PC 0xA5 PUSH14 0xE03B0E11F77CD712F1E92E32DFEF 0xEE 0xED 0xF9 DUP16 PUSH2 0xEB22 BLOCKHASH JUMPI SGT 0x2F POP ADDRESS DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;38807:9405:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a558a56de03b0e11f77cd712f1e92e32dfefeeedf98f61eb224057132f50308864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PC 0xA5 PUSH14 0xE03B0E11F77CD712F1E92E32DFEF 0xEE 0xED 0xF9 DUP16 PUSH2 0xEB22 BLOCKHASH JUMPI SGT 0x2F POP ADDRESS DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a558a56de03b0e11f77cd712f1e92e32dfefeeedf98f61eb224057132f50308864736f6c63430008120033",
									".code": [
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "__collections",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "__feeReceiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "__tradeFee",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "__allowedERC20",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "BuyWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSaleWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "WithdrawFromSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawWei",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFTbyERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "deSellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllowedCollections",
							"outputs": [
								{
									"internalType": "contract IERC721[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllowedERC20",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "getCollectionTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCollectionsTokensCount",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "count",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.CollectionTokenCount[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "getColletionTokensCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "getMyTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								}
							],
							"name": "getTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokensAtSaleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTradeFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "getUserCollectionTokensCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserCollectionsTokenCount",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "count",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.CollectionTokenCount[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "getUserTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "isAllowedERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isMarketPlaceContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "marketTokensGet",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT",
									"name": "ret",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20",
									"type": "address"
								}
							],
							"name": "sellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_newCollections",
									"type": "address[]"
								}
							],
							"name": "setAllowedCollections",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "newAllowedERC20",
									"type": "address[]"
								}
							],
							"name": "setAllowedERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newFeeReceiver",
									"type": "address"
								}
							],
							"name": "setFeeReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTradeFee",
									"type": "uint256"
								}
							],
							"name": "setTradeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawWei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":50386:64396  contract Marketplace is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"source/Marketplace.sol\":51629:51630  0 */\n  0x00\n    /* \"source/Marketplace.sol\":51604:51630  uint private _tradeFee = 0 */\n  0x01\n  sstore\n    /* \"source/Marketplace.sol\":55479:55998  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"source/Marketplace.sol\":736:746  msg.sender */\n  caller\n    /* \"source/Marketplace.sol\":1740:1758  _transferOwnership */\n  tag_11\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"source/Marketplace.sol\":49087:49092  false */\n  0x00\n    /* \"source/Marketplace.sol\":49077:49092  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n    /* \"source/Marketplace.sol\":55650:55833  for(uint i = 0; i < __collections.length; i++) {... */\ntag_14:\n    /* \"source/Marketplace.sol\":55670:55683  __collections */\n  dup5\n    /* \"source/Marketplace.sol\":55670:55690  __collections.length */\n  mload\n    /* \"source/Marketplace.sol\":55666:55667  i */\n  dup2\n    /* \"source/Marketplace.sol\":55666:55690  i < __collections.length */\n  lt\n    /* \"source/Marketplace.sol\":55650:55833  for(uint i = 0; i < __collections.length; i++) {... */\n  iszero\n  tag_15\n  jumpi\n    /* \"source/Marketplace.sol\":55752:55756  true */\n  0x01\n    /* \"source/Marketplace.sol\":55712:55731  _allowedCollections */\n  0x03\n    /* \"source/Marketplace.sol\":55712:55749  _allowedCollections[__collections[i]] */\n  0x00\n    /* \"source/Marketplace.sol\":55732:55745  __collections */\n  dup8\n    /* \"source/Marketplace.sol\":55746:55747  i */\n  dup5\n    /* \"source/Marketplace.sol\":55732:55748  __collections[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_18\n  jumpi\n  tag_18\n  tag_19\n  jump\t// in\ntag_18:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":55712:55749  _allowedCollections[__collections[i]] */\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"source/Marketplace.sol\":55712:55756  _allowedCollections[__collections[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"source/Marketplace.sol\":55771:55789  _marketCollections */\n  0x02\n    /* \"source/Marketplace.sol\":55803:55816  __collections */\n  dup6\n    /* \"source/Marketplace.sol\":55817:55818  i */\n  dup3\n    /* \"source/Marketplace.sol\":55803:55819  __collections[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_21\n  jumpi\n  tag_21\n  tag_19\n  jump\t// in\ntag_21:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"source/Marketplace.sol\":55771:55821  _marketCollections.push(IERC721(__collections[i])) */\n  dup3\n  sload\n  0x01\n  dup2\n  add\n  dup5\n  sstore\n  0x00\n  swap4\n  dup5\n  mstore\n  swap2\n  swap1\n  swap3\n  keccak256\n  add\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":55692:55695  i++ */\n  dup1\n  tag_23\n  dup2\n  tag_24\n  jump\t// in\ntag_23:\n  swap2\n  pop\n  pop\n    /* \"source/Marketplace.sol\":55650:55833  for(uint i = 0; i < __collections.length; i++) {... */\n  jump(tag_14)\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":55859:55886  __feeReceiver == address(0) */\n  dup4\n  and\n  iszero\n    /* \"source/Marketplace.sol\":55858:55916  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  tag_25\n  jumpi\n    /* \"source/Marketplace.sol\":55903:55916  __feeReceiver */\n  dup3\n    /* \"source/Marketplace.sol\":55858:55916  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  jump(tag_26)\ntag_25:\n    /* \"source/Marketplace.sol\":55890:55900  msg.sender */\n  caller\n    /* \"source/Marketplace.sol\":55858:55916  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\ntag_26:\n    /* \"source/Marketplace.sol\":55843:55855  _feeReceiver */\n  0x09\n    /* \"source/Marketplace.sol\":55843:55916  _feeReceiver = (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x01\n    /* \"source/Marketplace.sol\":55927:55949  _tradeFee = __tradeFee */\n  dup3\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":55960:55990  _allowedERC20 = __allowedERC20 */\n  dup1\n  mload\n  tag_27\n  swap1\n    /* \"source/Marketplace.sol\":55960:55973  _allowedERC20 */\n  0x04\n  swap1\n    /* \"source/Marketplace.sol\":55960:55990  _allowedERC20 = __allowedERC20 */\n  0x20\n  dup5\n  add\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n    /* \"source/Marketplace.sol\":55479:55998  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"source/Marketplace.sol\":50386:64396  contract Marketplace is Ownable, Pausable {... */\n  jump(tag_42)\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  0x00\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  swap1\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"source/Marketplace.sol\":3349:3477  {... */\n  pop\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"source/Marketplace.sol\":50386:64396  contract Marketplace is Ownable, Pausable {... */\ntag_28:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_34\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_33:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_34\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_33)\ntag_34:\n  pop\n  tag_35\n  swap3\n  swap2\n  pop\n  tag_36\n  jump\t// in\ntag_35:\n  pop\n  swap1\n  jump\t// out\ntag_36:\ntag_37:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_35\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_37)\n    /* \"#utility.yul\":14:141   */\ntag_39:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:323   */\ntag_40:\n    /* \"#utility.yul\":225:238   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":267:298   */\n  dup2\n  and\n    /* \"#utility.yul\":257:299   */\n  dup2\n  eq\n    /* \"#utility.yul\":247:317   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":313:314   */\n  0x00\n    /* \"#utility.yul\":310:311   */\n  dup1\n    /* \"#utility.yul\":303:315   */\n  revert\n    /* \"#utility.yul\":247:317   */\ntag_45:\n    /* \"#utility.yul\":146:323   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":328:1251   */\ntag_41:\n    /* \"#utility.yul\":393:398   */\n  0x00\n    /* \"#utility.yul\":446:449   */\n  dup3\n    /* \"#utility.yul\":439:443   */\n  0x1f\n    /* \"#utility.yul\":431:437   */\n  dup4\n    /* \"#utility.yul\":427:444   */\n  add\n    /* \"#utility.yul\":423:450   */\n  slt\n    /* \"#utility.yul\":413:468   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":461:462   */\n  dup1\n    /* \"#utility.yul\":454:466   */\n  revert\n    /* \"#utility.yul\":413:468   */\ntag_47:\n    /* \"#utility.yul\":487:500   */\n  dup2\n  mload\n    /* \"#utility.yul\":519:523   */\n  0x20\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":572:582   */\n  dup1\n  dup4\n  gt\n    /* \"#utility.yul\":569:605   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":585:603   */\n  tag_49\n  tag_39\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":631:633   */\n  dup3\n    /* \"#utility.yul\":628:629   */\n  0x05\n    /* \"#utility.yul\":624:634   */\n  shl\n    /* \"#utility.yul\":663:665   */\n  0x40\n    /* \"#utility.yul\":657:666   */\n  mload\n    /* \"#utility.yul\":726:728   */\n  0x1f\n    /* \"#utility.yul\":722:729   */\n  not\n    /* \"#utility.yul\":717:719   */\n  0x3f\n    /* \"#utility.yul\":713:715   */\n  dup4\n    /* \"#utility.yul\":709:720   */\n  add\n    /* \"#utility.yul\":705:730   */\n  and\n    /* \"#utility.yul\":697:703   */\n  dup2\n    /* \"#utility.yul\":693:731   */\n  add\n    /* \"#utility.yul\":781:787   */\n  dup2\n    /* \"#utility.yul\":769:779   */\n  dup2\n    /* \"#utility.yul\":766:788   */\n  lt\n    /* \"#utility.yul\":761:763   */\n  dup5\n    /* \"#utility.yul\":749:759   */\n  dup3\n    /* \"#utility.yul\":746:764   */\n  gt\n    /* \"#utility.yul\":743:789   */\n  or\n    /* \"#utility.yul\":740:812   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":792:810   */\n  tag_51\n  tag_39\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":828:830   */\n  0x40\n    /* \"#utility.yul\":821:843   */\n  mstore\n    /* \"#utility.yul\":878:896   */\n  swap4\n  dup5\n  mstore\n    /* \"#utility.yul\":954:969   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":950:974   */\n  dup4\n  add\n  swap4\n    /* \"#utility.yul\":912:927   */\n  dup4\n  dup2\n  add\n  swap3\n  pop\n    /* \"#utility.yul\":986:1001   */\n  dup8\n  dup6\n  gt\n    /* \"#utility.yul\":983:1018   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1014:1015   */\n  0x00\n    /* \"#utility.yul\":1011:1012   */\n  dup1\n    /* \"#utility.yul\":1004:1016   */\n  revert\n    /* \"#utility.yul\":983:1018   */\ntag_52:\n    /* \"#utility.yul\":1050:1052   */\n  dup4\n    /* \"#utility.yul\":1042:1048   */\n  dup8\n    /* \"#utility.yul\":1038:1053   */\n  add\n    /* \"#utility.yul\":1027:1053   */\n  swap2\n  pop\n    /* \"#utility.yul\":1062:1221   */\ntag_53:\n    /* \"#utility.yul\":1078:1084   */\n  dup5\n    /* \"#utility.yul\":1073:1076   */\n  dup3\n    /* \"#utility.yul\":1070:1085   */\n  lt\n    /* \"#utility.yul\":1062:1221   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1144:1178   */\n  tag_56\n    /* \"#utility.yul\":1174:1177   */\n  dup3\n    /* \"#utility.yul\":1144:1178   */\n  tag_40\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1132:1179   */\n  dup4\n  mstore\n    /* \"#utility.yul\":1199:1211   */\n  swap2\n  dup4\n  add\n  swap2\n    /* \"#utility.yul\":1095:1107   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"#utility.yul\":1062:1221   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":1239:1245   */\n  swap8\n    /* \"#utility.yul\":328:1251   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1256:2017   */\ntag_3:\n    /* \"#utility.yul\":1403:1409   */\n  0x00\n    /* \"#utility.yul\":1411:1417   */\n  dup1\n    /* \"#utility.yul\":1419:1425   */\n  0x00\n    /* \"#utility.yul\":1427:1433   */\n  dup1\n    /* \"#utility.yul\":1480:1483   */\n  0x80\n    /* \"#utility.yul\":1468:1477   */\n  dup6\n    /* \"#utility.yul\":1459:1466   */\n  dup8\n    /* \"#utility.yul\":1455:1478   */\n  sub\n    /* \"#utility.yul\":1451:1484   */\n  slt\n    /* \"#utility.yul\":1448:1501   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1497:1498   */\n  0x00\n    /* \"#utility.yul\":1494:1495   */\n  dup1\n    /* \"#utility.yul\":1487:1499   */\n  revert\n    /* \"#utility.yul\":1448:1501   */\ntag_58:\n    /* \"#utility.yul\":1524:1540   */\n  dup5\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1589:1603   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1586:1620   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1616:1617   */\n  0x00\n    /* \"#utility.yul\":1613:1614   */\n  dup1\n    /* \"#utility.yul\":1606:1618   */\n  revert\n    /* \"#utility.yul\":1586:1620   */\ntag_59:\n    /* \"#utility.yul\":1639:1711   */\n  tag_60\n    /* \"#utility.yul\":1703:1710   */\n  dup9\n    /* \"#utility.yul\":1694:1700   */\n  dup4\n    /* \"#utility.yul\":1683:1692   */\n  dup10\n    /* \"#utility.yul\":1679:1701   */\n  add\n    /* \"#utility.yul\":1639:1711   */\n  tag_41\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1629:1711   */\n  swap6\n  pop\n    /* \"#utility.yul\":1730:1779   */\n  tag_61\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1764:1773   */\n  dup9\n    /* \"#utility.yul\":1760:1778   */\n  add\n    /* \"#utility.yul\":1730:1779   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1720:1779   */\n  swap5\n  pop\n    /* \"#utility.yul\":1819:1821   */\n  0x40\n    /* \"#utility.yul\":1808:1817   */\n  dup8\n    /* \"#utility.yul\":1804:1822   */\n  add\n    /* \"#utility.yul\":1798:1823   */\n  mload\n    /* \"#utility.yul\":1788:1823   */\n  swap4\n  pop\n    /* \"#utility.yul\":1869:1871   */\n  0x60\n    /* \"#utility.yul\":1858:1867   */\n  dup8\n    /* \"#utility.yul\":1854:1872   */\n  add\n    /* \"#utility.yul\":1848:1873   */\n  mload\n    /* \"#utility.yul\":1832:1873   */\n  swap2\n  pop\n    /* \"#utility.yul\":1898:1900   */\n  dup1\n    /* \"#utility.yul\":1888:1896   */\n  dup3\n    /* \"#utility.yul\":1885:1901   */\n  gt\n    /* \"#utility.yul\":1882:1918   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1911:1912   */\n  dup1\n    /* \"#utility.yul\":1904:1916   */\n  revert\n    /* \"#utility.yul\":1882:1918   */\ntag_62:\n  pop\n    /* \"#utility.yul\":1937:2011   */\n  tag_63\n    /* \"#utility.yul\":2003:2010   */\n  dup8\n    /* \"#utility.yul\":1992:2000   */\n  dup3\n    /* \"#utility.yul\":1981:1990   */\n  dup9\n    /* \"#utility.yul\":1977:2001   */\n  add\n    /* \"#utility.yul\":1937:2011   */\n  tag_41\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1927:2011   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1256:2017   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2022:2149   */\ntag_19:\n    /* \"#utility.yul\":2083:2093   */\n  0x4e487b71\n    /* \"#utility.yul\":2078:2081   */\n  0xe0\n    /* \"#utility.yul\":2074:2094   */\n  shl\n    /* \"#utility.yul\":2071:2072   */\n  0x00\n    /* \"#utility.yul\":2064:2095   */\n  mstore\n    /* \"#utility.yul\":2114:2118   */\n  0x32\n    /* \"#utility.yul\":2111:2112   */\n  0x04\n    /* \"#utility.yul\":2104:2119   */\n  mstore\n    /* \"#utility.yul\":2138:2142   */\n  0x24\n    /* \"#utility.yul\":2135:2136   */\n  0x00\n    /* \"#utility.yul\":2128:2143   */\n  revert\n    /* \"#utility.yul\":2154:2386   */\ntag_24:\n    /* \"#utility.yul\":2193:2196   */\n  0x00\n    /* \"#utility.yul\":2214:2231   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":2211:2351   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2273:2283   */\n  0x4e487b71\n    /* \"#utility.yul\":2268:2271   */\n  0xe0\n    /* \"#utility.yul\":2264:2284   */\n  shl\n    /* \"#utility.yul\":2261:2262   */\n  0x00\n    /* \"#utility.yul\":2254:2285   */\n  mstore\n    /* \"#utility.yul\":2308:2312   */\n  0x11\n    /* \"#utility.yul\":2305:2306   */\n  0x04\n    /* \"#utility.yul\":2298:2313   */\n  mstore\n    /* \"#utility.yul\":2336:2340   */\n  0x24\n    /* \"#utility.yul\":2333:2334   */\n  0x00\n    /* \"#utility.yul\":2326:2341   */\n  revert\n    /* \"#utility.yul\":2211:2351   */\ntag_66:\n  pop\n    /* \"#utility.yul\":2378:2379   */\n  0x01\n    /* \"#utility.yul\":2367:2380   */\n  add\n  swap1\n    /* \"#utility.yul\":2154:2386   */\n  jump\t// out\ntag_42:\n    /* \"source/Marketplace.sol\":50386:64396  contract Marketplace is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":50386:64396  contract Marketplace is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x785fa7ce\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc8f77899\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe9e4e160\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe9e4e160\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xefdcd974\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf4f3b200\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xc8f77899\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcb4ca919\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xda24548a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe8a35392\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xa7c9197a\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa7c9197a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa82ba76f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb7b7b8ff\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc8d8101c\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x785fa7ce\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x952977f5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x98f748bd\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x527f2902\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x5c975abb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6629e913\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x69c57352\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x527f2902\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5b4e7add\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5b87f0f2\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x2ca38df5\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x2ca38df5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a51f383\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3eac63ed\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5211ac2e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x10603023\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x27713536\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b205d14\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"source/Marketplace.sol\":57873:57973  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"source/Marketplace.sol\":56349:56828  function setAllowedCollections(address[] memory _newCollections) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_41\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"source/Marketplace.sol\":59582:61308  function buyNFTbyERC20(address collection, uint tokenId)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_41\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"source/Marketplace.sol\":58157:58726  function getUserTokensAtSale(address seller, uint256 offset, uint256 limit)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/Marketplace.sol\":56228:56343  function getAllowedCollections() public view returns(IERC721[] memory) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"source/Marketplace.sol\":53510:53987  function getUserCollectionsTokenCount(address user) public view returns(CollectionTokenCount[] memory ret) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n        /* \"source/Marketplace.sol\":57314:57505  function withdrawWei() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_41\n      tag_76\n      jump\t// in\n        /* \"source/Marketplace.sol\":51639:51729  function isMarketPlaceContract() public pure returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n        /* \"source/Marketplace.sol\":51717:51721  true */\n      0x01\n        /* \"source/Marketplace.sol\":51639:51729  function isMarketPlaceContract() public pure returns (bool) {... */\n    tag_78:\n      mload(0x40)\n        /* \"#utility.yul\":5746:5760   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5739:5761   */\n      iszero\n        /* \"#utility.yul\":5721:5762   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5709:5711   */\n      0x20\n        /* \"#utility.yul\":5694:5712   */\n      add\n        /* \"source/Marketplace.sol\":51639:51729  function isMarketPlaceContract() public pure returns (bool) {... */\n      tag_60\n        /* \"#utility.yul\":5581:5768   */\n      jump\n        /* \"source/Marketplace.sol\":51563:51595  uint constant public version = 1 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n        /* \"source/Marketplace.sol\":51594:51595  1 */\n      0x01\n        /* \"source/Marketplace.sol\":51563:51595  uint constant public version = 1 */\n      dup2\n      jump\n    tag_83:\n      mload(0x40)\n        /* \"#utility.yul\":5919:5944   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5907:5909   */\n      0x20\n        /* \"#utility.yul\":5892:5910   */\n      add\n        /* \"source/Marketplace.sol\":51563:51595  uint constant public version = 1 */\n      tag_60\n        /* \"#utility.yul\":5773:5950   */\n      jump\n        /* \"source/Marketplace.sol\":52624:52767  function getColletionTokensCount(address collection) public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_83\n      tag_89\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_89:\n        /* \"source/Marketplace.sol\":52725:52759  _collectionTokensCount[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":52698:52705  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":52725:52759  _collectionTokensCount[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":52725:52747  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":52725:52759  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"source/Marketplace.sol\":52624:52767  function getColletionTokensCount(address collection) public view returns (uint256) {... */\n      jump\n        /* \"source/Marketplace.sol\":58848:58984  function getTokensAtSale(uint256 limit, uint256 offset) public view returns (SelledNFT[] memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_56\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"source/Marketplace.sol\":49200:49286  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49200:49286  function paused() public view virtual returns (bool) {... */\n      jump(tag_78)\n        /* \"source/Marketplace.sol\":52182:52616  function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n        /* \"source/Marketplace.sol\":56976:57080  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_63\n      tag_110\n      jump\t// in\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_41\n      tag_115\n      jump\t// in\n        /* \"source/Marketplace.sol\":57088:57306  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_78\n      tag_118\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n    tag_122:\n      mload(0x40)\n        /* \"#utility.yul\":7328:7370   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7316:7371   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7298:7372   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7286:7288   */\n      0x20\n        /* \"#utility.yul\":7271:7289   */\n      add\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      tag_60\n        /* \"#utility.yul\":7152:7378   */\n      jump\n        /* \"source/Marketplace.sol\":57782:57867  function getTradeFee() public view returns (uint) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n        /* \"source/Marketplace.sol\":57850:57859  _tradeFee */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":57782:57867  function getTradeFee() public view returns (uint) {... */\n      jump(tag_83)\n        /* \"source/Marketplace.sol\":62508:63800  function sellNFT(... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_41\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"source/Marketplace.sol\":53054:53504  function getCollectionsTokensCount() public view returns (CollectionTokenCount[] memory ret) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_68\n      tag_137\n      jump\t// in\n        /* \"source/Marketplace.sol\":61318:62500  function buyNFT(address collection, uint256 tokenId)... */\n    tag_22:\n      tag_41\n      tag_140\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"source/Marketplace.sol\":58990:59574  function getCollectionTokensAtSale(address collection, uint256 offset, uint256 limit) public view returns (SelledNFT[] memory ret) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_56\n      tag_144\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n        /* \"source/Marketplace.sol\":52773:52947  function getUserCollectionTokensCount(address user, address collection) public view returns(uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_83\n      tag_149\n      calldatasize\n      0x04\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"source/Marketplace.sol\":52892:52927  _userTokensCountByCollections[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"source/Marketplace.sol\":52865:52872  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":52892:52927  _userTokensCountByCollections[user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":52892:52921  _userTokensCountByCollections */\n      0x08\n        /* \"source/Marketplace.sol\":52892:52927  _userTokensCountByCollections[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":52892:52939  _userTokensCountByCollections[user][collection] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"source/Marketplace.sol\":52773:52947  function getUserCollectionTokensCount(address user, address collection) public view returns(uint256) {... */\n      jump\n        /* \"source/Marketplace.sol\":58734:58842  function getTokensAtSaleCount() public view returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n        /* \"source/Marketplace.sol\":58814:58827  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":58814:58834  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":58734:58842  function getTokensAtSaleCount() public view returns (uint256) {... */\n      jump(tag_83)\n        /* \"source/Marketplace.sol\":57981:58151  function getMyTokensAtSale(uint256 offset, uint256 limit) public view returns(SelledNFT[] memory) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_56\n      tag_159\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"source/Marketplace.sol\":63808:64393  function deSellNFT(address collection, uint256 tokenId) public {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_41\n      tag_164\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"source/Marketplace.sol\":56006:56099  function getFeeReceiver() public view returns(address) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n        /* \"source/Marketplace.sol\":56079:56091  _feeReceiver */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x09))\n        /* \"source/Marketplace.sol\":56006:56099  function getFeeReceiver() public view returns(address) {... */\n      jump(tag_122)\n        /* \"source/Marketplace.sol\":56838:56964  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_41\n      tag_172\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n        /* \"source/Marketplace.sol\":56105:56220  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_41\n      tag_176\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_41\n      tag_180\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"source/Marketplace.sol\":57513:57774  function withdrawERC20(address erc20) public onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_41\n      tag_184\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n        /* \"source/Marketplace.sol\":57873:57973  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_44:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_187\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"source/Marketplace.sol\":57941:57950  _tradeFee */\n      0x01\n        /* \"source/Marketplace.sol\":57941:57965  _tradeFee = _newTradeFee */\n      sstore\n        /* \"source/Marketplace.sol\":57873:57973  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":56349:56828  function setAllowedCollections(address[] memory _newCollections) public onlyOwner {... */\n    tag_49:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_191\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"source/Marketplace.sol\":56446:56455  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":56442:56583  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n    tag_193:\n        /* \"source/Marketplace.sol\":56465:56483  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":56465:56490  _marketCollections.length */\n      sload\n        /* \"source/Marketplace.sol\":56461:56490  i < _marketCollections.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":56442:56583  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"source/Marketplace.sol\":56566:56571  false */\n      0x00\n        /* \"source/Marketplace.sol\":56512:56531  _allowedCollections */\n      0x03\n        /* \"source/Marketplace.sol\":56512:56563  _allowedCollections[address(_marketCollections[i])] */\n      0x00\n        /* \"source/Marketplace.sol\":56540:56558  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":56559:56560  i */\n      dup5\n        /* \"source/Marketplace.sol\":56540:56561  _marketCollections[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_197\n      tag_198\n      jump\t// in\n    tag_197:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":56512:56563  _allowedCollections[address(_marketCollections[i])] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56512:56571  _allowedCollections[address(_marketCollections[i])] = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":56492:56495  i++ */\n      dup1\n      tag_200\n      dup2\n      tag_201\n      jump\t// in\n    tag_200:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56442:56583  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      jump(tag_193)\n    tag_194:\n      pop\n        /* \"source/Marketplace.sol\":56593:56618  delete _marketCollections */\n      tag_202\n        /* \"source/Marketplace.sol\":56600:56618  _marketCollections */\n      0x02\n      0x00\n        /* \"source/Marketplace.sol\":56593:56618  delete _marketCollections */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"source/Marketplace.sol\":56633:56642  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":56629:56821  for(uint256 i = 0; i < _newCollections.length; i++) {... */\n    tag_204:\n        /* \"source/Marketplace.sol\":56652:56667  _newCollections */\n      dup2\n        /* \"source/Marketplace.sol\":56652:56674  _newCollections.length */\n      mload\n        /* \"source/Marketplace.sol\":56648:56649  i */\n      dup2\n        /* \"source/Marketplace.sol\":56648:56674  i < _newCollections.length */\n      lt\n        /* \"source/Marketplace.sol\":56629:56821  for(uint256 i = 0; i < _newCollections.length; i++) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"source/Marketplace.sol\":56696:56714  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":56728:56743  _newCollections */\n      dup3\n        /* \"source/Marketplace.sol\":56744:56745  i */\n      dup3\n        /* \"source/Marketplace.sol\":56728:56746  _newCollections[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_208\n      tag_198\n      jump\t// in\n    tag_208:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":56696:56748  _marketCollections.push(IERC721(_newCollections[i])) */\n      dup3\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup6\n      sstore\n      0x00\n      swap5\n      dup6\n      mstore\n      swap3\n      dup5\n      keccak256\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":56783:56801  _newCollections[i] */\n      dup4\n      mload\n        /* \"source/Marketplace.sol\":56696:56748  _marketCollections.push(IERC721(_newCollections[i])) */\n      swap1\n      swap2\n        /* \"source/Marketplace.sol\":56763:56782  _allowedCollections */\n      0x03\n      swap2\n        /* \"source/Marketplace.sol\":56783:56801  _newCollections[i] */\n      dup6\n      swap1\n        /* \"source/Marketplace.sol\":56799:56800  i */\n      dup6\n      swap1\n        /* \"source/Marketplace.sol\":56783:56801  _newCollections[i] */\n      dup2\n      lt\n      tag_211\n      jumpi\n      tag_211\n      tag_198\n      jump\t// in\n    tag_211:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":56763:56802  _allowedCollections[_newCollections[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"source/Marketplace.sol\":56763:56809  _allowedCollections[_newCollections[i]] = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":56676:56679  i++ */\n      dup1\n      tag_212\n      dup2\n      tag_201\n      jump\t// in\n    tag_212:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56629:56821  for(uint256 i = 0; i < _newCollections.length; i++) {... */\n      jump(tag_204)\n    tag_205:\n      pop\n        /* \"source/Marketplace.sol\":56349:56828  function setAllowedCollections(address[] memory _newCollections) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":59582:61308  function buyNFTbyERC20(address collection, uint tokenId)... */\n    tag_54:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9086:9088   */\n      0x20\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9068:9089   */\n      mstore\n        /* \"#utility.yul\":9125:9127   */\n      0x10\n        /* \"#utility.yul\":9105:9123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9098:9128   */\n      mstore\n        /* \"#utility.yul\":9164:9182   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":9144:9162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9137:9183   */\n      mstore\n        /* \"#utility.yul\":9200:9218   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"source/Marketplace.sol\":59694:59718  SelledNFT memory lotInfo */\n      0x00\n        /* \"source/Marketplace.sol\":59721:59757  marketTokensGet(collection, tokenId) */\n      tag_219\n        /* \"source/Marketplace.sol\":59737:59747  collection */\n      dup4\n        /* \"source/Marketplace.sol\":59749:59756  tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":59721:59736  marketTokensGet */\n      tag_105\n        /* \"source/Marketplace.sol\":59721:59757  marketTokensGet(collection, tokenId) */\n      jump\t// in\n    tag_219:\n        /* \"source/Marketplace.sol\":59776:59794  lotInfo.collection */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":59694:59757  SelledNFT memory lotInfo = marketTokensGet(collection, tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":59776:59808  lotInfo.collection != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":59768:59837  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9431:9433   */\n      0x20\n        /* \"source/Marketplace.sol\":59768:59837  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9413:9434   */\n      mstore\n        /* \"#utility.yul\":9470:9472   */\n      0x18\n        /* \"#utility.yul\":9450:9468   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9443:9473   */\n      mstore\n        /* \"#utility.yul\":9509:9535   */\n      0x54686973204e4654206973206e6f7420666f722073616c650000000000000000\n        /* \"#utility.yul\":9489:9507   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9482:9536   */\n      mstore\n        /* \"#utility.yul\":9553:9571   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":59768:59837  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_216\n        /* \"#utility.yul\":9229:9577   */\n      jump\n        /* \"source/Marketplace.sol\":59768:59837  require(lotInfo.collection != address(0), \"This NFT is not for sale\") */\n    tag_220:\n        /* \"source/Marketplace.sol\":59856:59869  lotInfo.erc20 */\n      0x80\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":59856:59883  lotInfo.erc20 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":59848:59920  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9784:9786   */\n      0x20\n        /* \"source/Marketplace.sol\":59848:59920  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9766:9787   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9803:9821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9796:9826   */\n      mstore\n        /* \"#utility.yul\":9862:9896   */\n      0x5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e\n        /* \"#utility.yul\":9842:9860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9835:9897   */\n      mstore\n        /* \"#utility.yul\":9914:9932   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":59848:59920  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n      tag_216\n        /* \"#utility.yul\":9582:9938   */\n      jump\n        /* \"source/Marketplace.sol\":59848:59920  require(lotInfo.erc20 != address(0), \"This token selled by Native coin\") */\n    tag_223:\n        /* \"source/Marketplace.sol\":59958:59971  lotInfo.erc20 */\n      0x80\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":60006:60036  payToken.balanceOf(msg.sender) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60025:60035  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":60006:60036  payToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7298:7372   */\n      mstore\n        /* \"source/Marketplace.sol\":59933:59948  IERC20 payToken */\n      0x00\n      swap1\n        /* \"source/Marketplace.sol\":60006:60024  payToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":7271:7289   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":60006:60036  payToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"source/Marketplace.sol\":59983:60036  uint256 buyerBalance = payToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":60071:60078  lotInfo */\n      dup3\n        /* \"source/Marketplace.sol\":60071:60084  lotInfo.price */\n      0x60\n      add\n      mload\n        /* \"source/Marketplace.sol\":60055:60067  buyerBalance */\n      dup2\n        /* \"source/Marketplace.sol\":60055:60084  buyerBalance >= lotInfo.price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":60047:60141  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10334:10336   */\n      0x20\n        /* \"source/Marketplace.sol\":60047:60141  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10316:10337   */\n      mstore\n        /* \"#utility.yul\":10373:10375   */\n      0x34\n        /* \"#utility.yul\":10353:10371   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10346:10376   */\n      mstore\n        /* \"#utility.yul\":10412:10446   */\n      0x596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e\n        /* \"#utility.yul\":10392:10410   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10385:10447   */\n      mstore\n        /* \"#utility.yul\":10483:10505   */\n      0x20796f75722062616c616e636520746f20706179000000000000000000000000\n        /* \"#utility.yul\":10463:10481   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10456:10506   */\n      mstore\n        /* \"#utility.yul\":10523:10542   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":60047:60141  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n      tag_216\n        /* \"#utility.yul\":10132:10548   */\n      jump\n        /* \"source/Marketplace.sol\":60047:60141  require(buyerBalance >= lotInfo.price, \"You do not have enough tokens on your balance to pay\") */\n    tag_231:\n        /* \"source/Marketplace.sol\":60177:60222  payToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      0xdd62ed3e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60196:60206  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":60177:60222  payToken.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10788:10822   */\n      mstore\n        /* \"source/Marketplace.sol\":60216:60220  this */\n      address\n        /* \"#utility.yul\":10838:10856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10831:10874   */\n      mstore\n        /* \"source/Marketplace.sol\":60152:60174  uint256 buyerAllowance */\n      0x00\n      swap1\n        /* \"source/Marketplace.sol\":60177:60195  payToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":10700:10718   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":60177:60222  payToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_238:\n        /* \"source/Marketplace.sol\":60152:60222  uint256 buyerAllowance = payToken.allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":60259:60266  lotInfo */\n      dup4\n        /* \"source/Marketplace.sol\":60259:60272  lotInfo.price */\n      0x60\n      add\n      mload\n        /* \"source/Marketplace.sol\":60241:60255  buyerAllowance */\n      dup2\n        /* \"source/Marketplace.sol\":60241:60272  buyerAllowance >= lotInfo.price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":60233:60335  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11087:11089   */\n      0x20\n        /* \"source/Marketplace.sol\":60233:60335  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11069:11090   */\n      mstore\n        /* \"#utility.yul\":11126:11128   */\n      0x3a\n        /* \"#utility.yul\":11106:11124   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11099:11129   */\n      mstore\n        /* \"#utility.yul\":11165:11199   */\n      0x596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074\n        /* \"#utility.yul\":11145:11163   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11138:11200   */\n      mstore\n        /* \"#utility.yul\":11236:11264   */\n      0x6f2073656e642074686520707572636861736520616d6f756e74000000000000\n        /* \"#utility.yul\":11216:11234   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11209:11265   */\n      mstore\n        /* \"#utility.yul\":11282:11301   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":60233:60335  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n      tag_216\n        /* \"#utility.yul\":10885:11307   */\n      jump\n        /* \"source/Marketplace.sol\":60233:60335  require(buyerAllowance >= lotInfo.price, \"You did not allow the contract to send the purchase amount\") */\n    tag_239:\n        /* \"source/Marketplace.sol\":60375:60388  lotInfo.price */\n      0x60\n      dup5\n      add\n      mload\n        /* \"source/Marketplace.sol\":60358:60372  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":60419:60469  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_242\n        /* \"source/Marketplace.sol\":60432:60457  SafeMath.div(amount, 100) */\n      tag_243\n        /* \"source/Marketplace.sol\":60375:60388  lotInfo.price */\n      dup4\n        /* \"source/Marketplace.sol\":60453:60456  100 */\n      0x64\n        /* \"source/Marketplace.sol\":60432:60444  SafeMath.div */\n      tag_244\n        /* \"source/Marketplace.sol\":60432:60457  SafeMath.div(amount, 100) */\n      jump\t// in\n    tag_243:\n        /* \"source/Marketplace.sol\":60459:60468  _tradeFee */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":60419:60431  SafeMath.mul */\n      tag_245\n        /* \"source/Marketplace.sol\":60419:60469  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      jump\t// in\n    tag_242:\n        /* \"source/Marketplace.sol\":60399:60469  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":60502:60509  owner() */\n      tag_246\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":60502:60509  owner() */\n    tag_246:\n        /* \"source/Marketplace.sol\":60484:60509  lotInfo.seller == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":60484:60491  lotInfo */\n      dup7\n        /* \"source/Marketplace.sol\":60484:60498  lotInfo.seller */\n      0x40\n      add\n      mload\n        /* \"source/Marketplace.sol\":60484:60509  lotInfo.seller == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"source/Marketplace.sol\":60480:60524  if (lotInfo.seller == owner()) feeAmount = 0 */\n      tag_247\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":60523:60524  0 */\n      0x00\n        /* \"source/Marketplace.sol\":60480:60524  if (lotInfo.seller == owner()) feeAmount = 0 */\n    tag_247:\n        /* \"source/Marketplace.sol\":60535:60556  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":60559:60590  SafeMath.sub(amount, feeAmount) */\n      tag_248\n        /* \"source/Marketplace.sol\":60572:60578  amount */\n      dup4\n        /* \"source/Marketplace.sol\":60580:60589  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":60559:60571  SafeMath.sub */\n      tag_249\n        /* \"source/Marketplace.sol\":60559:60590  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_248:\n        /* \"source/Marketplace.sol\":60685:60699  lotInfo.seller */\n      0x40\n      dup9\n      add\n      mload\n        /* \"source/Marketplace.sol\":60535:60590  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":60603:60739  payToken.safeTransferFrom(... */\n      tag_250\n      swap1\n        /* \"source/Marketplace.sol\":60603:60628  payToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      and\n      swap1\n        /* \"source/Marketplace.sol\":60651:60661  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":60535:60590  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup5\n        /* \"source/Marketplace.sol\":60603:60628  payToken.safeTransferFrom */\n      tag_251\n        /* \"source/Marketplace.sol\":60603:60739  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_250:\n        /* \"source/Marketplace.sol\":60754:60767  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":60750:60942  if (feeAmount > 0) {... */\n      tag_253\n      jumpi\n        /* \"source/Marketplace.sol\":60874:60886  _feeReceiver */\n      sload(0x09)\n        /* \"source/Marketplace.sol\":60784:60930  payToken.safeTransferFrom(... */\n      tag_253\n      swap1\n        /* \"source/Marketplace.sol\":60874:60886  _feeReceiver */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Marketplace.sol\":60784:60809  payToken.safeTransferFrom */\n      dup9\n      dup2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":60836:60846  msg.sender */\n      caller\n      swap2\n        /* \"source/Marketplace.sol\":60874:60886  _feeReceiver */\n      and\n        /* \"source/Marketplace.sol\":60906:60915  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":60784:60809  payToken.safeTransferFrom */\n      tag_251\n        /* \"source/Marketplace.sol\":60784:60930  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_253:\n        /* \"source/Marketplace.sol\":60960:60978  lotInfo.collection */\n      dup7\n      mload\n        /* \"source/Marketplace.sol\":61020:61035  lotInfo.tokenId */\n      0x20\n      dup9\n      add\n      mload\n        /* \"source/Marketplace.sol\":60952:61036  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":61001:61005  this */\n      address\n        /* \"source/Marketplace.sol\":60952:61036  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11575:11609   */\n      mstore\n        /* \"source/Marketplace.sol\":61008:61018  msg.sender */\n      caller\n        /* \"#utility.yul\":11625:11643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11618:11661   */\n      mstore\n        /* \"#utility.yul\":11677:11695   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11670:11704   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"source/Marketplace.sol\":60952:60992  IERC721(lotInfo.collection).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11487:11505   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":60952:61036  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":61047:61084  _marketTokensDel(collection, tokenId) */\n      tag_259\n        /* \"source/Marketplace.sol\":61064:61074  collection */\n      dup10\n        /* \"source/Marketplace.sol\":61076:61083  tokenId */\n      dup10\n        /* \"source/Marketplace.sol\":61047:61063  _marketTokensDel */\n      tag_260\n        /* \"source/Marketplace.sol\":61047:61084  _marketTokensDel(collection, tokenId) */\n      jump\t// in\n    tag_259:\n        /* \"source/Marketplace.sol\":61129:61143  lotInfo.seller */\n      0x40\n      dup8\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":61185:61203  lotInfo.collection */\n      dup9\n      mload\n        /* \"source/Marketplace.sol\":61218:61233  lotInfo.tokenId */\n      0x20\n      dup1\n      dup12\n      add\n      mload\n        /* \"source/Marketplace.sol\":61248:61261  lotInfo.erc20 */\n      0x80\n      dup1\n      dup14\n      add\n      mload\n        /* \"source/Marketplace.sol\":61276:61289  lotInfo.price */\n      0x60\n      dup1\n      dup16\n      add\n      mload\n        /* \"source/Marketplace.sol\":61102:61300  BuyWithERC20(... */\n      dup9\n      mload\n        /* \"#utility.yul\":12012:12054   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12081:12096   */\n      swap9\n      dup10\n      and\n        /* \"#utility.yul\":12063:12097   */\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":61159:61169  msg.sender */\n      caller\n        /* \"#utility.yul\":12113:12131   */\n      swap7\n      dup2\n      add\n        /* \"#utility.yul\":12106:12149   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":12185:12200   */\n      swap6\n      dup8\n      and\n        /* \"#utility.yul\":12165:12183   */\n      dup6\n      dup10\n      add\n        /* \"#utility.yul\":12158:12201   */\n      mstore\n        /* \"#utility.yul\":12217:12235   */\n      dup5\n      add\n        /* \"#utility.yul\":12210:12244   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":12281:12296   */\n      swap4\n      and\n        /* \"#utility.yul\":12260:12279   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":12253:12297   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":12328:12331   */\n      0xa0\n        /* \"#utility.yul\":12313:12332   */\n      dup3\n      add\n        /* \"#utility.yul\":12306:12341   */\n      mstore\n        /* \"source/Marketplace.sol\":61102:61300  BuyWithERC20(... */\n      swap1\n      mload\n      0xa3d27cc8ac4e1915b6a89ce3e468d87aeb3caf011a47e236db61d098e452870c\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":11989:11992   */\n      0xc0\n        /* \"source/Marketplace.sol\":61102:61300  BuyWithERC20(... */\n      add\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":59683:61308  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":59582:61308  function buyNFTbyERC20(address collection, uint tokenId)... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":58157:58726  function getUserTokensAtSale(address seller, uint256 offset, uint256 limit)... */\n    tag_59:\n        /* \"source/Marketplace.sol\":58316:58340  _userTokensCount[seller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"source/Marketplace.sol\":58343:58344  0 */\n      0x00\n        /* \"source/Marketplace.sol\":58316:58340  _userTokensCount[seller] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58316:58332  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":58316:58340  _userTokensCount[seller] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":58272:58294  SelledNFT[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":58316:58344  _userTokensCount[seller] > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":58312:58698  if (_userTokensCount[seller] > 0) {... */\n      tag_264\n      jumpi\n        /* \"source/Marketplace.sol\":58383:58407  _userTokensCount[seller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58383:58399  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":58383:58407  _userTokensCount[seller] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":58367:58408  new SelledNFT[](_userTokensCount[seller]) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_266\n      jumpi\n      tag_266\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_268\n      jumpi\n      dup2\n      0x20\n      add\n    tag_269:\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      add\n      swap2\n      add\n      dup2\n      tag_269\n      jumpi\n      swap1\n      pop\n    tag_268:\n      pop\n        /* \"source/Marketplace.sol\":58361:58408  ret = new SelledNFT[](_userTokensCount[seller]) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":58423:58438  uint256 counter */\n      0x00\n        /* \"source/Marketplace.sol\":58462:58471  uint256 i */\n      dup1\n        /* \"source/Marketplace.sol\":58457:58687  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_272:\n        /* \"source/Marketplace.sol\":58481:58494  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":58481:58501  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":58477:58501  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":58457:58687  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"source/Marketplace.sol\":58558:58564  seller */\n      dup6\n        /* \"source/Marketplace.sol\":58531:58564  _marketTokens[i].seller == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":58531:58544  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":58545:58546  i */\n      dup3\n        /* \"source/Marketplace.sol\":58531:58547  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_276\n      jumpi\n      tag_276\n      tag_198\n      jump\t// in\n    tag_276:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"source/Marketplace.sol\":58531:58554  _marketTokens[i].seller */\n      0x02\n        /* \"source/Marketplace.sol\":58531:58547  _marketTokens[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"source/Marketplace.sol\":58531:58554  _marketTokens[i].seller */\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":58531:58564  _marketTokens[i].seller == seller */\n      sub\n        /* \"source/Marketplace.sol\":58527:58672  if (_marketTokens[i].seller == seller) {... */\n      tag_278\n      jumpi\n        /* \"source/Marketplace.sol\":58604:58617  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":58618:58619  i */\n      dup2\n        /* \"source/Marketplace.sol\":58604:58620  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_280\n      jumpi\n      tag_280\n      tag_198\n      jump\t// in\n    tag_280:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":58589:58620  ret[counter] = _marketTokens[i] */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":58604:58620  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Marketplace.sol\":58589:58620  ret[counter] = _marketTokens[i] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      dup5\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"source/Marketplace.sol\":58589:58601  ret[counter] */\n      dup4\n      mload\n        /* \"source/Marketplace.sol\":58589:58592  ret */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":58593:58600  counter */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":58589:58601  ret[counter] */\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_198\n      jump\t// in\n    tag_283:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":58589:58620  ret[counter] = _marketTokens[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":58643:58652  counter++ */\n      dup2\n      dup1\n      tag_284\n      swap1\n      tag_201\n      jump\t// in\n    tag_284:\n      swap3\n      pop\n      pop\n        /* \"source/Marketplace.sol\":58527:58672  if (_marketTokens[i].seller == seller) {... */\n    tag_278:\n        /* \"source/Marketplace.sol\":58503:58506  i++ */\n      dup1\n      tag_285\n      dup2\n      tag_201\n      jump\t// in\n    tag_285:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":58457:58687  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_272)\n    tag_273:\n      pop\n        /* \"source/Marketplace.sol\":58346:58698  {... */\n      pop\n        /* \"source/Marketplace.sol\":58312:58698  if (_userTokensCount[seller] > 0) {... */\n    tag_264:\n        /* \"source/Marketplace.sol\":58157:58726  function getUserTokensAtSale(address seller, uint256 offset, uint256 limit)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":56228:56343  function getAllowedCollections() public view returns(IERC721[] memory) {... */\n    tag_64:\n        /* \"source/Marketplace.sol\":56281:56297  IERC721[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":56317:56335  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":56310:56335  return _marketCollections */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_287\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_288:\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_288\n      jumpi\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":56228:56343  function getAllowedCollections() public view returns(IERC721[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":53510:53987  function getUserCollectionsTokenCount(address user) public view returns(CollectionTokenCount[] memory ret) {... */\n    tag_71:\n        /* \"source/Marketplace.sol\":53661:53679  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53661:53686  _marketCollections.length */\n      sload\n        /* \"source/Marketplace.sol\":53582:53615  CollectionTokenCount[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":53634:53687  new CollectionTokenCount[](_marketCollections.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_291\n      jumpi\n      tag_291\n      tag_267\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_292\n      jumpi\n      dup2\n      0x20\n      add\n    tag_293:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_293\n      jumpi\n      swap1\n      pop\n    tag_292:\n      pop\n        /* \"source/Marketplace.sol\":53628:53687  ret = new CollectionTokenCount[](_marketCollections.length) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":53702:53711  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":53698:53959  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n    tag_296:\n        /* \"source/Marketplace.sol\":53721:53739  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53721:53746  _marketCollections.length */\n      sload\n        /* \"source/Marketplace.sol\":53717:53746  i < _marketCollections.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":53698:53959  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"source/Marketplace.sol\":53777:53947  CollectionTokenCount(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"source/Marketplace.sol\":53824:53842  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53843:53844  i */\n      dup4\n        /* \"source/Marketplace.sol\":53824:53845  _marketCollections[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_198\n      jump\t// in\n    tag_300:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":53777:53947  CollectionTokenCount(... */\n      dup5\n      mstore\n        /* \"source/Marketplace.sol\":53865:53900  _userTokensCountByCollections[user] */\n      dup8\n      and\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":53865:53894  _userTokensCountByCollections */\n      0x08\n        /* \"source/Marketplace.sol\":53865:53900  _userTokensCountByCollections[user] */\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":53909:53927  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53909:53930  _marketCollections[i] */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":53777:53947  CollectionTokenCount(... */\n      swap5\n      swap1\n      swap3\n      add\n      swap4\n        /* \"source/Marketplace.sol\":53865:53900  _userTokensCountByCollections[user] */\n      swap1\n      swap3\n        /* \"source/Marketplace.sol\":53824:53845  _marketCollections[i] */\n      swap2\n        /* \"source/Marketplace.sol\":53909:53927  _marketCollections */\n      swap1\n        /* \"source/Marketplace.sol\":53928:53929  i */\n      dup7\n      swap1\n        /* \"source/Marketplace.sol\":53909:53930  _marketCollections[i] */\n      dup2\n      lt\n      tag_303\n      jumpi\n      tag_303\n      tag_198\n      jump\t// in\n    tag_303:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":53865:53932  _userTokensCountByCollections[user][address(_marketCollections[i])] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":53777:53947  CollectionTokenCount(... */\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":53768:53774  ret[i] */\n      dup3\n      mload\n        /* \"source/Marketplace.sol\":53768:53771  ret */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":53772:53773  i */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":53768:53774  ret[i] */\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_198\n      jump\t// in\n    tag_306:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":53768:53947  ret[i] = CollectionTokenCount(... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":53748:53751  i++ */\n      dup1\n      dup1\n      tag_307\n      swap1\n      tag_201\n      jump\t// in\n    tag_307:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":53698:53959  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      jump(tag_296)\n    tag_297:\n      pop\n        /* \"source/Marketplace.sol\":53510:53987  function getUserCollectionsTokenCount(address user) public view returns(CollectionTokenCount[] memory ret) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":57314:57505  function withdrawWei() public onlyOwner {... */\n    tag_76:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_309\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_309:\n        /* \"source/Marketplace.sol\":57414:57450  payable(msg.sender).transfer(amount) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":57382:57403  address(this).balance */\n      selfbalance\n      swap1\n        /* \"source/Marketplace.sol\":57422:57432  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":57414:57450  payable(msg.sender).transfer(amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"source/Marketplace.sol\":57382:57403  address(this).balance */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":57365:57379  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":57414:57450  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":57365:57379  uint256 amount */\n      dup2\n        /* \"source/Marketplace.sol\":57414:57450  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":57382:57403  address(this).balance */\n      dup6\n        /* \"source/Marketplace.sol\":57422:57432  msg.sender */\n      dup9\n        /* \"source/Marketplace.sol\":57414:57450  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_312:\n      pop\n        /* \"source/Marketplace.sol\":57466:57497  WithdrawWei(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":57478:57488  msg.sender */\n      caller\n        /* \"#utility.yul\":12526:12600   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12631:12633   */\n      0x20\n        /* \"#utility.yul\":12616:12634   */\n      dup2\n      add\n        /* \"#utility.yul\":12609:12643   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":57466:57497  WithdrawWei(msg.sender, amount) */\n      0x2f15b7a52fc8a006876377705647acbd22eed72dec9b154aa290e286c06a3cd4\n      swap2\n        /* \"#utility.yul\":12499:12517   */\n      add\n        /* \"source/Marketplace.sol\":57466:57497  WithdrawWei(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":57354:57505  {... */\n      pop\n        /* \"source/Marketplace.sol\":57314:57505  function withdrawWei() public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":58848:58984  function getTokensAtSale(uint256 limit, uint256 offset) public view returns (SelledNFT[] memory) {... */\n    tag_96:\n        /* \"source/Marketplace.sol\":58925:58943  SelledNFT[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":58963:58976  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":58956:58976  return _marketTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_318:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_319\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      dup6\n      dup8\n      add\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      dup3\n      and\n      swap4\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup6\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_318)\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":58848:58984  function getTokensAtSale(uint256 limit, uint256 offset) public view returns (SelledNFT[] memory) {... */\n    tag_317:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":52182:52616  function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {... */\n    tag_105:\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"source/Marketplace.sol\":52298:52588  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_324:\n        /* \"source/Marketplace.sol\":52321:52334  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52321:52341  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":52317:52341  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":52298:52588  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"source/Marketplace.sol\":52417:52427  collection */\n      dup4\n        /* \"source/Marketplace.sol\":52386:52427  _marketTokens[i].collection == collection */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":52386:52399  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52400:52401  i */\n      dup3\n        /* \"source/Marketplace.sol\":52386:52402  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_328\n      jumpi\n      tag_328\n      tag_198\n      jump\t// in\n    tag_328:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":52386:52413  _marketTokens[i].collection */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":52386:52427  _marketTokens[i].collection == collection */\n      eq\n        /* \"source/Marketplace.sol\":52385:52503  (_marketTokens[i].collection == collection)... */\n      dup1\n      iszero\n      tag_330\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":52495:52502  tokenId */\n      dup3\n        /* \"source/Marketplace.sol\":52467:52480  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52481:52482  i */\n      dup3\n        /* \"source/Marketplace.sol\":52467:52483  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_332\n      tag_198\n      jump\t// in\n    tag_332:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":52467:52491  _marketTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":52467:52502  _marketTokens[i].tokenId == tokenId */\n      eq\n        /* \"source/Marketplace.sol\":52385:52503  (_marketTokens[i].collection == collection)... */\n    tag_330:\n        /* \"source/Marketplace.sol\":52363:52577  if (... */\n      iszero\n      tag_334\n      jumpi\n        /* \"source/Marketplace.sol\":52545:52558  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":52559:52560  i */\n      dup2\n        /* \"source/Marketplace.sol\":52545:52561  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_336\n      jumpi\n      tag_336\n      tag_198\n      jump\t// in\n    tag_336:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":52538:52561  return _marketTokens[i] */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":52545:52561  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Marketplace.sol\":52538:52561  return _marketTokens[i] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      dup5\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n      swap2\n      pop\n      tag_317\n      swap1\n      pop\n      jump\n        /* \"source/Marketplace.sol\":52363:52577  if (... */\n    tag_334:\n        /* \"source/Marketplace.sol\":52343:52346  i++ */\n      dup1\n      tag_338\n      dup2\n      tag_201\n      jump\t// in\n    tag_338:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":52298:52588  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_324)\n    tag_325:\n      pop\n        /* \"source/Marketplace.sol\":52182:52616  function marketTokensGet(address collection, uint256 tokenId) public view returns (SelledNFT memory ret) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":56976:57080  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_110:\n        /* \"source/Marketplace.sol\":57023:57039  address[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":57059:57072  _allowedERC20 */\n      0x04\n        /* \"source/Marketplace.sol\":57052:57072  return _allowedERC20 */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_287\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_288\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":56976:57080  function getAllowedERC20() public view returns(address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_115:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_343\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_343:\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      tag_345\n        /* \"source/Marketplace.sol\":2759:2760  0 */\n      0x00\n        /* \"source/Marketplace.sol\":2732:2750  _transferOwnership */\n      tag_346\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_345:\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":57088:57306  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_119:\n        /* \"source/Marketplace.sol\":57148:57152  bool */\n      0x00\n      dup1\n        /* \"source/Marketplace.sol\":57165:57276  for(uint i=0; i<_allowedERC20.length;i++) {... */\n    tag_348:\n        /* \"source/Marketplace.sol\":57181:57194  _allowedERC20 */\n      0x04\n        /* \"source/Marketplace.sol\":57181:57201  _allowedERC20.length */\n      sload\n        /* \"source/Marketplace.sol\":57179:57201  i<_allowedERC20.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":57165:57276  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"source/Marketplace.sol\":57235:57248  _allowedERC20 */\n      0x04\n        /* \"source/Marketplace.sol\":57249:57250  i */\n      dup2\n        /* \"source/Marketplace.sol\":57235:57251  _allowedERC20[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_352\n      jumpi\n      tag_352\n      tag_198\n      jump\t// in\n    tag_352:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":57226:57251  erc20 == _allowedERC20[i] */\n      swap1\n      dup5\n      and\n      sub\n        /* \"source/Marketplace.sol\":57222:57264  if (erc20 == _allowedERC20[i]) return true */\n      tag_354\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":57260:57264  true */\n      0x01\n      swap3\n        /* \"source/Marketplace.sol\":57088:57306  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":57222:57264  if (erc20 == _allowedERC20[i]) return true */\n    tag_354:\n        /* \"source/Marketplace.sol\":57202:57205  i++ */\n      dup1\n      tag_355\n      dup2\n      tag_201\n      jump\t// in\n    tag_355:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":57165:57276  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      jump(tag_348)\n    tag_349:\n      pop\n        /* \"source/Marketplace.sol\":57293:57298  false */\n      0x00\n      swap3\n        /* \"source/Marketplace.sol\":57088:57306  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":62508:63800  function sellNFT(... */\n    tag_134:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9086:9088   */\n      0x20\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9068:9089   */\n      mstore\n        /* \"#utility.yul\":9125:9127   */\n      0x10\n        /* \"#utility.yul\":9105:9123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9098:9128   */\n      mstore\n        /* \"#utility.yul\":9164:9182   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":9144:9162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9137:9183   */\n      mstore\n        /* \"#utility.yul\":9200:9218   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_216\n        /* \"#utility.yul\":8884:9224   */\n      jump\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n    tag_360:\n        /* \"source/Marketplace.sol\":62751:62782  _allowedCollections[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":62751:62770  _allowedCollections */\n      0x03\n        /* \"source/Marketplace.sol\":62751:62782  _allowedCollections[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/Marketplace.sol\":62729:62836  require(... */\n      tag_363\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12856:12858   */\n      0x20\n        /* \"source/Marketplace.sol\":62729:62836  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12838:12859   */\n      mstore\n        /* \"#utility.yul\":12895:12897   */\n      0x1a\n        /* \"#utility.yul\":12875:12893   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12868:12898   */\n      mstore\n        /* \"#utility.yul\":12934:12962   */\n      0x4e6f7420616c6c6f776564204e465420636f6c6c656374696f6e000000000000\n        /* \"#utility.yul\":12914:12932   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12907:12963   */\n      mstore\n        /* \"#utility.yul\":12980:12998   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":62729:62836  require(... */\n      tag_216\n        /* \"#utility.yul\":12654:13004   */\n      jump\n        /* \"source/Marketplace.sol\":62729:62836  require(... */\n    tag_363:\n        /* \"source/Marketplace.sol\":62893:62930  IERC721(collection).ownerOf(_tokenId) */\n      mload(0x40)\n      0x6352211e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5919:5944   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":62934:62944  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":62893:62944  IERC721(collection).ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Marketplace.sol\":62893:62920  IERC721(collection).ownerOf */\n      dup7\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":5892:5910   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":62893:62930  IERC721(collection).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_368\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_368:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_369\n      swap2\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n        /* \"source/Marketplace.sol\":62893:62944  IERC721(collection).ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"source/Marketplace.sol\":62871:62997  require(... */\n      tag_371\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13467:13469   */\n      0x20\n        /* \"source/Marketplace.sol\":62871:62997  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13449:13470   */\n      mstore\n        /* \"#utility.yul\":13506:13508   */\n      0x19\n        /* \"#utility.yul\":13486:13504   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13479:13509   */\n      mstore\n        /* \"#utility.yul\":13545:13572   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":13525:13543   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13518:13573   */\n      mstore\n        /* \"#utility.yul\":13590:13608   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":62871:62997  require(... */\n      tag_216\n        /* \"#utility.yul\":13265:13614   */\n      jump\n        /* \"source/Marketplace.sol\":62871:62997  require(... */\n    tag_371:\n        /* \"source/Marketplace.sol\":63024:63025  0 */\n      0x00\n        /* \"source/Marketplace.sol\":63016:63021  price */\n      dup3\n        /* \"source/Marketplace.sol\":63016:63025  price > 0 */\n      gt\n        /* \"source/Marketplace.sol\":63008:63061  require(price > 0, \"Price must be greater than zero\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13821:13823   */\n      0x20\n        /* \"source/Marketplace.sol\":63008:63061  require(price > 0, \"Price must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13803:13824   */\n      mstore\n        /* \"#utility.yul\":13860:13862   */\n      0x1f\n        /* \"#utility.yul\":13840:13858   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13833:13863   */\n      mstore\n        /* \"#utility.yul\":13899:13932   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":13879:13897   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13872:13933   */\n      mstore\n        /* \"#utility.yul\":13950:13968   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":63008:63061  require(price > 0, \"Price must be greater than zero\") */\n      tag_216\n        /* \"#utility.yul\":13619:13974   */\n      jump\n        /* \"source/Marketplace.sol\":63008:63061  require(price > 0, \"Price must be greater than zero\") */\n    tag_374:\n        /* \"source/Marketplace.sol\":63076:63096  _erc20 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n        /* \"source/Marketplace.sol\":63072:63244  if (_erc20 != address(0)) {... */\n      tag_379\n      jumpi\n        /* \"source/Marketplace.sol\":63153:63175  isAllowedERC20(_erc20) */\n      tag_378\n        /* \"source/Marketplace.sol\":63168:63174  _erc20 */\n      dup2\n        /* \"source/Marketplace.sol\":63153:63167  isAllowedERC20 */\n      tag_119\n        /* \"source/Marketplace.sol\":63153:63175  isAllowedERC20(_erc20) */\n      jump\t// in\n    tag_378:\n        /* \"source/Marketplace.sol\":63153:63183  isAllowedERC20(_erc20) == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":63179:63183  true */\n      0x01\n        /* \"source/Marketplace.sol\":63153:63183  isAllowedERC20(_erc20) == true */\n      eq\n        /* \"source/Marketplace.sol\":63145:63232  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":14181:14183   */\n      0x20\n        /* \"source/Marketplace.sol\":63145:63232  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14163:14184   */\n      mstore\n        /* \"#utility.yul\":14220:14222   */\n      0x2c\n        /* \"#utility.yul\":14200:14218   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14193:14223   */\n      mstore\n        /* \"#utility.yul\":14259:14293   */\n      0x54686973204552433230206e6f7420616c6c6f77656420617320612074726164\n        /* \"#utility.yul\":14239:14257   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14232:14294   */\n      mstore\n        /* \"#utility.yul\":14330:14344   */\n      0x696e672063757272656e63790000000000000000000000000000000000000000\n        /* \"#utility.yul\":14310:14328   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14303:14345   */\n      mstore\n        /* \"#utility.yul\":14362:14381   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":63145:63232  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_216\n        /* \"#utility.yul\":13979:14387   */\n      jump\n        /* \"source/Marketplace.sol\":63145:63232  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n    tag_379:\n        /* \"source/Marketplace.sol\":63282:63446  SelledNFT(... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      dup8\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":63354:63364  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":63282:63446  SelledNFT(... */\n      dup4\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      swap2\n      dup6\n      and\n      0x80\n      dup5\n      add\n      mstore\n        /* \"source/Marketplace.sol\":63420:63435  block.timestamp */\n      timestamp\n        /* \"source/Marketplace.sol\":63282:63446  SelledNFT(... */\n      0xa0\n      dup5\n      add\n      mstore\n        /* \"source/Marketplace.sol\":63457:63526  IERC721(collection).transferFrom(msg.sender, address(this), _tokenId) */\n      swap3\n      mload\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":11575:11609   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"source/Marketplace.sol\":63510:63514  this */\n      address\n        /* \"#utility.yul\":11625:11643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11618:11661   */\n      mstore\n        /* \"#utility.yul\":11677:11695   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11670:11704   */\n      dup7\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":63282:63446  SelledNFT(... */\n      swap1\n      swap2\n      swap1\n        /* \"source/Marketplace.sol\":63457:63489  IERC721(collection).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11487:11505   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":63457:63526  IERC721(collection).transferFrom(msg.sender, address(this), _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_383\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_383:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_385\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_385:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":63537:63561  _marketTokensAdd(newLot) */\n      tag_386\n        /* \"source/Marketplace.sol\":63554:63560  newLot */\n      dup2\n        /* \"source/Marketplace.sol\":63537:63553  _marketTokensAdd */\n      tag_387\n        /* \"source/Marketplace.sol\":63537:63561  _marketTokensAdd(newLot) */\n      jump\t// in\n    tag_386:\n        /* \"source/Marketplace.sol\":63578:63598  _erc20 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"source/Marketplace.sol\":63574:63793  if (_erc20 == address(0)) {... */\n      tag_388\n      jumpi\n        /* \"source/Marketplace.sol\":63620:63690  PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":63642:63652  msg.sender */\n      caller\n        /* \"#utility.yul\":14712:14746   */\n      dup2\n      mstore\n        /* \"#utility.yul\":14661:14703   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14782:14797   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":14777:14779   */\n      0x20\n        /* \"#utility.yul\":14762:14780   */\n      dup4\n      add\n        /* \"#utility.yul\":14755:14798   */\n      mstore\n        /* \"#utility.yul\":14814:14832   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":14807:14841   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":14877:14892   */\n      dup5\n      and\n        /* \"#utility.yul\":14872:14874   */\n      0x60\n        /* \"#utility.yul\":14857:14875   */\n      dup3\n      add\n        /* \"#utility.yul\":14850:14893   */\n      mstore\n        /* \"#utility.yul\":14924:14927   */\n      0x80\n        /* \"#utility.yul\":14909:14928   */\n      dup2\n      add\n        /* \"#utility.yul\":14902:14937   */\n      dup6\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":63620:63690  PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price) */\n      swap1\n      mload\n      0x44f716b281fa3e96fbd6ef888a275ef2fdf8914960a4c57c0bef6ccaebf0df31\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":14638:14641   */\n      0xa0\n        /* \"source/Marketplace.sol\":63620:63690  PutUpForSaleWithERC20(msg.sender, collection, _tokenId, _erc20, price) */\n      add\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":63574:63793  if (_erc20 == address(0)) {... */\n      jump(tag_391)\n    tag_388:\n        /* \"source/Marketplace.sol\":63728:63781  PutUpForSale(msg.sender, collection, _tokenId, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":63741:63751  msg.sender */\n      caller\n        /* \"#utility.yul\":15240:15274   */\n      dup2\n      mstore\n        /* \"#utility.yul\":15189:15231   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15310:15325   */\n      dup8\n      and\n        /* \"#utility.yul\":15305:15307   */\n      0x20\n        /* \"#utility.yul\":15290:15308   */\n      dup3\n      add\n        /* \"#utility.yul\":15283:15326   */\n      mstore\n        /* \"#utility.yul\":15342:15360   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":15335:15369   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":15400:15402   */\n      0x60\n        /* \"#utility.yul\":15385:15403   */\n      dup2\n      add\n        /* \"#utility.yul\":15378:15412   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":63728:63781  PutUpForSale(msg.sender, collection, _tokenId, price) */\n      0xc68dc1f889fa3a215dcdd97178af6bd67fab7b34138eef18f4313aac53f5b364\n      swap1\n        /* \"#utility.yul\":15166:15169   */\n      0x80\n        /* \"#utility.yul\":15151:15170   */\n      add\n        /* \"source/Marketplace.sol\":63728:63781  PutUpForSale(msg.sender, collection, _tokenId, price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":63574:63793  if (_erc20 == address(0)) {... */\n    tag_391:\n        /* \"source/Marketplace.sol\":62681:63800  {... */\n      pop\n        /* \"source/Marketplace.sol\":62508:63800  function sellNFT(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":53054:53504  function getCollectionsTokensCount() public view returns (CollectionTokenCount[] memory ret) {... */\n    tag_137:\n        /* \"source/Marketplace.sol\":53191:53209  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53191:53216  _marketCollections.length */\n      sload\n        /* \"source/Marketplace.sol\":53112:53145  CollectionTokenCount[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":53164:53217  new CollectionTokenCount[](_marketCollections.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_396\n      jumpi\n      tag_396\n      tag_267\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_397\n      jumpi\n      dup2\n      0x20\n      add\n    tag_398:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_398\n      jumpi\n      swap1\n      pop\n    tag_397:\n      pop\n        /* \"source/Marketplace.sol\":53158:53217  ret = new CollectionTokenCount[](_marketCollections.length) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":53232:53241  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":53228:53476  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n    tag_400:\n        /* \"source/Marketplace.sol\":53251:53269  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53251:53276  _marketCollections.length */\n      sload\n        /* \"source/Marketplace.sol\":53247:53276  i < _marketCollections.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":53228:53476  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      iszero\n      tag_401\n      jumpi\n        /* \"source/Marketplace.sol\":53307:53464  CollectionTokenCount(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"source/Marketplace.sol\":53354:53372  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53373:53374  i */\n      dup4\n        /* \"source/Marketplace.sol\":53354:53375  _marketCollections[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_404\n      jumpi\n      tag_404\n      tag_198\n      jump\t// in\n    tag_404:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":53307:53464  CollectionTokenCount(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"source/Marketplace.sol\":53395:53417  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":53395:53449  _collectionTokensCount[address(_marketCollections[i])] */\n      0x00\n        /* \"source/Marketplace.sol\":53426:53444  _marketCollections */\n      0x02\n        /* \"source/Marketplace.sol\":53445:53446  i */\n      dup6\n        /* \"source/Marketplace.sol\":53426:53447  _marketCollections[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_407\n      jumpi\n      tag_407\n      tag_198\n      jump\t// in\n    tag_407:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":53395:53449  _collectionTokensCount[address(_marketCollections[i])] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":53307:53464  CollectionTokenCount(... */\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":53298:53304  ret[i] */\n      dup3\n      mload\n        /* \"source/Marketplace.sol\":53298:53301  ret */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":53302:53303  i */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":53298:53304  ret[i] */\n      dup2\n      lt\n      tag_410\n      jumpi\n      tag_410\n      tag_198\n      jump\t// in\n    tag_410:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":53298:53464  ret[i] = CollectionTokenCount(... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":53278:53281  i++ */\n      dup1\n      dup1\n      tag_411\n      swap1\n      tag_201\n      jump\t// in\n    tag_411:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":53228:53476  for(uint256 i = 0; i < _marketCollections.length; i++) {... */\n      jump(tag_400)\n    tag_401:\n      pop\n        /* \"source/Marketplace.sol\":53054:53504  function getCollectionsTokensCount() public view returns (CollectionTokenCount[] memory ret) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":61318:62500  function buyNFT(address collection, uint256 tokenId)... */\n    tag_141:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_414\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9086:9088   */\n      0x20\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9068:9089   */\n      mstore\n        /* \"#utility.yul\":9125:9127   */\n      0x10\n        /* \"#utility.yul\":9105:9123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9098:9128   */\n      mstore\n        /* \"#utility.yul\":9164:9182   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":9144:9162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9137:9183   */\n      mstore\n        /* \"#utility.yul\":9200:9218   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_216\n        /* \"#utility.yul\":8884:9224   */\n      jump\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n    tag_414:\n        /* \"source/Marketplace.sol\":61443:61467  SelledNFT memory lotInfo */\n      0x00\n        /* \"source/Marketplace.sol\":61470:61506  marketTokensGet(collection, tokenId) */\n      tag_417\n        /* \"source/Marketplace.sol\":61486:61496  collection */\n      dup4\n        /* \"source/Marketplace.sol\":61498:61505  tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":61470:61485  marketTokensGet */\n      tag_105\n        /* \"source/Marketplace.sol\":61470:61506  marketTokensGet(collection, tokenId) */\n      jump\t// in\n    tag_417:\n        /* \"source/Marketplace.sol\":61526:61544  lotInfo.collection */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":61443:61506  SelledNFT memory lotInfo = marketTokensGet(collection, tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":61526:61558  lotInfo.collection != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":61517:61587  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9431:9433   */\n      0x20\n        /* \"source/Marketplace.sol\":61517:61587  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9413:9434   */\n      mstore\n        /* \"#utility.yul\":9470:9472   */\n      0x18\n        /* \"#utility.yul\":9450:9468   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9443:9473   */\n      mstore\n        /* \"#utility.yul\":9509:9535   */\n      0x54686973204e4654206973206e6f7420666f722073616c650000000000000000\n        /* \"#utility.yul\":9489:9507   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9482:9536   */\n      mstore\n        /* \"#utility.yul\":9553:9571   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":61517:61587  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n      tag_216\n        /* \"#utility.yul\":9229:9577   */\n      jump\n        /* \"source/Marketplace.sol\":61517:61587  require( lotInfo.collection != address(0), \"This NFT is not for sale\") */\n    tag_418:\n        /* \"source/Marketplace.sol\":61645:61652  lotInfo */\n      dup1\n        /* \"source/Marketplace.sol\":61645:61658  lotInfo.price */\n      0x60\n      add\n      mload\n        /* \"source/Marketplace.sol\":61632:61641  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":61632:61658  msg.value >= lotInfo.price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":61624:61701  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15625:15627   */\n      0x20\n        /* \"source/Marketplace.sol\":61624:61701  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15607:15628   */\n      mstore\n        /* \"#utility.yul\":15664:15666   */\n      0x26\n        /* \"#utility.yul\":15644:15662   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15637:15667   */\n      mstore\n        /* \"#utility.yul\":15703:15737   */\n      0x596f752068617665206e6f74207061696420656e6f75676820666f7220746869\n        /* \"#utility.yul\":15683:15701   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15676:15738   */\n      mstore\n        /* \"#utility.yul\":15774:15782   */\n      0x73206974656d0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15754:15772   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15747:15783   */\n      mstore\n        /* \"#utility.yul\":15800:15819   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":61624:61701  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n      tag_216\n        /* \"#utility.yul\":15423:15825   */\n      jump\n        /* \"source/Marketplace.sol\":61624:61701  require(msg.value >= lotInfo.price, \"You have not paid enough for this item\") */\n    tag_420:\n        /* \"source/Marketplace.sol\":61764:61777  lotInfo.erc20 */\n      0x80\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":61764:61791  lotInfo.erc20 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      iszero\n        /* \"source/Marketplace.sol\":61756:61822  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16032:16034   */\n      0x20\n        /* \"source/Marketplace.sol\":61756:61822  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16014:16035   */\n      mstore\n        /* \"#utility.yul\":16071:16073   */\n      0x1a\n        /* \"#utility.yul\":16051:16069   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16044:16074   */\n      mstore\n        /* \"#utility.yul\":16110:16138   */\n      0x5468697320746f6b656e2073656c6c6564206279204552433230000000000000\n        /* \"#utility.yul\":16090:16108   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16083:16139   */\n      mstore\n        /* \"#utility.yul\":16156:16174   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":61756:61822  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n      tag_216\n        /* \"#utility.yul\":15830:16180   */\n      jump\n        /* \"source/Marketplace.sol\":61756:61822  require(lotInfo.erc20 == address(0), \"This token selled by ERC20\") */\n    tag_423:\n        /* \"source/Marketplace.sol\":61860:61869  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":61843:61857  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":61900:61950  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_426\n        /* \"source/Marketplace.sol\":61913:61938  SafeMath.div(amount, 100) */\n      tag_243\n        /* \"source/Marketplace.sol\":61860:61869  msg.value */\n      dup4\n        /* \"source/Marketplace.sol\":61934:61937  100 */\n      0x64\n        /* \"source/Marketplace.sol\":61913:61925  SafeMath.div */\n      tag_244\n        /* \"source/Marketplace.sol\":61913:61938  SafeMath.div(amount, 100) */\n      jump\t// in\n        /* \"source/Marketplace.sol\":61900:61950  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n    tag_426:\n        /* \"source/Marketplace.sol\":61880:61950  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":61983:61990  owner() */\n      tag_428\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":61983:61990  owner() */\n    tag_428:\n        /* \"source/Marketplace.sol\":61965:61990  lotInfo.seller == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":61965:61972  lotInfo */\n      dup4\n        /* \"source/Marketplace.sol\":61965:61979  lotInfo.seller */\n      0x40\n      add\n      mload\n        /* \"source/Marketplace.sol\":61965:61990  lotInfo.seller == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"source/Marketplace.sol\":61961:62005  if (lotInfo.seller == owner()) feeAmount = 0 */\n      tag_429\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":62004:62005  0 */\n      0x00\n        /* \"source/Marketplace.sol\":61961:62005  if (lotInfo.seller == owner()) feeAmount = 0 */\n    tag_429:\n        /* \"source/Marketplace.sol\":62016:62037  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":62040:62071  SafeMath.sub(amount, feeAmount) */\n      tag_430\n        /* \"source/Marketplace.sol\":62053:62059  amount */\n      dup4\n        /* \"source/Marketplace.sol\":62061:62070  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":62040:62052  SafeMath.sub */\n      tag_249\n        /* \"source/Marketplace.sol\":62040:62071  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_430:\n        /* \"source/Marketplace.sol\":62016:62071  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":62092:62099  lotInfo */\n      dup4\n        /* \"source/Marketplace.sol\":62092:62106  lotInfo.seller */\n      0x40\n      add\n      mload\n        /* \"source/Marketplace.sol\":62084:62116  payable(lotInfo.seller).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":62084:62131  payable(lotInfo.seller).transfer(amountWithFee) */\n      0x08fc\n        /* \"source/Marketplace.sol\":62117:62130  amountWithFee */\n      dup3\n        /* \"source/Marketplace.sol\":62084:62131  payable(lotInfo.seller).transfer(amountWithFee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_432\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_432:\n      pop\n        /* \"source/Marketplace.sol\":62146:62159  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":62142:62229  if (feeAmount > 0) {... */\n      tag_433\n      jumpi\n        /* \"source/Marketplace.sol\":62184:62196  _feeReceiver */\n      sload(0x09)\n        /* \"source/Marketplace.sol\":62176:62217  payable(_feeReceiver).transfer(feeAmount) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":62184:62196  _feeReceiver */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":62176:62217  payable(_feeReceiver).transfer(feeAmount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"source/Marketplace.sol\":62207:62216  feeAmount */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":62184:62196  _feeReceiver */\n      0x00\n        /* \"source/Marketplace.sol\":62176:62217  payable(_feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":62184:62196  _feeReceiver */\n      dup2\n        /* \"source/Marketplace.sol\":62176:62217  payable(_feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":62207:62216  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":62184:62196  _feeReceiver */\n      dup9\n        /* \"source/Marketplace.sol\":62176:62217  payable(_feeReceiver).transfer(feeAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_435\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_435:\n      pop\n        /* \"source/Marketplace.sol\":62142:62229  if (feeAmount > 0) {... */\n    tag_433:\n        /* \"source/Marketplace.sol\":62257:62275  lotInfo.collection */\n      dup4\n      mload\n        /* \"source/Marketplace.sol\":62317:62332  lotInfo.tokenId */\n      0x20\n      dup6\n      add\n      mload\n        /* \"source/Marketplace.sol\":62249:62333  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":62298:62302  this */\n      address\n        /* \"source/Marketplace.sol\":62249:62333  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11575:11609   */\n      mstore\n        /* \"source/Marketplace.sol\":62305:62315  msg.sender */\n      caller\n        /* \"#utility.yul\":11625:11643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11618:11661   */\n      mstore\n        /* \"#utility.yul\":11677:11695   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11670:11704   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"source/Marketplace.sol\":62249:62289  IERC721(lotInfo.collection).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11487:11505   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":62249:62333  IERC721(lotInfo.collection).transferFrom(address(this), msg.sender, lotInfo.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_437\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_437:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_439\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_439:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":62344:62381  _marketTokensDel(collection, tokenId) */\n      tag_440\n        /* \"source/Marketplace.sol\":62361:62371  collection */\n      dup7\n        /* \"source/Marketplace.sol\":62373:62380  tokenId */\n      dup7\n        /* \"source/Marketplace.sol\":62344:62360  _marketTokensDel */\n      tag_260\n        /* \"source/Marketplace.sol\":62344:62381  _marketTokensDel(collection, tokenId) */\n      jump\t// in\n    tag_440:\n        /* \"source/Marketplace.sol\":62403:62417  lotInfo.seller */\n      0x40\n      dup1\n      dup6\n      add\n      mload\n        /* \"source/Marketplace.sol\":62431:62449  lotInfo.collection */\n      dup6\n      mload\n        /* \"source/Marketplace.sol\":62451:62466  lotInfo.tokenId */\n      0x20\n      dup1\n      dup9\n      add\n      mload\n        /* \"source/Marketplace.sol\":62468:62481  lotInfo.price */\n      0x60\n      dup1\n      dup11\n      add\n      mload\n        /* \"source/Marketplace.sol\":62399:62482  Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price) */\n      dup7\n      mload\n        /* \"#utility.yul\":16454:16496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16523:16538   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":16505:16539   */\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":62419:62429  msg.sender */\n      caller\n        /* \"#utility.yul\":16555:16573   */\n      swap5\n      dup2\n      add\n        /* \"#utility.yul\":16548:16591   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":16627:16642   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":16607:16625   */\n      swap5\n      dup3\n      add\n        /* \"#utility.yul\":16600:16643   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":16659:16677   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16652:16686   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":16717:16720   */\n      0x80\n        /* \"#utility.yul\":16702:16721   */\n      dup3\n      add\n        /* \"#utility.yul\":16695:16730   */\n      mstore\n        /* \"source/Marketplace.sol\":62399:62482  Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price) */\n      0xbab4aa6b2d5c0935e0e2937d1f73655848f670d43bf6f0c7e9e11e635bb5d86f\n      swap1\n        /* \"#utility.yul\":16431:16434   */\n      0xa0\n        /* \"#utility.yul\":16416:16435   */\n      add\n        /* \"source/Marketplace.sol\":62399:62482  Buy(lotInfo.seller, msg.sender, lotInfo.collection, lotInfo.tokenId, lotInfo.price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":61432:62500  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":61318:62500  function buyNFT(address collection, uint256 tokenId)... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":58990:59574  function getCollectionTokensAtSale(address collection, uint256 offset, uint256 limit) public view returns (SelledNFT[] memory ret) {... */\n    tag_145:\n        /* \"source/Marketplace.sol\":59136:59170  _collectionTokensCount[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"source/Marketplace.sol\":59173:59174  0 */\n      0x00\n        /* \"source/Marketplace.sol\":59136:59170  _collectionTokensCount[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":59136:59158  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":59136:59170  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":59097:59119  SelledNFT[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":59136:59174  _collectionTokensCount[collection] > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":59132:59546  if (_collectionTokensCount[collection] > 0) {... */\n      tag_264\n      jumpi\n        /* \"source/Marketplace.sol\":59213:59247  _collectionTokensCount[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":59213:59235  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":59213:59247  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Marketplace.sol\":59197:59248  new SelledNFT[](_collectionTokensCount[collection]) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_446\n      jumpi\n      tag_446\n      tag_267\n      jump\t// in\n    tag_446:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_447\n      jumpi\n      dup2\n      0x20\n      add\n    tag_448:\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      add\n      swap2\n      add\n      dup2\n      tag_448\n      jumpi\n      swap1\n      pop\n    tag_447:\n      pop\n        /* \"source/Marketplace.sol\":59191:59248  ret = new SelledNFT[](_collectionTokensCount[collection]) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":59263:59278  uint256 counter */\n      0x00\n        /* \"source/Marketplace.sol\":59302:59311  uint256 i */\n      dup1\n        /* \"source/Marketplace.sol\":59297:59535  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_450:\n        /* \"source/Marketplace.sol\":59321:59334  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":59321:59341  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":59317:59341  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":59297:59535  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"source/Marketplace.sol\":59402:59412  collection */\n      dup6\n        /* \"source/Marketplace.sol\":59371:59412  _marketTokens[i].collection == collection */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":59371:59384  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":59385:59386  i */\n      dup3\n        /* \"source/Marketplace.sol\":59371:59387  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_454\n      jumpi\n      tag_454\n      tag_198\n      jump\t// in\n    tag_454:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":59371:59398  _marketTokens[i].collection */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":59371:59412  _marketTokens[i].collection == collection */\n      sub\n        /* \"source/Marketplace.sol\":59367:59520  if (_marketTokens[i].collection == collection) {... */\n      tag_456\n      jumpi\n        /* \"source/Marketplace.sol\":59452:59465  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":59466:59467  i */\n      dup2\n        /* \"source/Marketplace.sol\":59452:59468  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_458\n      jumpi\n      tag_458\n      tag_198\n      jump\t// in\n    tag_458:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":59437:59468  ret[counter] = _marketTokens[i] */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":59452:59468  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Marketplace.sol\":59437:59468  ret[counter] = _marketTokens[i] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      dup5\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"source/Marketplace.sol\":59437:59449  ret[counter] */\n      dup4\n      mload\n        /* \"source/Marketplace.sol\":59437:59440  ret */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":59441:59448  counter */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":59437:59449  ret[counter] */\n      dup2\n      lt\n      tag_461\n      jumpi\n      tag_461\n      tag_198\n      jump\t// in\n    tag_461:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":59437:59468  ret[counter] = _marketTokens[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":59491:59500  counter++ */\n      dup2\n      dup1\n      tag_462\n      swap1\n      tag_201\n      jump\t// in\n    tag_462:\n      swap3\n      pop\n      pop\n        /* \"source/Marketplace.sol\":59367:59520  if (_marketTokens[i].collection == collection) {... */\n    tag_456:\n        /* \"source/Marketplace.sol\":59343:59346  i++ */\n      dup1\n      tag_463\n      dup2\n      tag_201\n      jump\t// in\n    tag_463:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":59297:59535  for (uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_450)\n        /* \"source/Marketplace.sol\":57981:58151  function getMyTokensAtSale(uint256 offset, uint256 limit) public view returns(SelledNFT[] memory) {... */\n    tag_160:\n        /* \"source/Marketplace.sol\":58059:58077  SelledNFT[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":58097:58143  getUserTokensAtSale(msg.sender, offset, limit) */\n      tag_264\n        /* \"source/Marketplace.sol\":58117:58127  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":58129:58135  offset */\n      dup5\n        /* \"source/Marketplace.sol\":58137:58142  limit */\n      dup5\n        /* \"source/Marketplace.sol\":58097:58116  getUserTokensAtSale */\n      tag_59\n        /* \"source/Marketplace.sol\":58097:58143  getUserTokensAtSale(msg.sender, offset, limit) */\n      jump\t// in\n        /* \"source/Marketplace.sol\":63808:64393  function deSellNFT(address collection, uint256 tokenId) public {... */\n    tag_165:\n        /* \"source/Marketplace.sol\":63882:63904  SelledNFT memory token */\n      0x00\n        /* \"source/Marketplace.sol\":63907:63943  marketTokensGet(collection, tokenId) */\n      tag_469\n        /* \"source/Marketplace.sol\":63923:63933  collection */\n      dup4\n        /* \"source/Marketplace.sol\":63935:63942  tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":63907:63922  marketTokensGet */\n      tag_105\n        /* \"source/Marketplace.sol\":63907:63943  marketTokensGet(collection, tokenId) */\n      jump\t// in\n    tag_469:\n        /* \"source/Marketplace.sol\":63963:63979  token.collection */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":63882:63943  SelledNFT memory token = marketTokensGet(collection, tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":63963:63993  token.collection != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":63954:64030  require( token.collection != address(0), \"Token not founded at marketplace\") */\n      tag_470\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16943:16945   */\n      0x20\n        /* \"source/Marketplace.sol\":63954:64030  require( token.collection != address(0), \"Token not founded at marketplace\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16925:16946   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16962:16980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16955:16985   */\n      mstore\n        /* \"#utility.yul\":17021:17055   */\n      0x546f6b656e206e6f7420666f756e646564206174206d61726b6574706c616365\n        /* \"#utility.yul\":17001:17019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16994:17056   */\n      mstore\n        /* \"#utility.yul\":17073:17091   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":63954:64030  require( token.collection != address(0), \"Token not founded at marketplace\") */\n      tag_216\n        /* \"#utility.yul\":16741:17097   */\n      jump\n        /* \"source/Marketplace.sol\":63954:64030  require( token.collection != address(0), \"Token not founded at marketplace\") */\n    tag_470:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":64044:64054  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":64044:64065  msg.sender != owner() */\n      eq\n        /* \"source/Marketplace.sol\":64041:64153  if(msg.sender != owner()) {... */\n      tag_475\n      jumpi\n        /* \"source/Marketplace.sol\":64104:64109  token */\n      dup1\n        /* \"source/Marketplace.sol\":64104:64116  token.seller */\n      0x40\n      add\n      mload\n        /* \"source/Marketplace.sol\":64090:64116  msg.sender == token.seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":64090:64100  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":64090:64116  msg.sender == token.seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"source/Marketplace.sol\":64082:64141  require(msg.sender == token.seller, \"This is not your NFT\") */\n      tag_475\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":17304:17306   */\n      0x20\n        /* \"source/Marketplace.sol\":64082:64141  require(msg.sender == token.seller, \"This is not your NFT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17286:17307   */\n      mstore\n        /* \"#utility.yul\":17343:17345   */\n      0x14\n        /* \"#utility.yul\":17323:17341   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17316:17346   */\n      mstore\n        /* \"#utility.yul\":17382:17404   */\n      0x54686973206973206e6f7420796f7572204e4654000000000000000000000000\n        /* \"#utility.yul\":17362:17380   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17355:17405   */\n      mstore\n        /* \"#utility.yul\":17422:17440   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":64082:64141  require(msg.sender == token.seller, \"This is not your NFT\") */\n      tag_216\n        /* \"#utility.yul\":17102:17446   */\n      jump\n        /* \"source/Marketplace.sol\":64082:64141  require(msg.sender == token.seller, \"This is not your NFT\") */\n    tag_475:\n        /* \"source/Marketplace.sol\":64171:64187  token.collection */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":64217:64229  token.seller */\n      0x40\n      dup1\n      dup4\n      add\n      mload\n        /* \"source/Marketplace.sol\":64231:64244  token.tokenId */\n      0x20\n      dup5\n      add\n      mload\n        /* \"source/Marketplace.sol\":64163:64245  IERC721(token.collection).transferFrom(address(this), token.seller, token.tokenId) */\n      swap2\n      mload\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":64210:64214  this */\n      address\n        /* \"source/Marketplace.sol\":64163:64245  IERC721(token.collection).transferFrom(address(this), token.seller, token.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11575:11609   */\n      mstore\n        /* \"source/Marketplace.sol\":64163:64201  IERC721(token.collection).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11645:11660   */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":11625:11643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11618:11661   */\n      mstore\n        /* \"#utility.yul\":11677:11695   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11670:11704   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"source/Marketplace.sol\":64163:64201  IERC721(token.collection).transferFrom */\n      swap1\n      swap2\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11487:11505   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":64163:64245  IERC721(token.collection).transferFrom(address(this), token.seller, token.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_479\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_479:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_481\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_481:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":64256:64304  _marketTokensDel(token.collection,token.tokenId) */\n      tag_482\n        /* \"source/Marketplace.sol\":64273:64278  token */\n      dup2\n        /* \"source/Marketplace.sol\":64273:64289  token.collection */\n      0x00\n      add\n      mload\n        /* \"source/Marketplace.sol\":64290:64295  token */\n      dup3\n        /* \"source/Marketplace.sol\":64290:64303  token.tokenId */\n      0x20\n      add\n      mload\n        /* \"source/Marketplace.sol\":64256:64272  _marketTokensDel */\n      tag_260\n        /* \"source/Marketplace.sol\":64256:64304  _marketTokensDel(token.collection,token.tokenId) */\n      jump\t// in\n    tag_482:\n        /* \"source/Marketplace.sol\":64339:64351  token.seller */\n      0x40\n      dup2\n      dup2\n      add\n      mload\n        /* \"source/Marketplace.sol\":64353:64369  token.collection */\n      dup3\n      mload\n        /* \"source/Marketplace.sol\":64371:64384  token.tokenId */\n      0x20\n      dup1\n      dup6\n      add\n      mload\n        /* \"source/Marketplace.sol\":64322:64385  WithdrawFromSale(token.seller, token.collection, token.tokenId) */\n      dup5\n      mload\n        /* \"#utility.yul\":11524:11566   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11593:11608   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":11575:11609   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11645:11660   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":11625:11643   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":11618:11661   */\n      mstore\n        /* \"#utility.yul\":11677:11695   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":11670:11704   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"source/Marketplace.sol\":64322:64385  WithdrawFromSale(token.seller, token.collection, token.tokenId) */\n      0xcfd975662262e48e8c2b68605e79d409da1b108bdc941f32d355c4cf11d35925\n      swap1\n        /* \"#utility.yul\":11502:11504   */\n      0x60\n        /* \"#utility.yul\":11487:11505   */\n      add\n        /* \"source/Marketplace.sol\":64322:64385  WithdrawFromSale(token.seller, token.collection, token.tokenId) */\n    tag_483:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":63871:64393  {... */\n      pop\n        /* \"source/Marketplace.sol\":63808:64393  function deSellNFT(address collection, uint256 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":56838:56964  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_173:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_486\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_486:\n        /* \"source/Marketplace.sol\":56925:56956  _allowedERC20 = newAllowedERC20 */\n      dup1\n      mload\n      tag_205\n      swap1\n        /* \"source/Marketplace.sol\":56925:56938  _allowedERC20 */\n      0x04\n      swap1\n        /* \"source/Marketplace.sol\":56925:56956  _allowedERC20 = newAllowedERC20 */\n      0x20\n      dup5\n      add\n      swap1\n      tag_489\n      jump\t// in\n        /* \"source/Marketplace.sol\":56105:56220  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n    tag_177:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_491\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_491:\n        /* \"source/Marketplace.sol\":56182:56194  _feeReceiver */\n      0x09\n        /* \"source/Marketplace.sol\":56182:56212  _feeReceiver = _newFeeReceiver */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":56105:56220  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_181:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_494\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_494:\n        /* \"source/Marketplace.sol\":3014:3036  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_496\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":17653:17655   */\n      0x20\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17635:17656   */\n      mstore\n        /* \"#utility.yul\":17692:17694   */\n      0x26\n        /* \"#utility.yul\":17672:17690   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17665:17695   */\n      mstore\n        /* \"#utility.yul\":17731:17765   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17711:17729   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17704:17766   */\n      mstore\n        /* \"#utility.yul\":17802:17810   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17782:17800   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17775:17811   */\n      mstore\n        /* \"#utility.yul\":17828:17847   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_216\n        /* \"#utility.yul\":17451:17853   */\n      jump\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_496:\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      tag_499\n        /* \"source/Marketplace.sol\":3109:3117  newOwner */\n      dup2\n        /* \"source/Marketplace.sol\":3090:3108  _transferOwnership */\n      tag_346\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_499:\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":57513:57774  function withdrawERC20(address erc20) public onlyOwner {... */\n    tag_185:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_501\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_501:\n        /* \"source/Marketplace.sol\":57636:57666  token.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57660:57664  this */\n      address\n        /* \"source/Marketplace.sol\":57636:57666  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7298:7372   */\n      mstore\n        /* \"source/Marketplace.sol\":57601:57606  erc20 */\n      dup2\n      swap1\n        /* \"source/Marketplace.sol\":57579:57591  IERC20 token */\n      0x00\n      swap1\n        /* \"source/Marketplace.sol\":57636:57651  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":7271:7289   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":57636:57666  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_505\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_505:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_506\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_506:\n        /* \"source/Marketplace.sol\":57618:57666  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":57677:57682  token */\n      dup2\n        /* \"source/Marketplace.sol\":57677:57691  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"source/Marketplace.sol\":57692:57699  owner() */\n      tag_507\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":57692:57699  owner() */\n    tag_507:\n        /* \"source/Marketplace.sol\":57677:57709  token.transfer(owner(), balance) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n        /* \"#utility.yul\":12556:12598   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12544:12599   */\n      swap1\n      swap2\n      and\n        /* \"source/Marketplace.sol\":57677:57709  token.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12526:12600   */\n      mstore\n        /* \"#utility.yul\":12616:12634   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12609:12643   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":12499:12517   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":57677:57709  token.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_510\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_510:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_511\n      swap2\n      swap1\n      tag_512\n      jump\t// in\n    tag_511:\n      pop\n        /* \"source/Marketplace.sol\":57725:57766  WithdrawERC20(msg.sender, erc20, balance) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":57739:57749  msg.sender */\n      caller\n        /* \"#utility.yul\":11575:11609   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11524:11566   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11645:11660   */\n      dup6\n      and\n        /* \"#utility.yul\":11640:11642   */\n      0x20\n        /* \"#utility.yul\":11625:11643   */\n      dup3\n      add\n        /* \"#utility.yul\":11618:11661   */\n      mstore\n        /* \"#utility.yul\":11677:11695   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11670:11704   */\n      dup3\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":57725:57766  WithdrawERC20(msg.sender, erc20, balance) */\n      0x33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb29\n      swap1\n        /* \"#utility.yul\":11502:11504   */\n      0x60\n        /* \"#utility.yul\":11487:11505   */\n      add\n        /* \"source/Marketplace.sol\":57725:57766  WithdrawERC20(msg.sender, erc20, balance) */\n      tag_483\n        /* \"#utility.yul\":11312:11710   */\n      jump\n        /* \"source/Marketplace.sol\":2184:2316  function _checkOwner() internal view virtual {... */\n    tag_188:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n        /* \"source/Marketplace.sol\":2248:2271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      and\n        /* \"source/Marketplace.sol\":736:746  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":2248:2271  owner() == _msgSender() */\n      eq\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":18342:18344   */\n      0x20\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18324:18345   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18361:18379   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18354:18384   */\n      mstore\n        /* \"#utility.yul\":18420:18454   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18400:18418   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18393:18455   */\n      mstore\n        /* \"#utility.yul\":18472:18490   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_216\n        /* \"#utility.yul\":18140:18496   */\n      jump\n        /* \"source/Marketplace.sol\":35741:35839  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_244:\n        /* \"source/Marketplace.sol\":35799:35806  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_264\n        /* \"source/Marketplace.sol\":35830:35831  b */\n      dup3\n        /* \"source/Marketplace.sol\":35826:35827  a */\n      dup5\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_523\n      jump\t// in\n        /* \"source/Marketplace.sol\":35342:35440  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_245:\n        /* \"source/Marketplace.sol\":35400:35407  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_264\n        /* \"source/Marketplace.sol\":35431:35432  b */\n      dup3\n        /* \"source/Marketplace.sol\":35427:35428  a */\n      dup5\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_526\n      jump\t// in\n        /* \"source/Marketplace.sol\":34985:35083  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_249:\n        /* \"source/Marketplace.sol\":35043:35050  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_264\n        /* \"source/Marketplace.sol\":35074:35075  b */\n      dup3\n        /* \"source/Marketplace.sol\":35070:35071  a */\n      dup5\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_529\n      jump\t// in\n        /* \"source/Marketplace.sol\":6528:6733  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_251:\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11524:11566   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11593:11608   */\n      dup6\n      dup2\n      and\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11575:11609   */\n      mstore\n        /* \"#utility.yul\":11645:11660   */\n      dup5\n      and\n        /* \"#utility.yul\":11625:11643   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11618:11661   */\n      mstore\n        /* \"#utility.yul\":11677:11695   */\n      0x64\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11670:11704   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":11487:11505   */\n      0x84\n      swap1\n      swap2\n      add\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":6679:6706  token.transferFrom.selector */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      or\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_531\n      swap1\n        /* \"source/Marketplace.sol\":6649:6654  token */\n      dup6\n      swap1\n        /* \"source/Marketplace.sol\":6629:6648  _callOptionalReturn */\n      tag_533\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_531:\n        /* \"source/Marketplace.sol\":6528:6733  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":54286:55463  function _marketTokensDel(address collection, uint256 tokenId) internal {... */\n    tag_260:\n        /* \"source/Marketplace.sol\":54388:54401  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54402:54422  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":54388:54452  _marketTokens[_marketTokens.length - 1].collection == collection */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap2\n        /* \"source/Marketplace.sol\":54388:54401  _marketTokens */\n      swap1\n        /* \"source/Marketplace.sol\":54402:54426  _marketTokens.length - 1 */\n      tag_535\n      swap1\n        /* \"source/Marketplace.sol\":54425:54426  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":54402:54426  _marketTokens.length - 1 */\n      tag_529\n      jump\t// in\n    tag_535:\n        /* \"source/Marketplace.sol\":54388:54427  _marketTokens[_marketTokens.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_537\n      jumpi\n      tag_537\n      tag_198\n      jump\t// in\n    tag_537:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":54388:54438  _marketTokens[_marketTokens.length - 1].collection */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":54388:54452  _marketTokens[_marketTokens.length - 1].collection == collection */\n      eq\n        /* \"source/Marketplace.sol\":54387:54543  (_marketTokens[_marketTokens.length - 1].collection == collection)... */\n      dup1\n      iszero\n      tag_539\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":54484:54497  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54498:54518  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":54535:54542  tokenId */\n      dup3\n      swap2\n        /* \"source/Marketplace.sol\":54484:54497  _marketTokens */\n      swap1\n        /* \"source/Marketplace.sol\":54498:54522  _marketTokens.length - 1 */\n      tag_540\n      swap1\n        /* \"source/Marketplace.sol\":54521:54522  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":54498:54522  _marketTokens.length - 1 */\n      tag_529\n      jump\t// in\n    tag_540:\n        /* \"source/Marketplace.sol\":54484:54523  _marketTokens[_marketTokens.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_542\n      jumpi\n      tag_542\n      tag_198\n      jump\t// in\n    tag_542:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":54484:54531  _marketTokens[_marketTokens.length - 1].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":54484:54542  _marketTokens[_marketTokens.length - 1].tokenId == tokenId */\n      eq\n        /* \"source/Marketplace.sol\":54387:54543  (_marketTokens[_marketTokens.length - 1].collection == collection)... */\n    tag_539:\n        /* \"source/Marketplace.sol\":54369:54837  if (... */\n      iszero\n      tag_544\n      jumpi\n        /* \"source/Marketplace.sol\":54587:54600  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54601:54621  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":54570:54586  _userTokensCount */\n      0x07\n      swap2\n        /* \"source/Marketplace.sol\":54570:54633  _userTokensCount[_marketTokens[_marketTokens.length -1].seller] */\n      0x00\n      swap2\n        /* \"source/Marketplace.sol\":54601:54624  _marketTokens.length -1 */\n      tag_545\n      swap1\n        /* \"source/Marketplace.sol\":54623:54624  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":54601:54624  _marketTokens.length -1 */\n      tag_529\n      jump\t// in\n    tag_545:\n        /* \"source/Marketplace.sol\":54587:54625  _marketTokens[_marketTokens.length -1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_547\n      jumpi\n      tag_547\n      tag_198\n      jump\t// in\n    tag_547:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":54587:54632  _marketTokens[_marketTokens.length -1].seller */\n      0x02\n        /* \"source/Marketplace.sol\":54587:54625  _marketTokens[_marketTokens.length -1] */\n      0x06\n      swap1\n      swap4\n      mul\n      add\n        /* \"source/Marketplace.sol\":54587:54632  _marketTokens[_marketTokens.length -1].seller */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":54570:54633  _userTokensCount[_marketTokens[_marketTokens.length -1].seller] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":54570:54635  _userTokensCount[_marketTokens[_marketTokens.length -1].seller]-- */\n      dup1\n      sload\n      swap2\n      tag_549\n      dup4\n      tag_550\n      jump\t// in\n    tag_549:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54680:54693  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54694:54714  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":54650:54679  _userTokensCountByCollections */\n      0x08\n      swap2\n        /* \"source/Marketplace.sol\":54650:54726  _userTokensCountByCollections[_marketTokens[_marketTokens.length -1].seller] */\n      0x00\n      swap2\n        /* \"source/Marketplace.sol\":54694:54717  _marketTokens.length -1 */\n      tag_551\n      swap1\n        /* \"source/Marketplace.sol\":54716:54717  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":54694:54717  _marketTokens.length -1 */\n      tag_529\n      jump\t// in\n    tag_551:\n        /* \"source/Marketplace.sol\":54680:54718  _marketTokens[_marketTokens.length -1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_553\n      jumpi\n      tag_553\n      tag_198\n      jump\t// in\n    tag_553:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":54680:54725  _marketTokens[_marketTokens.length -1].seller */\n      0x02\n        /* \"source/Marketplace.sol\":54680:54718  _marketTokens[_marketTokens.length -1] */\n      0x06\n      swap1\n      swap4\n      mul\n      add\n        /* \"source/Marketplace.sol\":54680:54725  _marketTokens[_marketTokens.length -1].seller */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":54650:54726  _userTokensCountByCollections[_marketTokens[_marketTokens.length -1].seller] */\n      dup5\n      mstore\n      dup4\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x40\n      swap3\n      dup4\n      add\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":54650:54738  _userTokensCountByCollections[_marketTokens[_marketTokens.length -1].seller][collection] */\n      swap4\n      dup7\n      and\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      mstore\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":54650:54740  _userTokensCountByCollections[_marketTokens[_marketTokens.length -1].seller][collection]-- */\n      dup1\n      sload\n      swap2\n      tag_555\n      dup4\n      tag_550\n      jump\t// in\n    tag_555:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54755:54789  _collectionTokensCount[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":54755:54777  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":54755:54789  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":54755:54791  _collectionTokensCount[collection]-- */\n      dup1\n      sload\n      swap2\n      tag_556\n      dup4\n      tag_550\n      jump\t// in\n    tag_556:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":54806:54819  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54806:54825  _marketTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_558\n      jumpi\n      tag_558\n      tag_559\n      jump\t// in\n    tag_558:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      0x06\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap4\n      add\n      swap3\n      dup4\n      mul\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x05\n      add\n      sstore\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":54369:54837  if (... */\n    tag_544:\n        /* \"source/Marketplace.sol\":54851:54860  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":54847:55456  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n    tag_561:\n        /* \"source/Marketplace.sol\":54870:54883  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54870:54890  _marketTokens.length */\n      sload\n        /* \"source/Marketplace.sol\":54866:54890  i < _marketTokens.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":54847:55456  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      iszero\n      tag_562\n      jumpi\n        /* \"source/Marketplace.sol\":54966:54976  collection */\n      dup3\n        /* \"source/Marketplace.sol\":54935:54976  _marketTokens[i].collection == collection */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":54935:54948  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54949:54950  i */\n      dup3\n        /* \"source/Marketplace.sol\":54935:54951  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_565\n      jumpi\n      tag_565\n      tag_198\n      jump\t// in\n    tag_565:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Marketplace.sol\":54935:54962  _marketTokens[i].collection */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":54935:54976  _marketTokens[i].collection == collection */\n      eq\n        /* \"source/Marketplace.sol\":54934:55052  (_marketTokens[i].collection == collection)... */\n      dup1\n      iszero\n      tag_567\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":55044:55051  tokenId */\n      dup2\n        /* \"source/Marketplace.sol\":55016:55029  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":55030:55031  i */\n      dup3\n        /* \"source/Marketplace.sol\":55016:55032  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_569\n      jumpi\n      tag_569\n      tag_198\n      jump\t// in\n    tag_569:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":55016:55040  _marketTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":55016:55051  _marketTokens[i].tokenId == tokenId */\n      eq\n        /* \"source/Marketplace.sol\":54934:55052  (_marketTokens[i].collection == collection)... */\n    tag_567:\n        /* \"source/Marketplace.sol\":54912:55445  if (... */\n      iszero\n      tag_571\n      jumpi\n        /* \"source/Marketplace.sol\":55087:55103  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":55087:55128  _userTokensCount[_marketTokens[i].seller] */\n      0x00\n        /* \"source/Marketplace.sol\":55104:55117  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":55118:55119  i */\n      dup4\n        /* \"source/Marketplace.sol\":55104:55120  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_573\n      jumpi\n      tag_573\n      tag_198\n      jump\t// in\n    tag_573:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":55104:55127  _marketTokens[i].seller */\n      0x02\n        /* \"source/Marketplace.sol\":55104:55120  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      add\n        /* \"source/Marketplace.sol\":55104:55127  _marketTokens[i].seller */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":55087:55128  _userTokensCount[_marketTokens[i].seller] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":55087:55130  _userTokensCount[_marketTokens[i].seller]-- */\n      dup1\n      sload\n      swap2\n      tag_575\n      dup4\n      tag_550\n      jump\t// in\n    tag_575:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":55149:55178  _userTokensCountByCollections */\n      0x08\n        /* \"source/Marketplace.sol\":55149:55203  _userTokensCountByCollections[_marketTokens[i].seller] */\n      0x00\n        /* \"source/Marketplace.sol\":55179:55192  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":55193:55194  i */\n      dup4\n        /* \"source/Marketplace.sol\":55179:55195  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_577\n      jumpi\n      tag_577\n      tag_198\n      jump\t// in\n    tag_577:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":55179:55202  _marketTokens[i].seller */\n      0x02\n        /* \"source/Marketplace.sol\":55179:55195  _marketTokens[i] */\n      0x06\n      swap1\n      swap4\n      mul\n      add\n        /* \"source/Marketplace.sol\":55179:55202  _marketTokens[i].seller */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":55149:55203  _userTokensCountByCollections[_marketTokens[i].seller] */\n      dup5\n      mstore\n      dup4\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x40\n      swap3\n      dup4\n      add\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":55149:55215  _userTokensCountByCollections[_marketTokens[i].seller][collection] */\n      swap4\n      dup8\n      and\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      mstore\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":55149:55217  _userTokensCountByCollections[_marketTokens[i].seller][collection]-- */\n      dup1\n      sload\n      swap2\n      tag_579\n      dup4\n      tag_550\n      jump\t// in\n    tag_579:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":55236:55270  _collectionTokensCount[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55236:55258  _collectionTokensCount */\n      0x06\n        /* \"source/Marketplace.sol\":55236:55270  _collectionTokensCount[collection] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":55236:55272  _collectionTokensCount[collection]-- */\n      dup1\n      sload\n      swap2\n      tag_580\n      dup4\n      tag_550\n      jump\t// in\n    tag_580:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":55310:55323  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":55324:55344  _marketTokens.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":55324:55347  _marketTokens.length -1 */\n      tag_581\n      swap1\n        /* \"source/Marketplace.sol\":55346:55347  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":55324:55347  _marketTokens.length -1 */\n      tag_529\n      jump\t// in\n    tag_581:\n        /* \"source/Marketplace.sol\":55310:55348  _marketTokens[_marketTokens.length -1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_583\n      jumpi\n      tag_583\n      tag_198\n      jump\t// in\n    tag_583:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"source/Marketplace.sol\":55291:55304  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":55305:55306  i */\n      dup3\n        /* \"source/Marketplace.sol\":55291:55307  _marketTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_586\n      jumpi\n      tag_586\n      tag_198\n      jump\t// in\n    tag_586:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"source/Marketplace.sol\":55291:55348  _marketTokens[i] = _marketTokens[_marketTokens.length -1] */\n      dup3\n      sload\n        /* \"source/Marketplace.sol\":55291:55307  _marketTokens[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"source/Marketplace.sol\":55291:55348  _marketTokens[i] = _marketTokens[_marketTokens.length -1] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup4\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap2\n      dup3\n      and\n      or\n      dup3\n      sstore\n      0x01\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      sstore\n      0x02\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      dup1\n      sload\n      swap2\n      dup6\n      and\n      swap2\n      dup4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x03\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      sstore\n      0x04\n      dup1\n      dup6\n      add\n      sload\n      swap1\n      dup4\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap5\n      and\n      swap2\n      and\n      or\n      swap1\n      swap2\n      sstore\n      0x05\n      swap2\n      dup3\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n        /* \"source/Marketplace.sol\":55367:55386  _marketTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_589\n      jumpi\n      tag_589\n      tag_559\n      jump\t// in\n    tag_589:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      0x06\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap4\n      add\n      swap3\n      dup4\n      mul\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x05\n      add\n      sstore\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54286:55463  function _marketTokensDel(address collection, uint256 tokenId) internal {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":54912:55445  if (... */\n    tag_571:\n        /* \"source/Marketplace.sol\":54892:54895  i++ */\n      dup1\n      tag_591\n      dup2\n      tag_201\n      jump\t// in\n    tag_591:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54847:55456  for(uint256 i = 0; i < _marketTokens.length; i++) {... */\n      jump(tag_561)\n    tag_562:\n      pop\n        /* \"source/Marketplace.sol\":54286:55463  function _marketTokensDel(address collection, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_346:\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      0x00\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      swap1\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"source/Marketplace.sol\":3349:3477  {... */\n      pop\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":53995:54280  function _marketTokensAdd(SelledNFT memory lotInfo) internal {... */\n    tag_387:\n        /* \"source/Marketplace.sol\":54067:54080  _marketTokens */\n      0x05\n        /* \"source/Marketplace.sol\":54067:54094  _marketTokens.push(lotInfo) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      dup3\n      mload\n      0x06\n      swap2\n      dup3\n      mul\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      dup2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap4\n      dup5\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n      0x20\n      dup1\n      dup9\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1\n      dup6\n      add\n      sstore\n      0x40\n      dup1\n      dup10\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2\n      dup7\n      add\n      dup1\n      sload\n      swap2\n      dup9\n      and\n      swap2\n      dup6\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x60\n      dup10\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3\n      dup7\n      add\n      sstore\n      0x80\n      dup10\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4\n      dup7\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap8\n      and\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap5\n      sstore\n      0xa0\n      dup8\n      add\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"source/Marketplace.sol\":54105:54147  _collectionTokensCount[lotInfo.collection] */\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":54105:54149  _collectionTokensCount[lotInfo.collection]++ */\n      dup1\n      sload\n      swap2\n      tag_595\n      dup4\n      tag_201\n      jump\t// in\n    tag_595:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54177:54191  lotInfo.seller */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n        /* \"source/Marketplace.sol\":54160:54192  _userTokensCount[lotInfo.seller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":54160:54176  _userTokensCount */\n      0x07\n        /* \"source/Marketplace.sol\":54160:54192  _userTokensCount[lotInfo.seller] */\n      0x20\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":54160:54194  _userTokensCount[lotInfo.seller]++ */\n      dup1\n      sload\n      swap2\n      tag_596\n      dup4\n      tag_201\n      jump\t// in\n    tag_596:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54235:54249  lotInfo.seller */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n        /* \"source/Marketplace.sol\":54205:54250  _userTokensCountByCollections[lotInfo.seller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":54205:54234  _userTokensCountByCollections */\n      0x08\n        /* \"source/Marketplace.sol\":54205:54250  _userTokensCountByCollections[lotInfo.seller] */\n      0x20\n      swap1\n      dup2\n      mstore\n      dup4\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":54251:54269  lotInfo.collection */\n      dup6\n      mload\n        /* \"source/Marketplace.sol\":54205:54270  _userTokensCountByCollections[lotInfo.seller][lotInfo.collection] */\n      swap1\n      swap4\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":54205:54272  _userTokensCountByCollections[lotInfo.seller][lotInfo.collection]++ */\n      dup1\n      sload\n      swap2\n      tag_597\n      dup4\n      tag_201\n      jump\t// in\n    tag_597:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":53995:54280  function _marketTokensAdd(SelledNFT memory lotInfo) internal {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":9231:9947  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_533:\n        /* \"source/Marketplace.sol\":9655:9678  bytes memory returndata */\n      0x00\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_600\n        /* \"source/Marketplace.sol\":9709:9713  data */\n      dup3\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":9689:9694  token */\n      dup6\n        /* \"source/Marketplace.sol\":9681:9708  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_601\n      swap1\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_600:\n        /* \"source/Marketplace.sol\":9765:9782  returndata.length */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":9655:9750  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":9765:9786  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":9761:9940  if (returndata.length > 0) {... */\n      tag_562\n      jumpi\n        /* \"source/Marketplace.sol\":9862:9872  returndata */\n      dup1\n        /* \"source/Marketplace.sol\":9851:9881  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_603\n      swap2\n      swap1\n      tag_512\n      jump\t// in\n    tag_603:\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_562\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":19678:19680   */\n      0x20\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19660:19681   */\n      mstore\n        /* \"#utility.yul\":19717:19719   */\n      0x2a\n        /* \"#utility.yul\":19697:19715   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19690:19720   */\n      mstore\n        /* \"#utility.yul\":19756:19790   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":19736:19754   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19729:19791   */\n      mstore\n        /* \"#utility.yul\":19827:19839   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19807:19825   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19800:19840   */\n      mstore\n        /* \"#utility.yul\":19857:19876   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_216\n        /* \"#utility.yul\":19476:19882   */\n      jump\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n    tag_601:\n        /* \"source/Marketplace.sol\":42949:42961  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_608\n        /* \"source/Marketplace.sol\":43003:43009  target */\n      dup5\n        /* \"source/Marketplace.sol\":43011:43015  data */\n      dup5\n        /* \"source/Marketplace.sol\":43017:43018  0 */\n      0x00\n        /* \"source/Marketplace.sol\":43020:43032  errorMessage */\n      dup6\n        /* \"source/Marketplace.sol\":42981:43002  functionCallWithValue */\n      tag_609\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_608:\n        /* \"source/Marketplace.sol\":42974:43033  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n    tag_609:\n        /* \"source/Marketplace.sol\":44068:44080  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":44126:44131  value */\n      dup3\n        /* \"source/Marketplace.sol\":44101:44122  address(this).balance */\n      selfbalance\n        /* \"source/Marketplace.sol\":44101:44131  address(this).balance >= value */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_611\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":20089:20091   */\n      0x20\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20071:20092   */\n      mstore\n        /* \"#utility.yul\":20128:20130   */\n      0x26\n        /* \"#utility.yul\":20108:20126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20101:20131   */\n      mstore\n        /* \"#utility.yul\":20167:20201   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":20147:20165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20140:20202   */\n      mstore\n        /* \"#utility.yul\":20238:20246   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20218:20236   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20211:20247   */\n      mstore\n        /* \"#utility.yul\":20264:20283   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_216\n        /* \"#utility.yul\":19887:20289   */\n      jump\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_611:\n        /* \"source/Marketplace.sol\":44186:44198  bool success */\n      0x00\n        /* \"source/Marketplace.sol\":44200:44223  bytes memory returndata */\n      dup1\n        /* \"source/Marketplace.sol\":44227:44233  target */\n      dup7\n        /* \"source/Marketplace.sol\":44227:44238  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Marketplace.sol\":44246:44251  value */\n      dup6\n        /* \"source/Marketplace.sol\":44253:44257  data */\n      dup8\n        /* \"source/Marketplace.sol\":44227:44258  target.call{value: value}(data) */\n      mload(0x40)\n      tag_614\n      swap2\n      swap1\n      tag_615\n      jump\t// in\n    tag_614:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_618\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_617)\n    tag_618:\n      0x60\n      swap2\n      pop\n    tag_617:\n      pop\n        /* \"source/Marketplace.sol\":44185:44258  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_619\n        /* \"source/Marketplace.sol\":44303:44309  target */\n      dup8\n        /* \"source/Marketplace.sol\":44311:44318  success */\n      dup4\n        /* \"source/Marketplace.sol\":44320:44330  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":44332:44344  errorMessage */\n      dup8\n        /* \"source/Marketplace.sol\":44276:44302  verifyCallResultFromTarget */\n      tag_620\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_619:\n        /* \"source/Marketplace.sol\":44269:44345  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":46471:47115  function verifyCallResultFromTarget(... */\n    tag_620:\n        /* \"source/Marketplace.sol\":46656:46668  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":46685:46692  success */\n      dup4\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n      iszero\n      tag_622\n      jumpi\n        /* \"source/Marketplace.sol\":46713:46723  returndata */\n      dup3\n        /* \"source/Marketplace.sol\":46713:46730  returndata.length */\n      mload\n        /* \"source/Marketplace.sol\":46734:46735  0 */\n      0x00\n        /* \"source/Marketplace.sol\":46713:46735  returndata.length == 0 */\n      sub\n        /* \"source/Marketplace.sol\":46709:46999  if (returndata.length == 0) {... */\n      tag_626\n      jumpi\n        /* \"source/Marketplace.sol\":40351:40370  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      extcodesize\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_626\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":21043:21045   */\n      0x20\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21025:21046   */\n      mstore\n        /* \"#utility.yul\":21082:21084   */\n      0x1d\n        /* \"#utility.yul\":21062:21080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21055:21085   */\n      mstore\n        /* \"#utility.yul\":21121:21152   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":21101:21119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21094:21153   */\n      mstore\n        /* \"#utility.yul\":21170:21188   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_216\n        /* \"#utility.yul\":20841:21194   */\n      jump\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n    tag_626:\n      pop\n        /* \"source/Marketplace.sol\":47020:47030  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":47013:47030  return returndata */\n      jump(tag_608)\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n    tag_622:\n        /* \"source/Marketplace.sol\":47063:47096  _revert(returndata, errorMessage) */\n      tag_608\n        /* \"source/Marketplace.sol\":47071:47081  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":47083:47095  errorMessage */\n      dup4\n        /* \"source/Marketplace.sol\":47818:47835  returndata.length */\n      dup2\n      mload\n        /* \"source/Marketplace.sol\":47818:47839  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n      tag_634\n      jumpi\n        /* \"source/Marketplace.sol\":48050:48060  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":48044:48061  mload(returndata) */\n      mload\n        /* \"source/Marketplace.sol\":48107:48122  returndata_size */\n      dup1\n        /* \"source/Marketplace.sol\":48094:48104  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":48090:48092  32 */\n      0x20\n        /* \"source/Marketplace.sol\":48086:48105  add(32, returndata) */\n      add\n        /* \"source/Marketplace.sol\":48079:48123  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n    tag_634:\n        /* \"source/Marketplace.sol\":48177:48189  errorMessage */\n      dup1\n        /* \"source/Marketplace.sol\":48170:48190  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_637\n      jump\t// in\n    tag_203:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_499\n      swap2\n      swap1\n      tag_640\n      jump\t// in\n    tag_489:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_643\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_642:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_643\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_642)\n    tag_643:\n      pop\n      tag_401\n      swap3\n      swap2\n      pop\n    tag_640:\n    tag_645:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_401\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_645)\n        /* \"#utility.yul\":14:194   */\n    tag_43:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_654:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:383   */\n    tag_267:\n        /* \"#utility.yul\":251:328   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":248:249   */\n      0x00\n        /* \"#utility.yul\":241:329   */\n      mstore\n        /* \"#utility.yul\":348:352   */\n      0x41\n        /* \"#utility.yul\":345:346   */\n      0x04\n        /* \"#utility.yul\":338:353   */\n      mstore\n        /* \"#utility.yul\":372:376   */\n      0x24\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":362:377   */\n      revert\n        /* \"#utility.yul\":388:542   */\n    tag_647:\n        /* \"#utility.yul\":474:516   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":467:472   */\n      dup2\n        /* \"#utility.yul\":463:517   */\n      and\n        /* \"#utility.yul\":456:461   */\n      dup2\n        /* \"#utility.yul\":453:518   */\n      eq\n        /* \"#utility.yul\":443:536   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":547:681   */\n    tag_648:\n        /* \"#utility.yul\":615:635   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":644:675   */\n      tag_659\n        /* \"#utility.yul\":615:635   */\n      dup2\n        /* \"#utility.yul\":644:675   */\n      tag_647\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":547:681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":686:1866   */\n    tag_48:\n        /* \"#utility.yul\":770:776   */\n      0x00\n        /* \"#utility.yul\":801:803   */\n      0x20\n        /* \"#utility.yul\":844:846   */\n      dup1\n        /* \"#utility.yul\":832:841   */\n      dup4\n        /* \"#utility.yul\":823:830   */\n      dup6\n        /* \"#utility.yul\":819:842   */\n      sub\n        /* \"#utility.yul\":815:847   */\n      slt\n        /* \"#utility.yul\":812:864   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":860:861   */\n      0x00\n        /* \"#utility.yul\":857:858   */\n      dup1\n        /* \"#utility.yul\":850:862   */\n      revert\n        /* \"#utility.yul\":812:864   */\n    tag_661:\n        /* \"#utility.yul\":900:909   */\n      dup3\n        /* \"#utility.yul\":887:910   */\n      calldataload\n        /* \"#utility.yul\":929:947   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":970:972   */\n      dup1\n        /* \"#utility.yul\":962:968   */\n      dup3\n        /* \"#utility.yul\":959:973   */\n      gt\n        /* \"#utility.yul\":956:990   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":986:987   */\n      0x00\n        /* \"#utility.yul\":983:984   */\n      dup1\n        /* \"#utility.yul\":976:988   */\n      revert\n        /* \"#utility.yul\":956:990   */\n    tag_662:\n        /* \"#utility.yul\":1024:1030   */\n      dup2\n        /* \"#utility.yul\":1013:1022   */\n      dup6\n        /* \"#utility.yul\":1009:1031   */\n      add\n        /* \"#utility.yul\":999:1031   */\n      swap2\n      pop\n        /* \"#utility.yul\":1069:1076   */\n      dup6\n        /* \"#utility.yul\":1062:1066   */\n      0x1f\n        /* \"#utility.yul\":1058:1060   */\n      dup4\n        /* \"#utility.yul\":1054:1067   */\n      add\n        /* \"#utility.yul\":1050:1077   */\n      slt\n        /* \"#utility.yul\":1040:1095   */\n      tag_663\n      jumpi\n        /* \"#utility.yul\":1091:1092   */\n      0x00\n        /* \"#utility.yul\":1088:1089   */\n      dup1\n        /* \"#utility.yul\":1081:1093   */\n      revert\n        /* \"#utility.yul\":1040:1095   */\n    tag_663:\n        /* \"#utility.yul\":1127:1129   */\n      dup2\n        /* \"#utility.yul\":1114:1130   */\n      calldataload\n        /* \"#utility.yul\":1149:1151   */\n      dup2\n        /* \"#utility.yul\":1145:1147   */\n      dup2\n        /* \"#utility.yul\":1142:1152   */\n      gt\n        /* \"#utility.yul\":1139:1175   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":1155:1173   */\n      tag_665\n      tag_267\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":1201:1203   */\n      dup1\n        /* \"#utility.yul\":1198:1199   */\n      0x05\n        /* \"#utility.yul\":1194:1204   */\n      shl\n        /* \"#utility.yul\":1233:1235   */\n      0x40\n        /* \"#utility.yul\":1227:1236   */\n      mload\n        /* \"#utility.yul\":1292:1358   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1287:1289   */\n      0x3f\n        /* \"#utility.yul\":1283:1285   */\n      dup4\n        /* \"#utility.yul\":1279:1290   */\n      add\n        /* \"#utility.yul\":1275:1359   */\n      and\n        /* \"#utility.yul\":1267:1273   */\n      dup2\n        /* \"#utility.yul\":1263:1360   */\n      add\n        /* \"#utility.yul\":1410:1416   */\n      dup2\n        /* \"#utility.yul\":1398:1408   */\n      dup2\n        /* \"#utility.yul\":1395:1417   */\n      lt\n        /* \"#utility.yul\":1390:1392   */\n      dup6\n        /* \"#utility.yul\":1378:1388   */\n      dup3\n        /* \"#utility.yul\":1375:1393   */\n      gt\n        /* \"#utility.yul\":1372:1418   */\n      or\n        /* \"#utility.yul\":1369:1441   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":1421:1439   */\n      tag_667\n      tag_267\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":1457:1459   */\n      0x40\n        /* \"#utility.yul\":1450:1472   */\n      mstore\n        /* \"#utility.yul\":1507:1525   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":1541:1556   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":1583:1594   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":1579:1599   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":1611:1630   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":1608:1647   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1640:1641   */\n      dup1\n        /* \"#utility.yul\":1633:1645   */\n      revert\n        /* \"#utility.yul\":1608:1647   */\n    tag_668:\n        /* \"#utility.yul\":1667:1678   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1687:1835   */\n    tag_669:\n        /* \"#utility.yul\":1703:1709   */\n      dup3\n        /* \"#utility.yul\":1698:1701   */\n      dup6\n        /* \"#utility.yul\":1695:1710   */\n      lt\n        /* \"#utility.yul\":1687:1835   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":1769:1792   */\n      tag_672\n        /* \"#utility.yul\":1788:1791   */\n      dup6\n        /* \"#utility.yul\":1769:1792   */\n      tag_648\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":1757:1793   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1720:1732   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1813:1825   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":1687:1835   */\n      jump(tag_669)\n    tag_671:\n        /* \"#utility.yul\":1854:1860   */\n      swap9\n        /* \"#utility.yul\":686:1866   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1871:2186   */\n    tag_53:\n        /* \"#utility.yul\":1939:1945   */\n      0x00\n        /* \"#utility.yul\":1947:1953   */\n      dup1\n        /* \"#utility.yul\":2000:2002   */\n      0x40\n        /* \"#utility.yul\":1988:1997   */\n      dup4\n        /* \"#utility.yul\":1979:1986   */\n      dup6\n        /* \"#utility.yul\":1975:1998   */\n      sub\n        /* \"#utility.yul\":1971:2003   */\n      slt\n        /* \"#utility.yul\":1968:2020   */\n      iszero\n      tag_674\n      jumpi\n        /* \"#utility.yul\":2016:2017   */\n      0x00\n        /* \"#utility.yul\":2013:2014   */\n      dup1\n        /* \"#utility.yul\":2006:2018   */\n      revert\n        /* \"#utility.yul\":1968:2020   */\n    tag_674:\n        /* \"#utility.yul\":2055:2064   */\n      dup3\n        /* \"#utility.yul\":2042:2065   */\n      calldataload\n        /* \"#utility.yul\":2074:2105   */\n      tag_675\n        /* \"#utility.yul\":2099:2104   */\n      dup2\n        /* \"#utility.yul\":2074:2105   */\n      tag_647\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":2124:2129   */\n      swap5\n        /* \"#utility.yul\":2176:2178   */\n      0x20\n        /* \"#utility.yul\":2161:2179   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2148:2180   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1871:2186   */\n      jump\t// out\n        /* \"#utility.yul\":2191:2574   */\n    tag_58:\n        /* \"#utility.yul\":2268:2274   */\n      0x00\n        /* \"#utility.yul\":2276:2282   */\n      dup1\n        /* \"#utility.yul\":2284:2290   */\n      0x00\n        /* \"#utility.yul\":2337:2339   */\n      0x60\n        /* \"#utility.yul\":2325:2334   */\n      dup5\n        /* \"#utility.yul\":2316:2323   */\n      dup7\n        /* \"#utility.yul\":2312:2335   */\n      sub\n        /* \"#utility.yul\":2308:2340   */\n      slt\n        /* \"#utility.yul\":2305:2357   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":2353:2354   */\n      0x00\n        /* \"#utility.yul\":2350:2351   */\n      dup1\n        /* \"#utility.yul\":2343:2355   */\n      revert\n        /* \"#utility.yul\":2305:2357   */\n    tag_677:\n        /* \"#utility.yul\":2392:2401   */\n      dup4\n        /* \"#utility.yul\":2379:2402   */\n      calldataload\n        /* \"#utility.yul\":2411:2442   */\n      tag_678\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2411:2442   */\n      tag_647\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":2461:2466   */\n      swap6\n        /* \"#utility.yul\":2513:2515   */\n      0x20\n        /* \"#utility.yul\":2498:2516   */\n      dup6\n      add\n        /* \"#utility.yul\":2485:2517   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2564:2566   */\n      0x40\n        /* \"#utility.yul\":2549:2567   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2536:2568   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2191:2574   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3755   */\n    tag_61:\n        /* \"#utility.yul\":3271:3273   */\n      0x20\n        /* \"#utility.yul\":3323:3344   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3393:3406   */\n      dup3\n      mload\n        /* \"#utility.yul\":3296:3314   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3415:3437   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3242:3246   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3271:3273   */\n      swap1\n        /* \"#utility.yul\":3494:3509   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3468:3470   */\n      0x40\n        /* \"#utility.yul\":3453:3471   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3242:3246   */\n      dup5\n        /* \"#utility.yul\":3537:3729   */\n    tag_681:\n        /* \"#utility.yul\":3551:3557   */\n      dup2\n        /* \"#utility.yul\":3548:3549   */\n      dup2\n        /* \"#utility.yul\":3545:3558   */\n      lt\n        /* \"#utility.yul\":3537:3729   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":3600:3647   */\n      tag_684\n        /* \"#utility.yul\":3643:3646   */\n      dup4\n        /* \"#utility.yul\":3634:3640   */\n      dup6\n        /* \"#utility.yul\":3628:3641   */\n      mload\n        /* \"#utility.yul\":2652:2694   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2733:2735   */\n      dup1\n        /* \"#utility.yul\":2725:2730   */\n      dup3\n        /* \"#utility.yul\":2719:2731   */\n      mload\n        /* \"#utility.yul\":2715:2736   */\n      and\n        /* \"#utility.yul\":2710:2713   */\n      dup4\n        /* \"#utility.yul\":2703:2737   */\n      mstore\n        /* \"#utility.yul\":2786:2790   */\n      0x20\n        /* \"#utility.yul\":2779:2784   */\n      dup3\n        /* \"#utility.yul\":2775:2791   */\n      add\n        /* \"#utility.yul\":2769:2792   */\n      mload\n        /* \"#utility.yul\":2762:2766   */\n      0x20\n        /* \"#utility.yul\":2757:2760   */\n      dup5\n        /* \"#utility.yul\":2753:2767   */\n      add\n        /* \"#utility.yul\":2746:2793   */\n      mstore\n        /* \"#utility.yul\":2854:2856   */\n      dup1\n        /* \"#utility.yul\":2846:2850   */\n      0x40\n        /* \"#utility.yul\":2839:2844   */\n      dup4\n        /* \"#utility.yul\":2835:2851   */\n      add\n        /* \"#utility.yul\":2829:2852   */\n      mload\n        /* \"#utility.yul\":2825:2857   */\n      and\n        /* \"#utility.yul\":2818:2822   */\n      0x40\n        /* \"#utility.yul\":2813:2816   */\n      dup5\n        /* \"#utility.yul\":2809:2823   */\n      add\n        /* \"#utility.yul\":2802:2858   */\n      mstore\n        /* \"#utility.yul\":2907:2911   */\n      0x60\n        /* \"#utility.yul\":2900:2905   */\n      dup3\n        /* \"#utility.yul\":2896:2912   */\n      add\n        /* \"#utility.yul\":2890:2913   */\n      mload\n        /* \"#utility.yul\":2883:2887   */\n      0x60\n        /* \"#utility.yul\":2878:2881   */\n      dup5\n        /* \"#utility.yul\":2874:2888   */\n      add\n        /* \"#utility.yul\":2867:2914   */\n      mstore\n        /* \"#utility.yul\":2975:2977   */\n      dup1\n        /* \"#utility.yul\":2967:2971   */\n      0x80\n        /* \"#utility.yul\":2960:2965   */\n      dup4\n        /* \"#utility.yul\":2956:2972   */\n      add\n        /* \"#utility.yul\":2950:2973   */\n      mload\n        /* \"#utility.yul\":2946:2978   */\n      and\n        /* \"#utility.yul\":2939:2943   */\n      0x80\n        /* \"#utility.yul\":2934:2937   */\n      dup5\n        /* \"#utility.yul\":2930:2944   */\n      add\n        /* \"#utility.yul\":2923:2979   */\n      mstore\n      pop\n        /* \"#utility.yul\":3028:3032   */\n      0xa0\n        /* \"#utility.yul\":3021:3026   */\n      dup2\n        /* \"#utility.yul\":3017:3033   */\n      add\n        /* \"#utility.yul\":3011:3034   */\n      mload\n        /* \"#utility.yul\":3004:3008   */\n      0xa0\n        /* \"#utility.yul\":2999:3002   */\n      dup4\n        /* \"#utility.yul\":2995:3009   */\n      add\n        /* \"#utility.yul\":2988:3035   */\n      mstore\n        /* \"#utility.yul\":2579:3041   */\n      pop\n      pop\n      jump\n        /* \"#utility.yul\":3600:3647   */\n    tag_684:\n        /* \"#utility.yul\":3704:3719   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3676:3680   */\n      0xc0\n        /* \"#utility.yul\":3667:3681   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":3573:3574   */\n      0x01\n        /* \"#utility.yul\":3566:3575   */\n      add\n        /* \"#utility.yul\":3537:3729   */\n      jump(tag_681)\n    tag_683:\n      pop\n        /* \"#utility.yul\":3746:3749   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3046:3755   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3760:4456   */\n    tag_66:\n        /* \"#utility.yul\":3946:3948   */\n      0x20\n        /* \"#utility.yul\":3998:4019   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4068:4081   */\n      dup3\n      mload\n        /* \"#utility.yul\":3971:3989   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4090:4112   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3917:3921   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3946:3948   */\n      swap1\n        /* \"#utility.yul\":4169:4184   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4143:4145   */\n      0x40\n        /* \"#utility.yul\":4128:4146   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3917:3921   */\n      dup5\n        /* \"#utility.yul\":4212:4430   */\n    tag_686:\n        /* \"#utility.yul\":4226:4232   */\n      dup2\n        /* \"#utility.yul\":4223:4224   */\n      dup2\n        /* \"#utility.yul\":4220:4233   */\n      lt\n        /* \"#utility.yul\":4212:4430   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":4291:4304   */\n      dup4\n      mload\n        /* \"#utility.yul\":4306:4348   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4287:4349   */\n      and\n        /* \"#utility.yul\":4275:4350   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4405:4420   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4370:4382   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4248:4249   */\n      0x01\n        /* \"#utility.yul\":4241:4250   */\n      add\n        /* \"#utility.yul\":4212:4430   */\n      jump(tag_686)\n        /* \"#utility.yul\":4461:4708   */\n    tag_70:\n        /* \"#utility.yul\":4520:4526   */\n      0x00\n        /* \"#utility.yul\":4573:4575   */\n      0x20\n        /* \"#utility.yul\":4561:4570   */\n      dup3\n        /* \"#utility.yul\":4552:4559   */\n      dup5\n        /* \"#utility.yul\":4548:4571   */\n      sub\n        /* \"#utility.yul\":4544:4576   */\n      slt\n        /* \"#utility.yul\":4541:4593   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":4589:4590   */\n      0x00\n        /* \"#utility.yul\":4586:4587   */\n      dup1\n        /* \"#utility.yul\":4579:4591   */\n      revert\n        /* \"#utility.yul\":4541:4593   */\n    tag_690:\n        /* \"#utility.yul\":4628:4637   */\n      dup2\n        /* \"#utility.yul\":4615:4638   */\n      calldataload\n        /* \"#utility.yul\":4647:4678   */\n      tag_264\n        /* \"#utility.yul\":4672:4677   */\n      dup2\n        /* \"#utility.yul\":4647:4678   */\n      tag_647\n      jump\t// in\n        /* \"#utility.yul\":4713:5576   */\n    tag_73:\n        /* \"#utility.yul\":4960:4962   */\n      0x20\n        /* \"#utility.yul\":5012:5033   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5082:5095   */\n      dup3\n      mload\n        /* \"#utility.yul\":4985:5003   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5104:5126   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4931:4935   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4960:4962   */\n      swap1\n        /* \"#utility.yul\":5145:5147   */\n      0x40\n      swap1\n        /* \"#utility.yul\":5163:5181   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5204:5219   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":4931:4935   */\n      dup6\n        /* \"#utility.yul\":5247:5550   */\n    tag_693:\n        /* \"#utility.yul\":5261:5267   */\n      dup3\n        /* \"#utility.yul\":5258:5259   */\n      dup2\n        /* \"#utility.yul\":5255:5268   */\n      lt\n        /* \"#utility.yul\":5247:5550   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":5320:5333   */\n      dup2\n      mload\n        /* \"#utility.yul\":5362:5371   */\n      dup1\n      mload\n        /* \"#utility.yul\":5373:5415   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5358:5416   */\n      and\n        /* \"#utility.yul\":5346:5417   */\n      dup6\n      mstore\n        /* \"#utility.yul\":5457:5468   */\n      dup7\n      add\n        /* \"#utility.yul\":5451:5469   */\n      mload\n        /* \"#utility.yul\":5437:5449   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":5430:5470   */\n      mstore\n        /* \"#utility.yul\":5490:5502   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":5525:5540   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5283:5284   */\n      0x01\n        /* \"#utility.yul\":5276:5285   */\n      add\n        /* \"#utility.yul\":5247:5550   */\n      jump(tag_693)\n    tag_695:\n      pop\n        /* \"#utility.yul\":5567:5570   */\n      swap2\n      swap8\n        /* \"#utility.yul\":4713:5576   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6203   */\n    tag_95:\n        /* \"#utility.yul\":6023:6029   */\n      0x00\n        /* \"#utility.yul\":6031:6037   */\n      dup1\n        /* \"#utility.yul\":6084:6086   */\n      0x40\n        /* \"#utility.yul\":6072:6081   */\n      dup4\n        /* \"#utility.yul\":6063:6070   */\n      dup6\n        /* \"#utility.yul\":6059:6082   */\n      sub\n        /* \"#utility.yul\":6055:6087   */\n      slt\n        /* \"#utility.yul\":6052:6104   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6097:6098   */\n      dup1\n        /* \"#utility.yul\":6090:6102   */\n      revert\n        /* \"#utility.yul\":6052:6104   */\n    tag_699:\n      pop\n      pop\n        /* \"#utility.yul\":6123:6146   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":6193:6195   */\n      0x20\n        /* \"#utility.yul\":6178:6196   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6165:6197   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5955:6203   */\n      jump\t// out\n        /* \"#utility.yul\":6208:6461   */\n    tag_107:\n        /* \"#utility.yul\":6396:6399   */\n      0xc0\n        /* \"#utility.yul\":6381:6400   */\n      dup2\n      add\n        /* \"#utility.yul\":6409:6455   */\n      tag_317\n        /* \"#utility.yul\":6385:6394   */\n      dup3\n        /* \"#utility.yul\":6437:6443   */\n      dup5\n        /* \"#utility.yul\":2652:2694   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2733:2735   */\n      dup1\n        /* \"#utility.yul\":2725:2730   */\n      dup3\n        /* \"#utility.yul\":2719:2731   */\n      mload\n        /* \"#utility.yul\":2715:2736   */\n      and\n        /* \"#utility.yul\":2710:2713   */\n      dup4\n        /* \"#utility.yul\":2703:2737   */\n      mstore\n        /* \"#utility.yul\":2786:2790   */\n      0x20\n        /* \"#utility.yul\":2779:2784   */\n      dup3\n        /* \"#utility.yul\":2775:2791   */\n      add\n        /* \"#utility.yul\":2769:2792   */\n      mload\n        /* \"#utility.yul\":2762:2766   */\n      0x20\n        /* \"#utility.yul\":2757:2760   */\n      dup5\n        /* \"#utility.yul\":2753:2767   */\n      add\n        /* \"#utility.yul\":2746:2793   */\n      mstore\n        /* \"#utility.yul\":2854:2856   */\n      dup1\n        /* \"#utility.yul\":2846:2850   */\n      0x40\n        /* \"#utility.yul\":2839:2844   */\n      dup4\n        /* \"#utility.yul\":2835:2851   */\n      add\n        /* \"#utility.yul\":2829:2852   */\n      mload\n        /* \"#utility.yul\":2825:2857   */\n      and\n        /* \"#utility.yul\":2818:2822   */\n      0x40\n        /* \"#utility.yul\":2813:2816   */\n      dup5\n        /* \"#utility.yul\":2809:2823   */\n      add\n        /* \"#utility.yul\":2802:2858   */\n      mstore\n        /* \"#utility.yul\":2907:2911   */\n      0x60\n        /* \"#utility.yul\":2900:2905   */\n      dup3\n        /* \"#utility.yul\":2896:2912   */\n      add\n        /* \"#utility.yul\":2890:2913   */\n      mload\n        /* \"#utility.yul\":2883:2887   */\n      0x60\n        /* \"#utility.yul\":2878:2881   */\n      dup5\n        /* \"#utility.yul\":2874:2888   */\n      add\n        /* \"#utility.yul\":2867:2914   */\n      mstore\n        /* \"#utility.yul\":2975:2977   */\n      dup1\n        /* \"#utility.yul\":2967:2971   */\n      0x80\n        /* \"#utility.yul\":2960:2965   */\n      dup4\n        /* \"#utility.yul\":2956:2972   */\n      add\n        /* \"#utility.yul\":2950:2973   */\n      mload\n        /* \"#utility.yul\":2946:2978   */\n      and\n        /* \"#utility.yul\":2939:2943   */\n      0x80\n        /* \"#utility.yul\":2934:2937   */\n      dup5\n        /* \"#utility.yul\":2930:2944   */\n      add\n        /* \"#utility.yul\":2923:2979   */\n      mstore\n      pop\n        /* \"#utility.yul\":3028:3032   */\n      0xa0\n        /* \"#utility.yul\":3021:3026   */\n      dup2\n        /* \"#utility.yul\":3017:3033   */\n      add\n        /* \"#utility.yul\":3011:3034   */\n      mload\n        /* \"#utility.yul\":3004:3008   */\n      0xa0\n        /* \"#utility.yul\":2999:3002   */\n      dup4\n        /* \"#utility.yul\":2995:3009   */\n      add\n        /* \"#utility.yul\":2988:3035   */\n      mstore\n        /* \"#utility.yul\":2579:3041   */\n      pop\n      pop\n      jump\n        /* \"#utility.yul\":7383:7908   */\n    tag_133:\n        /* \"#utility.yul\":7469:7475   */\n      0x00\n        /* \"#utility.yul\":7477:7483   */\n      dup1\n        /* \"#utility.yul\":7485:7491   */\n      0x00\n        /* \"#utility.yul\":7493:7499   */\n      dup1\n        /* \"#utility.yul\":7546:7549   */\n      0x80\n        /* \"#utility.yul\":7534:7543   */\n      dup6\n        /* \"#utility.yul\":7525:7532   */\n      dup8\n        /* \"#utility.yul\":7521:7544   */\n      sub\n        /* \"#utility.yul\":7517:7550   */\n      slt\n        /* \"#utility.yul\":7514:7567   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":7563:7564   */\n      0x00\n        /* \"#utility.yul\":7560:7561   */\n      dup1\n        /* \"#utility.yul\":7553:7565   */\n      revert\n        /* \"#utility.yul\":7514:7567   */\n    tag_708:\n        /* \"#utility.yul\":7602:7611   */\n      dup5\n        /* \"#utility.yul\":7589:7612   */\n      calldataload\n        /* \"#utility.yul\":7621:7652   */\n      tag_709\n        /* \"#utility.yul\":7646:7651   */\n      dup2\n        /* \"#utility.yul\":7621:7652   */\n      tag_647\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":7671:7676   */\n      swap4\n      pop\n        /* \"#utility.yul\":7723:7725   */\n      0x20\n        /* \"#utility.yul\":7708:7726   */\n      dup6\n      add\n        /* \"#utility.yul\":7695:7727   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":7774:7776   */\n      0x40\n        /* \"#utility.yul\":7759:7777   */\n      dup6\n      add\n        /* \"#utility.yul\":7746:7778   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7830:7832   */\n      0x60\n        /* \"#utility.yul\":7815:7833   */\n      dup6\n      add\n        /* \"#utility.yul\":7802:7834   */\n      calldataload\n        /* \"#utility.yul\":7843:7876   */\n      tag_710\n        /* \"#utility.yul\":7802:7834   */\n      dup2\n        /* \"#utility.yul\":7843:7876   */\n      tag_647\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":7383:7908   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7913:8301   */\n    tag_150:\n        /* \"#utility.yul\":7981:7987   */\n      0x00\n        /* \"#utility.yul\":7989:7995   */\n      dup1\n        /* \"#utility.yul\":8042:8044   */\n      0x40\n        /* \"#utility.yul\":8030:8039   */\n      dup4\n        /* \"#utility.yul\":8021:8028   */\n      dup6\n        /* \"#utility.yul\":8017:8040   */\n      sub\n        /* \"#utility.yul\":8013:8045   */\n      slt\n        /* \"#utility.yul\":8010:8062   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":8058:8059   */\n      0x00\n        /* \"#utility.yul\":8055:8056   */\n      dup1\n        /* \"#utility.yul\":8048:8060   */\n      revert\n        /* \"#utility.yul\":8010:8062   */\n    tag_712:\n        /* \"#utility.yul\":8097:8106   */\n      dup3\n        /* \"#utility.yul\":8084:8107   */\n      calldataload\n        /* \"#utility.yul\":8116:8147   */\n      tag_713\n        /* \"#utility.yul\":8141:8146   */\n      dup2\n        /* \"#utility.yul\":8116:8147   */\n      tag_647\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":8166:8171   */\n      swap2\n      pop\n        /* \"#utility.yul\":8223:8225   */\n      0x20\n        /* \"#utility.yul\":8208:8226   */\n      dup4\n      add\n        /* \"#utility.yul\":8195:8227   */\n      calldataload\n        /* \"#utility.yul\":8236:8269   */\n      tag_714\n        /* \"#utility.yul\":8195:8227   */\n      dup2\n        /* \"#utility.yul\":8236:8269   */\n      tag_647\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":8288:8295   */\n      dup1\n        /* \"#utility.yul\":8278:8295   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7913:8301   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8306:8490   */\n    tag_198:\n        /* \"#utility.yul\":8358:8435   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8355:8356   */\n      0x00\n        /* \"#utility.yul\":8348:8436   */\n      mstore\n        /* \"#utility.yul\":8455:8459   */\n      0x32\n        /* \"#utility.yul\":8452:8453   */\n      0x04\n        /* \"#utility.yul\":8445:8460   */\n      mstore\n        /* \"#utility.yul\":8479:8483   */\n      0x24\n        /* \"#utility.yul\":8476:8477   */\n      0x00\n        /* \"#utility.yul\":8469:8484   */\n      revert\n        /* \"#utility.yul\":8495:8679   */\n    tag_650:\n        /* \"#utility.yul\":8547:8624   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8544:8545   */\n      0x00\n        /* \"#utility.yul\":8537:8625   */\n      mstore\n        /* \"#utility.yul\":8644:8648   */\n      0x11\n        /* \"#utility.yul\":8641:8642   */\n      0x04\n        /* \"#utility.yul\":8634:8649   */\n      mstore\n        /* \"#utility.yul\":8668:8672   */\n      0x24\n        /* \"#utility.yul\":8665:8666   */\n      0x00\n        /* \"#utility.yul\":8658:8673   */\n      revert\n        /* \"#utility.yul\":8684:8879   */\n    tag_201:\n        /* \"#utility.yul\":8723:8726   */\n      0x00\n        /* \"#utility.yul\":8754:8820   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8747:8752   */\n      dup3\n        /* \"#utility.yul\":8744:8821   */\n      sub\n        /* \"#utility.yul\":8741:8844   */\n      tag_719\n      jumpi\n        /* \"#utility.yul\":8824:8842   */\n      tag_719\n      tag_650\n      jump\t// in\n    tag_719:\n      pop\n        /* \"#utility.yul\":8871:8872   */\n      0x01\n        /* \"#utility.yul\":8860:8873   */\n      add\n      swap1\n        /* \"#utility.yul\":8684:8879   */\n      jump\t// out\n        /* \"#utility.yul\":9943:10127   */\n    tag_230:\n        /* \"#utility.yul\":10013:10019   */\n      0x00\n        /* \"#utility.yul\":10066:10068   */\n      0x20\n        /* \"#utility.yul\":10054:10063   */\n      dup3\n        /* \"#utility.yul\":10045:10052   */\n      dup5\n        /* \"#utility.yul\":10041:10064   */\n      sub\n        /* \"#utility.yul\":10037:10069   */\n      slt\n        /* \"#utility.yul\":10034:10086   */\n      iszero\n      tag_724\n      jumpi\n        /* \"#utility.yul\":10082:10083   */\n      0x00\n        /* \"#utility.yul\":10079:10080   */\n      dup1\n        /* \"#utility.yul\":10072:10084   */\n      revert\n        /* \"#utility.yul\":10034:10086   */\n    tag_724:\n      pop\n        /* \"#utility.yul\":10105:10121   */\n      mload\n      swap2\n        /* \"#utility.yul\":9943:10127   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13009:13260   */\n    tag_370:\n        /* \"#utility.yul\":13079:13085   */\n      0x00\n        /* \"#utility.yul\":13132:13134   */\n      0x20\n        /* \"#utility.yul\":13120:13129   */\n      dup3\n        /* \"#utility.yul\":13111:13118   */\n      dup5\n        /* \"#utility.yul\":13107:13130   */\n      sub\n        /* \"#utility.yul\":13103:13135   */\n      slt\n        /* \"#utility.yul\":13100:13152   */\n      iszero\n      tag_733\n      jumpi\n        /* \"#utility.yul\":13148:13149   */\n      0x00\n        /* \"#utility.yul\":13145:13146   */\n      dup1\n        /* \"#utility.yul\":13138:13150   */\n      revert\n        /* \"#utility.yul\":13100:13152   */\n    tag_733:\n        /* \"#utility.yul\":13180:13189   */\n      dup2\n        /* \"#utility.yul\":13174:13190   */\n      mload\n        /* \"#utility.yul\":13199:13230   */\n      tag_264\n        /* \"#utility.yul\":13224:13229   */\n      dup2\n        /* \"#utility.yul\":13199:13230   */\n      tag_647\n      jump\t// in\n        /* \"#utility.yul\":17858:18135   */\n    tag_512:\n        /* \"#utility.yul\":17925:17931   */\n      0x00\n        /* \"#utility.yul\":17978:17980   */\n      0x20\n        /* \"#utility.yul\":17966:17975   */\n      dup3\n        /* \"#utility.yul\":17957:17964   */\n      dup5\n        /* \"#utility.yul\":17953:17976   */\n      sub\n        /* \"#utility.yul\":17949:17981   */\n      slt\n        /* \"#utility.yul\":17946:17998   */\n      iszero\n      tag_747\n      jumpi\n        /* \"#utility.yul\":17994:17995   */\n      0x00\n        /* \"#utility.yul\":17991:17992   */\n      dup1\n        /* \"#utility.yul\":17984:17996   */\n      revert\n        /* \"#utility.yul\":17946:17998   */\n    tag_747:\n        /* \"#utility.yul\":18026:18035   */\n      dup2\n        /* \"#utility.yul\":18020:18036   */\n      mload\n        /* \"#utility.yul\":18079:18084   */\n      dup1\n        /* \"#utility.yul\":18072:18085   */\n      iszero\n        /* \"#utility.yul\":18065:18086   */\n      iszero\n        /* \"#utility.yul\":18058:18063   */\n      dup2\n        /* \"#utility.yul\":18055:18087   */\n      eq\n        /* \"#utility.yul\":18045:18105   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":18101:18102   */\n      0x00\n        /* \"#utility.yul\":18098:18099   */\n      dup1\n        /* \"#utility.yul\":18091:18103   */\n      revert\n        /* \"#utility.yul\":18501:18775   */\n    tag_523:\n        /* \"#utility.yul\":18541:18542   */\n      0x00\n        /* \"#utility.yul\":18567:18568   */\n      dup3\n        /* \"#utility.yul\":18557:18746   */\n      tag_751\n      jumpi\n        /* \"#utility.yul\":18602:18679   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18599:18600   */\n      0x00\n        /* \"#utility.yul\":18592:18680   */\n      mstore\n        /* \"#utility.yul\":18703:18707   */\n      0x12\n        /* \"#utility.yul\":18700:18701   */\n      0x04\n        /* \"#utility.yul\":18693:18708   */\n      mstore\n        /* \"#utility.yul\":18731:18735   */\n      0x24\n        /* \"#utility.yul\":18728:18729   */\n      0x00\n        /* \"#utility.yul\":18721:18736   */\n      revert\n        /* \"#utility.yul\":18557:18746   */\n    tag_751:\n      pop\n        /* \"#utility.yul\":18760:18769   */\n      div\n      swap1\n        /* \"#utility.yul\":18501:18775   */\n      jump\t// out\n        /* \"#utility.yul\":18780:18948   */\n    tag_526:\n        /* \"#utility.yul\":18853:18862   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":18884:18893   */\n      dup2\n      iszero\n        /* \"#utility.yul\":18901:18916   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":18895:18917   */\n      dup5\n      eq\n        /* \"#utility.yul\":18881:18918   */\n      or\n        /* \"#utility.yul\":18871:18942   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":18922:18940   */\n      tag_317\n      tag_650\n      jump\t// in\n        /* \"#utility.yul\":18953:19081   */\n    tag_529:\n        /* \"#utility.yul\":19020:19029   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":19041:19052   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":19038:19075   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":19055:19073   */\n      tag_317\n      tag_650\n      jump\t// in\n        /* \"#utility.yul\":19086:19282   */\n    tag_550:\n        /* \"#utility.yul\":19125:19128   */\n      0x00\n        /* \"#utility.yul\":19153:19158   */\n      dup2\n        /* \"#utility.yul\":19143:19182   */\n      tag_760\n      jumpi\n        /* \"#utility.yul\":19162:19180   */\n      tag_760\n      tag_650\n      jump\t// in\n    tag_760:\n      pop\n        /* \"#utility.yul\":19209:19275   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19198:19276   */\n      add\n      swap1\n        /* \"#utility.yul\":19086:19282   */\n      jump\t// out\n        /* \"#utility.yul\":19287:19471   */\n    tag_559:\n        /* \"#utility.yul\":19339:19416   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19336:19337   */\n      0x00\n        /* \"#utility.yul\":19329:19417   */\n      mstore\n        /* \"#utility.yul\":19436:19440   */\n      0x31\n        /* \"#utility.yul\":19433:19434   */\n      0x04\n        /* \"#utility.yul\":19426:19441   */\n      mstore\n        /* \"#utility.yul\":19460:19464   */\n      0x24\n        /* \"#utility.yul\":19457:19458   */\n      0x00\n        /* \"#utility.yul\":19450:19465   */\n      revert\n        /* \"#utility.yul\":20294:20544   */\n    tag_651:\n        /* \"#utility.yul\":20379:20380   */\n      0x00\n        /* \"#utility.yul\":20389:20502   */\n    tag_765:\n        /* \"#utility.yul\":20403:20409   */\n      dup4\n        /* \"#utility.yul\":20400:20401   */\n      dup2\n        /* \"#utility.yul\":20397:20410   */\n      lt\n        /* \"#utility.yul\":20389:20502   */\n      iszero\n      tag_767\n      jumpi\n        /* \"#utility.yul\":20479:20490   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":20473:20491   */\n      mload\n        /* \"#utility.yul\":20460:20471   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":20453:20492   */\n      mstore\n        /* \"#utility.yul\":20425:20427   */\n      0x20\n        /* \"#utility.yul\":20418:20428   */\n      add\n        /* \"#utility.yul\":20389:20502   */\n      jump(tag_765)\n    tag_767:\n      pop\n      pop\n        /* \"#utility.yul\":20536:20537   */\n      0x00\n        /* \"#utility.yul\":20518:20534   */\n      swap2\n      add\n        /* \"#utility.yul\":20511:20538   */\n      mstore\n        /* \"#utility.yul\":20294:20544   */\n      jump\t// out\n        /* \"#utility.yul\":20549:20836   */\n    tag_615:\n        /* \"#utility.yul\":20678:20681   */\n      0x00\n        /* \"#utility.yul\":20716:20722   */\n      dup3\n        /* \"#utility.yul\":20710:20723   */\n      mload\n        /* \"#utility.yul\":20732:20798   */\n      tag_769\n        /* \"#utility.yul\":20791:20797   */\n      dup2\n        /* \"#utility.yul\":20786:20789   */\n      dup5\n        /* \"#utility.yul\":20779:20783   */\n      0x20\n        /* \"#utility.yul\":20771:20777   */\n      dup8\n        /* \"#utility.yul\":20767:20784   */\n      add\n        /* \"#utility.yul\":20732:20798   */\n      tag_651\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":20814:20830   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":20549:20836   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21199:21654   */\n    tag_637:\n        /* \"#utility.yul\":21348:21350   */\n      0x20\n        /* \"#utility.yul\":21337:21346   */\n      dup2\n        /* \"#utility.yul\":21330:21351   */\n      mstore\n        /* \"#utility.yul\":21311:21315   */\n      0x00\n        /* \"#utility.yul\":21380:21386   */\n      dup3\n        /* \"#utility.yul\":21374:21387   */\n      mload\n        /* \"#utility.yul\":21423:21429   */\n      dup1\n        /* \"#utility.yul\":21418:21420   */\n      0x20\n        /* \"#utility.yul\":21407:21416   */\n      dup5\n        /* \"#utility.yul\":21403:21421   */\n      add\n        /* \"#utility.yul\":21396:21430   */\n      mstore\n        /* \"#utility.yul\":21439:21518   */\n      tag_772\n        /* \"#utility.yul\":21511:21517   */\n      dup2\n        /* \"#utility.yul\":21506:21508   */\n      0x40\n        /* \"#utility.yul\":21495:21504   */\n      dup6\n        /* \"#utility.yul\":21491:21509   */\n      add\n        /* \"#utility.yul\":21486:21488   */\n      0x20\n        /* \"#utility.yul\":21478:21484   */\n      dup8\n        /* \"#utility.yul\":21474:21489   */\n      add\n        /* \"#utility.yul\":21439:21518   */\n      tag_651\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":21570:21572   */\n      0x1f\n        /* \"#utility.yul\":21558:21573   */\n      add\n        /* \"#utility.yul\":21575:21641   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":21554:21642   */\n      and\n        /* \"#utility.yul\":21539:21643   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":21645:21647   */\n      0x40\n        /* \"#utility.yul\":21535:21648   */\n      add\n      swap3\n        /* \"#utility.yul\":21199:21654   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e7c2659d9e1d6d925ebc85e34c394a08c34ef326f6cfa47d80ad8c8d0c3ae3c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2267": {
									"entryPoint": null,
									"id": 2267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2899": {
									"entryPoint": null,
									"id": 2899,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_130": {
									"entryPoint": 380,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_fromMemory": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"increment_t_uint256": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2388:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "206:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "216:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "231:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "216:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "301:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "310:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "303:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "303:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "303:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "260:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "271:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "286:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "291:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "282:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "282:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "295:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "278:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "278:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "267:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "267:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "257:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:50:1"
															},
															"nodeType": "YulIf",
															"src": "247:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:1",
														"type": ""
													}
												],
												"src": "146:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "403:848:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "452:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "461:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "464:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "454:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "454:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "454:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "431:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "439:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "427:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "427:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "446:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "423:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "416:35:1"
															},
															"nodeType": "YulIf",
															"src": "413:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "477:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "487:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "481:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "509:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "519:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "513:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "532:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "550:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "554:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "546:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "558:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "542:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:18:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "536:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "583:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "585:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "585:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "585:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "575:2:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "579:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "572:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "572:10:1"
															},
															"nodeType": "YulIf",
															"src": "569:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "614:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "631:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "624:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:10:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "618:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "643:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "663:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "657:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "647:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "713:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "717:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "709:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "709:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "726:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "705:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "693:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "693:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "679:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "790:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "792:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "792:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "792:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "749:10:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "761:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "746:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "746:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "769:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "766:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "743:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:46:1"
															},
															"nodeType": "YulIf",
															"src": "740:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "828:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "832:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "821:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "852:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "863:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "856:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "885:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "893:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "878:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "905:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "916:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "924:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "936:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "966:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "954:15:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "971:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:24:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1002:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1011:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1014:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1004:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1004:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "989:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "997:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "986:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:15:1"
															},
															"nodeType": "YulIf",
															"src": "983:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1027:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1042:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1050:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1031:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1118:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1139:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1174:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "1144:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1144:34:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1132:47:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1132:47:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1192:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1203:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1208:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1199:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1199:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1192:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1073:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1078:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1070:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1086:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1088:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1099:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1104:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1095:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1095:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1088:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1066:3:1",
																"statements": []
															},
															"src": "1062:159:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1230:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1239:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "377:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "385:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "393:5:1",
														"type": ""
													}
												],
												"src": "328:923:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1438:579:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1485:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1487:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1487:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1459:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1468:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1480:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:33:1"
															},
															"nodeType": "YulIf",
															"src": "1448:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1510:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1530:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1524:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1514:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1549:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1571:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1563:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1553:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1604:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1613:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1616:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1606:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1606:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1606:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1592:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1600:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1589:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:14:1"
															},
															"nodeType": "YulIf",
															"src": "1586:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1629:82:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1694:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1703:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1639:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1639:72:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1720:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1730:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1788:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1808:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1819:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1832:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1869:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1848:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1836:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1902:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1911:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1904:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1904:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1904:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1888:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1898:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1885:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:16:1"
															},
															"nodeType": "YulIf",
															"src": "1882:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1927:84:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1981:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1992:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2003:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1937:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:74:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1380:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1391:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1403:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1411:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1419:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1427:6:1",
														"type": ""
													}
												],
												"src": "1256:761:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2054:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2078:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2074:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2064:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2111:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2128:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2022:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2201:185:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2240:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2261:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2268:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2273:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2264:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2264:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2254:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2254:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2254:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2305:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2308:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2298:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2298:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2336:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2326:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2326:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2217:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2228:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2224:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2214:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:17:1"
															},
															"nodeType": "YulIf",
															"src": "2211:140:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2360:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2371:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2378:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2367:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2183:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2193:3:1",
														"type": ""
													}
												],
												"src": "2154:232:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let _3 := sub(shl(64, 1), 1)\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, _4), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3F4F CODESIZE SUB DUP1 PUSH3 0x3F4F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0x32D JUMP JUMPDEST PUSH3 0x44 CALLER PUSH3 0x17C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x11D JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x77 JUMPI PUSH3 0x77 PUSH3 0x3B3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xCD JUMPI PUSH3 0xCD PUSH3 0x3B3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0x114 DUP2 PUSH3 0x3C9 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x52 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH3 0x135 JUMPI DUP3 PUSH3 0x137 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 MLOAD PUSH3 0x171 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1CC JUMP JUMPDEST POP POP POP POP POP PUSH3 0x3F1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x224 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x224 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP PUSH3 0x232 SWAP3 SWAP2 POP PUSH3 0x236 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x237 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT ISZERO PUSH3 0x2B1 JUMPI PUSH3 0x2B1 PUSH3 0x24D JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH3 0x2D9 JUMPI PUSH3 0x2D9 PUSH3 0x24D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH3 0x322 JUMPI PUSH3 0x312 DUP3 PUSH3 0x263 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH3 0x2FE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x36A DUP9 DUP4 DUP10 ADD PUSH3 0x280 JUMP JUMPDEST SWAP6 POP PUSH3 0x37A PUSH1 0x20 DUP9 ADD PUSH3 0x263 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3A7 DUP8 DUP3 DUP9 ADD PUSH3 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x3EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3B4E DUP1 PUSH3 0x401 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785FA7CE GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC8F77899 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE9E4E160 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8F77899 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xCB4CA919 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xDA24548A EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7C9197A GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA7C9197A EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xB7B7B8FF EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xC8D8101C EQ PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x98F748BD EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x527F2902 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x6629E913 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x527F2902 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x5B4E7ADD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x5B87F0F2 EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CA38DF5 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2CA38DF5 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x3A51F383 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x3EAC63ED EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x5211AC2E EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10603023 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x27713536 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2B205D14 EQ PUSH2 0x21F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x349F JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x36FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x3767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x11E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x37CC JUMP JUMPDEST PUSH2 0x125D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x37EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x147E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x14EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x14FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x30E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x384D JUMP JUMPDEST PUSH2 0x1570 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x1BBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x3897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x30E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x37CC JUMP JUMPDEST PUSH2 0x2234 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x2241 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x44D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0x24A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x24BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x250A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x64A PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x657 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x67D JUMPI PUSH2 0x67D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x6E6 DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x65A JUMP JUMPDEST POP PUSH2 0x6FB PUSH1 0x2 PUSH1 0x0 PUSH2 0x33EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x2 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 MLOAD SWAP1 SWAP2 PUSH1 0x3 SWAP2 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x794 JUMPI PUSH2 0x794 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x7FB DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x89D DUP4 DUP4 PUSH2 0x1311 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204E4654206973206E6F7420666F722073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20796F75722062616C616E636520746F20706179000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 PUSH2 0xC15 PUSH2 0xC0D DUP4 PUSH1 0x64 PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2810 JUMP JUMPDEST SWAP1 POP PUSH2 0xC36 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC70 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xC7C DUP4 DUP4 PUSH2 0x281C JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xCA8 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 CALLER SWAP1 DUP5 PUSH2 0x2828 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x9 SLOAD PUSH2 0xCD7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP6 PUSH2 0x2828 JUMP JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD76 DUP10 DUP10 PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD DUP9 MLOAD PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x80 DUP1 DUP14 ADD MLOAD PUSH1 0x60 DUP1 DUP16 ADD MLOAD DUP9 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 AND DUP2 MSTORE CALLER SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP8 AND DUP6 DUP10 ADD MSTORE DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xA3D27CC8AC4E1915B6A89CE3E468D87AEB3CAF011A47E236DB61D098E452870C SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x1025 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0xE90 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1022 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF2B JUMPI PUSH2 0xF2B PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1010 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xFF6 JUMPI PUSH2 0xFF6 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x100C SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x101A DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEF7 JUMP JUMPDEST POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1091 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1066 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B9 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x10D7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x112C JUMPI PUSH2 0x112C PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE DUP8 AND DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP5 SWAP1 SWAP3 ADD SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x117D JUMPI PUSH2 0x117D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x11DB SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1104 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F1 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1281 JUMP JUMPDEST POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1477 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1378 JUMPI PUSH2 0x1378 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x13CF JUMPI POP DUP3 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13BB JUMPI PUSH2 0x13BB PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1465 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13E7 JUMPI PUSH2 0x13E7 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 POP PUSH2 0x130B SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x146F DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1344 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1091 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1066 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14F3 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x14FD PUSH1 0x0 PUSH2 0x2E4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1520 JUMPI PUSH2 0x1520 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1555 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x155F DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1503 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F776564204E465420636F6C6C656374696F6E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x397F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x17FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x1821 DUP2 PUSH2 0x14FF JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E672063757272656E63790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP8 SWAP1 MSTORE CALLER DUP4 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x195A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x196E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x197B DUP2 PUSH2 0x2EC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x19FF JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x44F716B281FA3E96FBD6EF888A275EF2FDF8914960A4C57C0BEF6CCAEBF0DF31 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xC68DC1F889FA3A215DCDD97178AF6BD67FAB7B34138EEF18F4313AAC53F5B364 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A82 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AC7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1AA0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1AF5 JUMPI PUSH2 0x1AF5 PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B52 JUMPI PUSH2 0x1B52 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1B9A JUMPI PUSH2 0x1B9A PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1BB0 SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ACD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4D DUP4 DUP4 PUSH2 0x1311 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204E4654206973206E6F7420666F722073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206974656D0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0x1DF5 PUSH2 0xC0D DUP4 PUSH1 0x64 PUSH2 0x2804 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E16 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E50 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1E5C DUP4 DUP4 PUSH2 0x281C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1EA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1EF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1F97 DUP7 DUP7 PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP6 ADD MLOAD DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH1 0x60 DUP1 DUP11 ADD MLOAD DUP7 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xBAB4AA6B2D5C0935E0E2937D1F73655848F670D43BF6F0C7E9E11E635BB5D86F SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x1025 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2105 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x20A5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1022 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2140 JUMPI PUSH2 0x2140 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2222 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x221E SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x222C DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x210C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1025 CALLER DUP5 DUP5 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224D DUP4 DUP4 PUSH2 0x1311 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E646564206174206D61726B6574706C616365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2386 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206973206E6F7420796F7572204E4654000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x240A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x241E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2434 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x40 DUP2 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP1 DUP4 ADD MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xCFD975662262E48E8C2B68605E79D409DA1B108BDC941F32D355C4CF11D35925 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x24A8 PUSH2 0x2783 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x803 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3408 JUMP JUMPDEST PUSH2 0x24C3 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2512 PUSH2 0x2783 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x25B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH2 0x25BE DUP2 PUSH2 0x2E4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25C9 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x2699 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x270B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x272F SWAP2 SWAP1 PUSH2 0x399C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29 SWAP1 PUSH1 0x60 ADD PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 DUP5 PUSH2 0x39BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 DUP5 PUSH2 0x39F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 DUP5 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x28BD SWAP1 DUP6 SWAP1 PUSH2 0x30CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 SWAP1 PUSH2 0x28EC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28FC JUMPI PUSH2 0x28FC PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2962 JUMPI POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x293E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x294E JUMPI PUSH2 0x294E PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2B25 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x297D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x298D JUMPI PUSH2 0x298D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x29D3 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x8 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x29EE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29FE JUMPI PUSH2 0x29FE PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP7 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2A54 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2A8A DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x2AA0 JUMPI PUSH2 0x2AA0 PUSH2 0x3A58 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2E4A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B5C JUMPI PUSH2 0x2B5C PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2BB3 JUMPI POP DUP2 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B9F JUMPI PUSH2 0x2B9F PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2E38 JUMPI PUSH1 0x7 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2BCF JUMPI PUSH2 0x2BCF PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2C15 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2C31 JUMPI PUSH2 0x2C31 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP8 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2C87 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2CBD DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH2 0x2CD2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2CE2 JUMPI PUSH2 0x2CE2 PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D03 JUMPI PUSH2 0x2D03 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE DUP1 SLOAD DUP1 PUSH2 0x2DAF JUMPI PUSH2 0x2DAF PUSH2 0x3A58 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2E42 DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 MLOAD PUSH1 0x6 SWAP2 DUP3 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP6 ADD SSTORE PUSH1 0x40 DUP1 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP7 ADD DUP1 SLOAD SWAP2 DUP9 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP7 ADD SSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP7 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x3041 DUP4 PUSH2 0x392E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x307B DUP4 PUSH2 0x392E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP6 MLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x30C7 DUP4 PUSH2 0x392E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3131 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2E4A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x314F SWAP2 SWAP1 PUSH2 0x399C JUMP JUMPDEST PUSH2 0x2E4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x31EA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x31F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3284 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x32AD SWAP2 SWAP1 PUSH2 0x3AAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3300 DUP8 DUP4 DUP4 DUP8 PUSH2 0x330B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x33A1 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x339A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x339A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST POP DUP2 PUSH2 0x31EA JUMP JUMPDEST PUSH2 0x31EA DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x33B6 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x3AC7 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x348A JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3482 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3482 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3428 JUMP JUMPDEST POP PUSH2 0x1BB8 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x348B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x25BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3514 DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x352C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x356A JUMPI PUSH2 0x356A PUSH2 0x34B8 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x35AD JUMPI PUSH2 0x35AD PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x35CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x35F0 JUMPI PUSH2 0x35E1 DUP6 PUSH2 0x3509 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x35D0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x360F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x361A DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x363D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3648 DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36F0 JUMPI PUSH2 0x36DD DUP4 DUP6 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE POP POP JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0xC0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3679 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36F0 JUMPI DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3718 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x375C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1025 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37BF JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3784 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x130B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x386E DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x388C DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x38B5 DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x38C5 DUP2 PUSH2 0x34E7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x395F JUMPI PUSH2 0x395F PUSH2 0x38FF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1025 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x39F4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x130B JUMPI PUSH2 0x130B PUSH2 0x38FF JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x130B JUMPI PUSH2 0x130B PUSH2 0x38FF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3A32 JUMPI PUSH2 0x3A32 PUSH2 0x38FF JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AA2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A8A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3ABD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3A87 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3AE6 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3A87 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH29 0x2659D9E1D6D925EBC85E34C394A08C34EF326F6CFA47D80AD8C8D0C3AE EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "50386:14010:0:-:0;;;51629:1;51604:26;;55479:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:32;736:10;1740:18;:32::i;:::-;49087:5;49077:15;;-1:-1:-1;;;;49077:15:0;;;55650:183;55670:13;:20;55666:1;:24;55650:183;;;55752:4;55712:19;:37;55732:13;55746:1;55732:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;55712:37:0;-1:-1:-1;;;;;55712:37:0;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;55771:18;55803:13;55817:1;55803:16;;;;;;;;:::i;:::-;;;;;;;;;;;;55771:50;;;;;;;-1:-1:-1;55771:50:0;;;;;;;;;;-1:-1:-1;;;;;;55771:50:0;-1:-1:-1;;;;;55771:50:0;;;;;;;;;55692:3;;;;:::i;:::-;;;;55650:183;;;-1:-1:-1;;;;;;55859:27:0;;;55858:58;;55903:13;55858:58;;;55890:10;55858:58;55843:12;:73;;-1:-1:-1;;;;;;55843:73:0;-1:-1:-1;;;;;55843:73:0;;;;;;;;;;-1:-1:-1;55927:22:0;;;55960:30;;;;:13;;:30;;;;;:::i;:::-;;55479:519;;;;50386:14010;;3286:191;3360:16;3379:6;;-1:-1:-1;;;;;3396:17:0;;;-1:-1:-1;;;;;;3396:17:0;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;50386:14010::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;50386:14010:0;-1:-1:-1;;;;;50386:14010:0;;;;;;;;;;;-1:-1:-1;50386:14010:0;;;;;;;-1:-1:-1;50386:14010:0;;;-1:-1:-1;50386:14010:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:1;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:923::-;393:5;446:3;439:4;431:6;427:17;423:27;413:55;;464:1;461;454:12;413:55;487:13;;519:4;-1:-1:-1;;;;;572:10:1;;;569:36;;;585:18;;:::i;:::-;631:2;628:1;624:10;663:2;657:9;726:2;722:7;717:2;713;709:11;705:25;697:6;693:38;781:6;769:10;766:22;761:2;749:10;746:18;743:46;740:72;;;792:18;;:::i;:::-;828:2;821:22;878:18;;;954:15;;;950:24;;;912:15;;;;-1:-1:-1;986:15:1;;;983:35;;;1014:1;1011;1004:12;983:35;1050:2;1042:6;1038:15;1027:26;;1062:159;1078:6;1073:3;1070:15;1062:159;;;1144:34;1174:3;1144:34;:::i;:::-;1132:47;;1199:12;;;;1095;;;;1062:159;;;1239:6;328:923;-1:-1:-1;;;;;;;328:923:1:o;1256:761::-;1403:6;1411;1419;1427;1480:3;1468:9;1459:7;1455:23;1451:33;1448:53;;;1497:1;1494;1487:12;1448:53;1524:16;;-1:-1:-1;;;;;1589:14:1;;;1586:34;;;1616:1;1613;1606:12;1586:34;1639:72;1703:7;1694:6;1683:9;1679:22;1639:72;:::i;:::-;1629:82;;1730:49;1775:2;1764:9;1760:18;1730:49;:::i;:::-;1720:59;;1819:2;1808:9;1804:18;1798:25;1788:35;;1869:2;1858:9;1854:18;1848:25;1832:41;;1898:2;1888:8;1885:16;1882:36;;;1914:1;1911;1904:12;1882:36;;1937:74;2003:7;1992:8;1981:9;1977:24;1937:74;:::i;:::-;1927:84;;;1256:761;;;;;;;:::o;2022:127::-;2083:10;2078:3;2074:20;2071:1;2064:31;2114:4;2111:1;2104:15;2138:4;2135:1;2128:15;2154:232;2193:3;2214:17;;;2211:140;;2273:10;2268:3;2264:20;2261:1;2254:31;2308:4;2305:1;2298:15;2336:4;2333:1;2326:15;2211:140;-1:-1:-1;2378:1:1;2367:13;;2154:232::o;:::-;50386:14010:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_440": {
									"entryPoint": 12495,
									"id": 440,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_73": {
									"entryPoint": 10115,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_marketTokensAdd_2697": {
									"entryPoint": 11972,
									"id": 2697,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_marketTokensDel_2832": {
									"entryPoint": 10435,
									"id": 2832,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2242": {
									"entryPoint": null,
									"id": 2242,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_130": {
									"entryPoint": 11855,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNFT_3649": {
									"entryPoint": 7100,
									"id": 3649,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyNFTbyERC20_3510": {
									"entryPoint": 2055,
									"id": 3510,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deSellNFT_3838": {
									"entryPoint": 8769,
									"id": 3838,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_1824": {
									"entryPoint": 10244,
									"id": 1824,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_2067": {
									"entryPoint": 12786,
									"id": 2067,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2003": {
									"entryPoint": 12763,
									"id": 2003,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAllowedCollections_2929": {
									"entryPoint": 4140,
									"id": 2929,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAllowedERC20_3018": {
									"entryPoint": 5246,
									"id": 3018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCollectionTokensAtSale_3320": {
									"entryPoint": 8219,
									"id": 3320,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getCollectionsTokensCount_2605": {
									"entryPoint": 6756,
									"id": 2605,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getColletionTokensCount_2530": {
									"entryPoint": null,
									"id": 2530,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getFeeReceiver_2907": {
									"entryPoint": null,
									"id": 2907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyTokensAtSale_3157": {
									"entryPoint": 8756,
									"id": 3157,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTokensAtSaleCount_3236": {
									"entryPoint": null,
									"id": 3236,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokensAtSale_3250": {
									"entryPoint": 4701,
									"id": 3250,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTradeFee_3126": {
									"entryPoint": null,
									"id": 3126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserCollectionTokensCount_2546": {
									"entryPoint": null,
									"id": 2546,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserCollectionsTokenCount_2663": {
									"entryPoint": 4251,
									"id": 2663,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserTokensAtSale_3227": {
									"entryPoint": 3590,
									"id": 3227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isAllowedERC20_3049": {
									"entryPoint": 5375,
									"id": 3049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1931": {
									"entryPoint": null,
									"id": 1931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isMarketPlaceContract_2440": {
									"entryPoint": null,
									"id": 2440,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@marketTokensGet_2518": {
									"entryPoint": 4881,
									"id": 2518,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1809": {
									"entryPoint": 10256,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_2276": {
									"entryPoint": null,
									"id": 2276,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_87": {
									"entryPoint": 5355,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_218": {
									"entryPoint": 10280,
									"id": 218,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sellNFT_3764": {
									"entryPoint": 5488,
									"id": 3764,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setAllowedCollections_2996": {
									"entryPoint": 1615,
									"id": 2996,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setAllowedERC20_3009": {
									"entryPoint": 9376,
									"id": 3009,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeReceiver_2919": {
									"entryPoint": 9403,
									"id": 2919,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTradeFee_3138": {
									"entryPoint": 1602,
									"id": 3138,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1794": {
									"entryPoint": 10268,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_110": {
									"entryPoint": 9482,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2198": {
									"entryPoint": 13067,
									"id": 2198,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@version_2429": {
									"entryPoint": null,
									"id": 2429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawERC20_3118": {
									"entryPoint": 9665,
									"id": 3118,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawWei_3078": {
									"entryPoint": 4585,
									"id": 3078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 13577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 14154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 14719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 14487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 13820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 13864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address": {
									"entryPoint": 14413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 13593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 14748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 13471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 14694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 14284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_struct_SelledNFT": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 15019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 14076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 14183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 13917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_SelledNFT_$2426_memory_ptr__to_t_struct$_SelledNFT_$2426_memory_ptr__fromStack_reversed": {
									"entryPoint": 14318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 14782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 14841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 14864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 14983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 14883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 14638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 14591,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 14936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 14544,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 13496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 13543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21656:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "231:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "241:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "241:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "348:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "369:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "372:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "362:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "199:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "433:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "456:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "467:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "474:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "463:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "463:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "453:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "453:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:73:1"
															},
															"nodeType": "YulIf",
															"src": "443:93:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "422:5:1",
														"type": ""
													}
												],
												"src": "388:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "596:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "606:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "628:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "615:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "615:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "606:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "669:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "644:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "644:31:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "586:5:1",
														"type": ""
													}
												],
												"src": "547:134:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "781:1085:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "801:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "795:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "848:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "860:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "850:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "850:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "823:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "832:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "819:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "844:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:32:1"
															},
															"nodeType": "YulIf",
															"src": "812:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "873:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "900:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "887:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "887:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "877:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "919:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "929:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "923:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "974:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "976:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "976:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "976:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "970:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "959:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:14:1"
															},
															"nodeType": "YulIf",
															"src": "956:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "999:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1013:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1003:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1079:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1088:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1091:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1081:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1081:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1081:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1058:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1062:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1054:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1054:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1069:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:35:1"
															},
															"nodeType": "YulIf",
															"src": "1040:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1104:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1127:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1114:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1114:16:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1108:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1153:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1155:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1145:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1149:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1142:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:10:1"
															},
															"nodeType": "YulIf",
															"src": "1139:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1184:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1198:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1201:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1188:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1213:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1233:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1227:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1217:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1245:115:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1267:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1283:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1287:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1279:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1279:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1292:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:84:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:97:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1249:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1419:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1421:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1421:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1421:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1378:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1390:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1375:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1375:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1398:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1410:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1395:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1372:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:46:1"
															},
															"nodeType": "YulIf",
															"src": "1369:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1461:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1481:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1492:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1485:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1522:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1507:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1534:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1545:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1553:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1541:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1534:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1565:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1587:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1591:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1596:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1579:20:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1569:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1631:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1633:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1614:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1622:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1611:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:19:1"
															},
															"nodeType": "YulIf",
															"src": "1608:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1656:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1671:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1675:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1667:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1660:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1743:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1764:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1788:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "1769:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1769:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1757:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1806:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1817:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1822:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1813:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1813:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1806:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1703:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1695:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1711:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1713:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1724:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1729:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1720:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1720:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1713:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1691:3:1",
																"statements": []
															},
															"src": "1687:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1844:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1854:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "747:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "758:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "770:6:1",
														"type": ""
													}
												],
												"src": "686:1180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1958:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2004:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2016:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2006:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2006:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2006:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1979:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1988:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1975:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:32:1"
															},
															"nodeType": "YulIf",
															"src": "1968:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2029:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2042:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2033:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2099:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2074:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2074:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2114:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2124:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2138:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2176:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2161:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2148:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1916:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1927:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1939:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1947:6:1",
														"type": ""
													}
												],
												"src": "1871:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2295:279:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2341:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2353:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2343:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2343:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2343:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2316:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2325:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2312:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2337:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2308:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:32:1"
															},
															"nodeType": "YulIf",
															"src": "2305:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2366:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2392:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2379:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2379:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2370:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2436:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2411:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2411:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2451:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2461:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2475:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2502:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2513:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2498:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2485:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2526:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2564:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2549:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2536:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2526:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2245:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2256:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2268:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2284:6:1",
														"type": ""
													}
												],
												"src": "2191:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2632:409:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2642:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2652:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2646:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2710:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2725:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2719:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2719:12:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2733:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2703:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2757:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2762:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2753:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2779:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2786:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2775:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2775:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2769:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2746:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2746:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2813:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2818:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2839:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2846:4:1",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2835:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2835:16:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2829:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2829:23:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2854:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2825:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2802:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2878:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2883:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2900:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2907:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2896:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2896:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2890:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2890:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2867:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2939:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2960:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2967:4:1",
																								"type": "",
																								"value": "0x80"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2956:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2956:16:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2950:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2950:23:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2975:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2946:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2946:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2999:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:4:1",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3021:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3017:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3017:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3011:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2988:47:1"
														}
													]
												},
												"name": "abi_encode_struct_SelledNFT",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2616:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2623:3:1",
														"type": ""
													}
												],
												"src": "2579:462:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3251:504:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3261:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3271:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3265:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3282:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3300:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3311:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3286:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3330:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3341:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3323:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3353:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3364:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3357:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3379:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3399:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3393:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3383:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3422:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3430:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3415:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3446:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3457:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3468:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3453:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3446:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3480:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3498:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3506:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3484:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3518:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3527:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3522:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3586:143:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3634:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3628:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3643:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_SelledNFT",
																				"nodeType": "YulIdentifier",
																				"src": "3600:27:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3600:47:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:47:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3660:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3671:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3676:4:1",
																					"type": "",
																					"value": "0xc0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3667:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3667:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3660:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3694:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3708:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3716:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3704:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3694:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3548:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3551:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3545:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3559:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3561:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3570:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3573:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3566:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3566:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3561:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3541:3:1",
																"statements": []
															},
															"src": "3537:192:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3738:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3746:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3738:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3220:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3242:4:1",
														"type": ""
													}
												],
												"src": "3046:709:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3926:530:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3946:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3940:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3957:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3975:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3986:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3961:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4005:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4016:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3998:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4028:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4039:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4032:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4054:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4074:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4068:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4058:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4105:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4090:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4121:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4132:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4155:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4173:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4181:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4159:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4193:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4202:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4197:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4261:169:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4282:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4297:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4291:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4291:13:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4306:42:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4287:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4287:62:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4275:75:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4275:75:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4363:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4374:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4379:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4370:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4370:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4363:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4395:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4409:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4417:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4405:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4405:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4395:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4223:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4226:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4220:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4234:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4236:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4245:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4241:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4241:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4236:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4216:3:1",
																"statements": []
															},
															"src": "4212:218:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4439:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4447:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4439:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3895:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3906:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3917:4:1",
														"type": ""
													}
												],
												"src": "3760:696:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4531:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4573:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:32:1"
															},
															"nodeType": "YulIf",
															"src": "4541:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4602:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4628:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4615:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4606:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4647:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4687:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4697:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4497:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4508:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4520:6:1",
														"type": ""
													}
												],
												"src": "4461:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4940:636:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4950:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4960:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4954:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4971:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4989:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5000:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4975:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5019:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5030:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5012:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5042:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5053:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5046:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5068:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5088:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5082:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5072:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5111:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5119:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5104:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5135:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5145:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5139:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5156:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5167:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5178:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5190:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5208:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5216:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5194:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5228:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5237:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5232:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5296:254:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5310:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5326:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5320:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5320:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "5314:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5368:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5362:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5362:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5373:42:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5358:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5358:58:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5346:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5346:71:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5346:71:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5441:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "5446:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5437:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5437:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5461:2:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5465:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5457:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5457:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5451:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5451:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5430:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5430:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5430:40:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5483:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5494:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "5499:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5490:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5490:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5483:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5515:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5529:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5537:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5525:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5525:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5515:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5261:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5269:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5271:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5280:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5283:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5276:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5276:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5271:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5251:3:1",
																"statements": []
															},
															"src": "5247:303:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5559:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5567:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5559:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4909:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4920:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4931:4:1",
														"type": ""
													}
												],
												"src": "4713:863:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5676:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5686:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5698:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5709:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5694:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5686:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5728:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5753:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5746:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5746:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5739:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5739:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5721:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5645:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5656:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5667:4:1",
														"type": ""
													}
												],
												"src": "5581:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5874:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5884:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5896:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5907:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5892:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5884:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5926:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5937:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5919:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5919:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5843:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5854:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5865:4:1",
														"type": ""
													}
												],
												"src": "5773:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6042:161:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6088:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6097:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6100:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6090:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6090:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6090:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6063:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6072:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6059:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6084:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6055:32:1"
															},
															"nodeType": "YulIf",
															"src": "6052:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6113:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6136:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6123:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6113:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6155:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6182:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6193:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6000:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6011:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6023:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6031:6:1",
														"type": ""
													}
												],
												"src": "5955:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:98:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6373:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6385:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6396:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6381:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6373:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:1"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6445:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_SelledNFT",
																	"nodeType": "YulIdentifier",
																	"src": "6409:27:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6409:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6409:46:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_SelledNFT_$2426_memory_ptr__to_t_struct$_SelledNFT_$2426_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6332:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6343:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6354:4:1",
														"type": ""
													}
												],
												"src": "6208:253:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6617:530:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6627:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6637:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6631:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6648:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6666:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6677:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6662:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6652:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6696:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6707:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6689:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6689:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6719:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6730:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6723:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6745:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6765:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6759:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6749:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6788:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6796:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6781:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6781:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6812:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6823:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6834:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6819:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6812:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6846:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6864:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6872:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6860:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6850:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6884:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6893:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6888:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6952:169:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6973:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6988:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "6982:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6982:13:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6997:42:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6978:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6978:62:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6966:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6966:75:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6966:75:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7054:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7065:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7070:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7061:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7061:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7054:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7086:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7100:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7108:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7096:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7096:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7086:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6917:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6911:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6925:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6927:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6936:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6939:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6932:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6932:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6927:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6907:3:1",
																"statements": []
															},
															"src": "6903:218:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7130:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7138:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7130:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6586:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6608:4:1",
														"type": ""
													}
												],
												"src": "6466:681:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7253:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7263:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7275:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7263:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7305:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7320:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7328:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7316:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7316:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7222:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7233:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7244:4:1",
														"type": ""
													}
												],
												"src": "7152:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7504:404:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7551:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7560:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7563:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7553:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7553:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7553:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7525:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7534:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7521:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7546:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:33:1"
															},
															"nodeType": "YulIf",
															"src": "7514:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7576:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7602:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7580:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7646:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7621:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7621:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7621:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7661:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7671:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7685:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7723:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7695:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7695:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7685:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7736:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7763:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7774:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7759:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7746:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7787:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7830:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7815:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7802:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "7791:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "7868:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7843:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7843:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7885:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "7895:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7446:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7457:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7469:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7477:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7485:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7493:6:1",
														"type": ""
													}
												],
												"src": "7383:525:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8000:301:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8046:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8055:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8058:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8048:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8048:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8048:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8021:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8030:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8017:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8017:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8042:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8013:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8013:32:1"
															},
															"nodeType": "YulIf",
															"src": "8010:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8071:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8097:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8084:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8084:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8075:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8141:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8116:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8116:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8156:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8166:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8156:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8180:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8223:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8208:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8195:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "8184:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "8261:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8236:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8236:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8236:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8278:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "8288:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7958:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7969:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7981:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7989:6:1",
														"type": ""
													}
												],
												"src": "7913:388:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8338:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8355:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8358:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8348:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8348:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8452:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8455:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8445:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8445:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8476:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8479:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8469:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8469:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8306:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8527:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8544:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8537:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8537:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8641:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8644:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8634:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8665:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8668:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8658:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8658:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8495:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8731:148:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8822:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8824:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8824:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8824:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8747:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8754:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8744:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8744:77:1"
															},
															"nodeType": "YulIf",
															"src": "8741:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8853:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8864:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8871:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8860:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8853:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8713:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8723:3:1",
														"type": ""
													}
												],
												"src": "8684:195:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9058:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9075:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9086:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9068:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9068:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9109:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9120:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9105:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9105:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9125:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9098:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9098:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9098:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9159:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9144:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9164:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9137:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9137:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9192:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9204:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9215:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9200:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9192:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9035:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9049:4:1",
														"type": ""
													}
												],
												"src": "8884:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9403:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9420:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9413:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9454:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9465:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9450:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9470:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9443:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9443:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9493:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9504:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9489:18:1"
																	},
																	{
																		"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9509:26:1",
																		"type": "",
																		"value": "This NFT is not for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9482:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9482:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9545:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9557:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9568:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9553:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9553:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9545:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9380:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9394:4:1",
														"type": ""
													}
												],
												"src": "9229:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9756:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9766:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9807:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9818:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9803:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9823:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9796:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9796:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9846:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9857:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9862:34:1",
																		"type": "",
																		"value": "This token selled by Native coin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9835:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9835:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9906:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9918:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9929:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9906:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9733:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9747:4:1",
														"type": ""
													}
												],
												"src": "9582:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10024:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10070:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10079:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10082:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10072:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10072:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10072:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10045:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10054:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10041:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10066:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10037:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10037:32:1"
															},
															"nodeType": "YulIf",
															"src": "10034:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10095:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10111:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10105:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10105:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9990:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10001:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10013:6:1",
														"type": ""
													}
												],
												"src": "9943:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10306:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10323:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10316:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10316:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10357:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10368:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10353:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10373:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10346:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10346:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10396:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10407:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10392:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10392:18:1"
																	},
																	{
																		"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10412:34:1",
																		"type": "",
																		"value": "You do not have enough tokens on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10385:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10385:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10478:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10463:18:1"
																	},
																	{
																		"hexValue": "20796f75722062616c616e636520746f20706179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10483:22:1",
																		"type": "",
																		"value": " your balance to pay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10456:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10456:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10515:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10527:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10538:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10515:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10283:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10297:4:1",
														"type": ""
													}
												],
												"src": "10132:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10682:198:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10692:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10715:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10700:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10692:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10727:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10737:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10731:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10795:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10810:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10818:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10806:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10806:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10788:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10788:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10842:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10862:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10870:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10858:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10858:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10831:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10643:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10654:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10662:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10673:4:1",
														"type": ""
													}
												],
												"src": "10553:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11059:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11076:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11087:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11069:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11069:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11121:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11106:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11126:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11099:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11099:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11149:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11160:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11145:18:1"
																	},
																	{
																		"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11165:34:1",
																		"type": "",
																		"value": "You did not allow the contract t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11138:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11220:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11231:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11216:18:1"
																	},
																	{
																		"hexValue": "6f2073656e642074686520707572636861736520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11236:28:1",
																		"type": "",
																		"value": "o send the purchase amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11274:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11286:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11297:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11282:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11282:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11274:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11036:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11050:4:1",
														"type": ""
													}
												],
												"src": "10885:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11469:241:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11479:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11491:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11502:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11487:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11479:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11514:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11524:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11518:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11582:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11597:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11605:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11593:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11575:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11629:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11625:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11649:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11657:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11645:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11618:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11618:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11618:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11692:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11677:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11697:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11670:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11670:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11422:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11433:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11441:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11449:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11460:4:1",
														"type": ""
													}
												],
												"src": "11312:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11956:391:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11966:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11978:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11989:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11974:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11974:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11966:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12002:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12012:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12006:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12070:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12085:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12093:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12081:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12063:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12063:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12117:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12128:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12113:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12137:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12145:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12133:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12106:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12106:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12106:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12169:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12180:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12165:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "12189:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12197:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12185:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12158:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12158:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12221:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12232:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12217:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12217:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12237:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12210:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12210:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12275:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12260:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "12285:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12293:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12281:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12253:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12253:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12328:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12313:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12334:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12306:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11885:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11896:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11904:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11912:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11920:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11928:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11936:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11947:4:1",
														"type": ""
													}
												],
												"src": "11715:632:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12481:168:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12503:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12514:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12533:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12548:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12556:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12544:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12526:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12526:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12620:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12631:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12616:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12616:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12636:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12609:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12609:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12609:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12442:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12453:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12461:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12472:4:1",
														"type": ""
													}
												],
												"src": "12352:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12828:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12845:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12838:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12879:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12890:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12895:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12868:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12868:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12918:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12929:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12914:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12914:18:1"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f776564204e465420636f6c6c656374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12934:28:1",
																		"type": "",
																		"value": "Not allowed NFT collection"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12907:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12907:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12907:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12972:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12984:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12995:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12980:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12972:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12805:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12819:4:1",
														"type": ""
													}
												],
												"src": "12654:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13090:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13136:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13145:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13138:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13138:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13138:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13111:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13120:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13107:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13107:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:32:1"
															},
															"nodeType": "YulIf",
															"src": "13100:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13161:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13180:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13174:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13165:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13224:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "13199:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13199:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13199:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13239:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13249:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13239:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13056:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13067:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13079:6:1",
														"type": ""
													}
												],
												"src": "13009:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13439:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13456:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13467:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13449:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13449:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13449:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13490:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13501:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13486:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13506:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13479:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13529:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13540:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13525:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13545:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13518:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13518:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13582:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13594:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13605:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13590:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13590:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13582:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13416:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13430:4:1",
														"type": ""
													}
												],
												"src": "13265:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13793:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13810:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13821:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13803:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13803:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13855:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13840:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13860:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13833:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13833:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13894:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13879:18:1"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13899:33:1",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13872:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13872:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13942:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13954:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13965:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13950:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13942:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13770:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13784:4:1",
														"type": ""
													}
												],
												"src": "13619:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14153:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14163:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14163:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14215:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14200:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14220:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14193:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14254:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14239:18:1"
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14259:34:1",
																		"type": "",
																		"value": "This ERC20 not allowed as a trad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14232:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14232:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14314:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14325:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14310:18:1"
																	},
																	{
																		"hexValue": "696e672063757272656e6379",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14330:14:1",
																		"type": "",
																		"value": "ing currency"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14303:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14303:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14354:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14366:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14377:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14362:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14354:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14130:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14144:4:1",
														"type": ""
													}
												],
												"src": "13979:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14605:338:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14615:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14627:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14638:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14615:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14651:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14661:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14655:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14719:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14734:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14742:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14730:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14712:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14712:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14777:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14762:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14786:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14794:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14782:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14755:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14755:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14818:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14829:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14814:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14814:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14834:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14807:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14807:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14807:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14861:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14872:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14857:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "14881:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14889:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14877:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14850:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14850:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14924:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14909:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14930:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14902:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14902:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14542:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14553:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14561:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14569:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14577:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14585:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14596:4:1",
														"type": ""
													}
												],
												"src": "14392:551:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15133:285:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15143:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15155:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15166:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15151:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15143:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15179:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15189:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15183:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15247:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15262:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15270:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15258:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15240:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15240:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15294:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15305:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15290:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15314:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15322:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15310:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15283:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15283:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15346:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15357:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15342:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15362:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15335:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15389:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15400:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15385:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15405:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15378:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15378:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15078:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15089:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15097:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15105:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15113:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15124:4:1",
														"type": ""
													}
												],
												"src": "14948:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15597:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15625:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15607:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15607:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15648:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15659:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15644:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15644:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15664:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15637:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15637:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15687:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15698:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15683:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15683:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f7220746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15703:34:1",
																		"type": "",
																		"value": "You have not paid enough for thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15676:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15676:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15676:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15758:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15769:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15754:18:1"
																	},
																	{
																		"hexValue": "73206974656d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15774:8:1",
																		"type": "",
																		"value": "s item"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15747:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15747:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15792:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15804:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15815:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15800:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15800:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15792:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15574:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15588:4:1",
														"type": ""
													}
												],
												"src": "15423:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16004:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16021:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16032:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16014:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16014:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16055:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16066:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16051:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16071:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16044:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16044:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16094:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16105:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16090:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16110:28:1",
																		"type": "",
																		"value": "This token selled by ERC20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16083:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16083:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16148:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16160:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16171:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16156:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16148:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15981:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15995:4:1",
														"type": ""
													}
												],
												"src": "15830:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16398:338:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16408:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16420:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16431:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16416:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16408:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16444:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16454:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16448:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16512:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16527:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16535:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16523:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16505:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16505:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16570:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16555:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16579:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16587:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16575:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16548:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16548:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16611:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16622:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16607:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "16631:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16639:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16627:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16600:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16600:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16674:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16659:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16679:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16652:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16652:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16706:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16717:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16702:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16723:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16695:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16695:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16335:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16346:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16354:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16362:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16370:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16389:4:1",
														"type": ""
													}
												],
												"src": "16185:551:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16915:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16932:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16943:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16925:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16925:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16966:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16977:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16962:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16982:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16955:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16955:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17005:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17016:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17001:18:1"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420666f756e646564206174206d61726b6574706c616365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17021:34:1",
																		"type": "",
																		"value": "Token not founded at marketplace"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16994:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16994:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17065:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17077:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17088:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17073:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17073:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17065:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16892:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16906:4:1",
														"type": ""
													}
												],
												"src": "16741:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17276:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17293:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17286:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17286:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17327:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17338:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17323:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17343:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17316:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17316:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17366:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17377:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17362:18:1"
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17382:22:1",
																		"type": "",
																		"value": "This is not your NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17355:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17355:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17414:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17426:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17437:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17422:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17422:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17414:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17253:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17267:4:1",
														"type": ""
													}
												],
												"src": "17102:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17625:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17642:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17635:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17635:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17676:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17687:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17672:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17692:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17665:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17665:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17726:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17711:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17731:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17704:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17704:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17786:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17797:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17782:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17802:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17775:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17775:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17820:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17832:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17843:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17828:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17828:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17820:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17602:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17616:4:1",
														"type": ""
													}
												],
												"src": "17451:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17936:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17982:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17991:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17994:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17984:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17984:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17984:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17957:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17966:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17953:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17978:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17949:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17949:32:1"
															},
															"nodeType": "YulIf",
															"src": "17946:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18007:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18026:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18020:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18020:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "18011:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18089:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18098:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18101:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18091:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18091:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18091:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18058:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "18079:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "18072:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18072:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18065:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18065:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18055:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18055:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18048:40:1"
															},
															"nodeType": "YulIf",
															"src": "18045:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18114:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18124:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "18114:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17902:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17913:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17925:6:1",
														"type": ""
													}
												],
												"src": "17858:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18314:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18331:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18342:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18324:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18324:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18365:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18376:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18361:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18381:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18354:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18354:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18415:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18400:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18420:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18393:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18393:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18464:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18476:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18487:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18472:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18472:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18464:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18291:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18305:4:1",
														"type": ""
													}
												],
												"src": "18140:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18547:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18578:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18599:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18602:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18592:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18592:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18592:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18700:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18703:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18693:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18693:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18693:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18728:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18731:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18721:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18721:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18721:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18567:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18560:9:1"
															},
															"nodeType": "YulIf",
															"src": "18557:189:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18755:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18764:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18767:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18760:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18760:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18755:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18532:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18535:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18541:1:1",
														"type": ""
													}
												],
												"src": "18501:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18832:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18842:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18857:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18860:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18853:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18853:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18842:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18920:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18922:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18922:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18922:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18891:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18884:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18884:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "18898:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "18905:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "18914:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "18901:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18901:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "18895:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18895:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "18881:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18881:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18874:45:1"
															},
															"nodeType": "YulIf",
															"src": "18871:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18811:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18814:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18820:7:1",
														"type": ""
													}
												],
												"src": "18780:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19002:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19012:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19024:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19027:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19020:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19012:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19053:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19055:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19055:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19055:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "19044:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19050:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19041:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19041:11:1"
															},
															"nodeType": "YulIf",
															"src": "19038:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18984:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18987:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18993:4:1",
														"type": ""
													}
												],
												"src": "18953:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19133:149:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19160:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19162:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19162:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19162:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19153:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19146:13:1"
															},
															"nodeType": "YulIf",
															"src": "19143:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19191:85:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19202:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19209:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19198:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19198:78:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19191:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19125:3:1",
														"type": ""
													}
												],
												"src": "19086:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19319:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19336:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19339:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19329:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19329:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19329:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19433:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19436:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19426:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19426:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19457:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19460:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19450:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19450:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "19287:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19650:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19667:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19678:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19660:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19660:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19701:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19712:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19697:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19717:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19690:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19690:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19740:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19751:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19736:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19736:18:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19756:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19729:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19729:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19811:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19822:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19807:18:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19827:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19800:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19800:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19800:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19849:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19861:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19872:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19857:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19857:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19849:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19627:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19641:4:1",
														"type": ""
													}
												],
												"src": "19476:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20061:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20078:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20089:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20071:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20071:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20112:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20123:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20108:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20128:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20101:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20101:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20162:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20147:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20167:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20140:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20140:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20222:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20233:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20218:18:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20238:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20211:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20211:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20256:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20268:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20279:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20264:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20256:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20038:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20052:4:1",
														"type": ""
													}
												],
												"src": "19887:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20360:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20370:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20379:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20374:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20439:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20464:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20469:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20460:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20460:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "20483:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20488:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20479:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20479:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20473:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20473:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20453:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20453:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20453:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20400:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20403:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20397:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20397:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20411:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20413:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20422:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20425:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20418:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20418:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20413:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20393:3:1",
																"statements": []
															},
															"src": "20389:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "20522:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20527:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20518:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20536:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20511:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20511:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20338:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20343:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20348:6:1",
														"type": ""
													}
												],
												"src": "20294:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20686:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20696:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20716:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20710:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20710:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20700:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "20771:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20779:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20767:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20786:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20791:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "20732:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20732:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20732:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20807:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20818:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20823:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20814:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20814:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20807:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20662:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20667:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20678:3:1",
														"type": ""
													}
												],
												"src": "20549:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21015:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21025:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21025:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21077:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21062:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21082:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21055:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21055:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21105:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21116:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21101:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21121:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21094:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21094:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21162:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21185:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21170:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21170:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21162:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20992:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21006:4:1",
														"type": ""
													}
												],
												"src": "20841:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21320:334:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21337:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21348:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21330:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21330:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21360:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21380:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21374:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21374:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21364:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21403:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21423:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21396:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21396:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "21478:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21486:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21474:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21506:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21491:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21511:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21439:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21439:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21439:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21527:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21543:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "21562:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21570:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "21558:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21558:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21575:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "21554:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21554:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21539:104:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21645:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21535:113:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21527:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21289:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21300:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21311:4:1",
														"type": ""
													}
												],
												"src": "21199:455:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_struct_SelledNFT(value, pos)\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_SelledNFT(mload(srcPtr), pos)\n            pos := add(pos, 0xc0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_SelledNFT_$2426_memory_ptr__to_t_struct$_SelledNFT_$2426_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_SelledNFT(value0, headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"This NFT is not for sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"This token selled by Native coin\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"You do not have enough tokens on\")\n        mstore(add(headStart, 96), \" your balance to pay\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"You did not allow the contract t\")\n        mstore(add(headStart, 96), \"o send the purchase amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Not allowed NFT collection\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You don't own this token!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Price must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"This ERC20 not allowed as a trad\")\n        mstore(add(headStart, 96), \"ing currency\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You have not paid enough for thi\")\n        mstore(add(headStart, 96), \"s item\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"This token selled by ERC20\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Token not founded at marketplace\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"This is not your NFT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101d85760003560e01c8063785fa7ce11610102578063c8f7789911610095578063e9e4e16011610064578063e9e4e160146105c2578063efdcd974146105e2578063f2fde38b14610602578063f4f3b2001461062257600080fd5b8063c8f7789914610542578063cb4ca91914610557578063da24548a14610577578063e8a353921461059757600080fd5b8063a7c9197a116100d1578063a7c9197a146104a7578063a82ba76f146104bc578063b7b7b8ff146104cf578063c8d8101c146104ef57600080fd5b8063785fa7ce146104065780638da5cb5b14610426578063952977f51461047257806398f748bd1461048757600080fd5b8063527f29021161017a5780635c975abb116101495780635c975abb1461037f5780636629e913146103af57806369c57352146103dc578063715018a6146103f157600080fd5b8063527f2902146102d957806354fd4d50146102f95780635b4e7add1461031c5780635b87f0f21461035f57600080fd5b80632ca38df5116101b65780632ca38df51461023f5780633a51f383146102755780633eac63ed146102975780635211ac2e146102c457600080fd5b806310603023146101dd57806327713536146101ff5780632b205d141461021f575b600080fd5b3480156101e957600080fd5b506101fd6101f836600461349f565b610642565b005b34801561020b57600080fd5b506101fd61021a366004613519565b61064f565b34801561022b57600080fd5b506101fd61023a3660046135fc565b610807565b34801561024b57600080fd5b5061025f61025a366004613628565b610e06565b60405161026c919061365d565b60405180910390f35b34801561028157600080fd5b5061028a61102c565b60405161026c91906136fc565b3480156102a357600080fd5b506102b76102b236600461374a565b61109b565b60405161026c9190613767565b3480156102d057600080fd5b506101fd6111e9565b3480156102e557600080fd5b5060015b604051901515815260200161026c565b34801561030557600080fd5b5061030e600181565b60405190815260200161026c565b34801561032857600080fd5b5061030e61033736600461374a565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b34801561036b57600080fd5b5061025f61037a3660046137cc565b61125d565b34801561038b57600080fd5b5060005474010000000000000000000000000000000000000000900460ff166102e9565b3480156103bb57600080fd5b506103cf6103ca3660046135fc565b611311565b60405161026c91906137ee565b3480156103e857600080fd5b5061028a61147e565b3480156103fd57600080fd5b506101fd6114eb565b34801561041257600080fd5b506102e961042136600461374a565b6114ff565b34801561043257600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161026c565b34801561047e57600080fd5b5060015461030e565b34801561049357600080fd5b506101fd6104a236600461384d565b611570565b3480156104b357600080fd5b506102b7611a64565b6101fd6104ca3660046135fc565b611bbc565b3480156104db57600080fd5b5061025f6104ea366004613628565b61201b565b3480156104fb57600080fd5b5061030e61050a366004613897565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260086020908152604080832093909416825291909152205490565b34801561054e57600080fd5b5060055461030e565b34801561056357600080fd5b5061025f6105723660046137cc565b612234565b34801561058357600080fd5b506101fd6105923660046135fc565b612241565b3480156105a357600080fd5b5060095473ffffffffffffffffffffffffffffffffffffffff1661044d565b3480156105ce57600080fd5b506101fd6105dd366004613519565b6124a0565b3480156105ee57600080fd5b506101fd6105fd36600461374a565b6124bb565b34801561060e57600080fd5b506101fd61061d36600461374a565b61250a565b34801561062e57600080fd5b506101fd61063d36600461374a565b6125c1565b61064a612783565b600155565b610657612783565b60005b6002548110156106ee576000600360006002848154811061067d5761067d6138d0565b60009182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055806106e68161392e565b91505061065a565b506106fb600260006133ea565b60005b815181101561080357600282828151811061071b5761071b6138d0565b60209081029190910181015182546001808201855560009485529284200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905583519091600391859085908110610794576107946138d0565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055806107fb8161392e565b9150506106fe565b5050565b60005474010000000000000000000000000000000000000000900460ff1615610891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064015b60405180910390fd5b600061089d8383611311565b805190915073ffffffffffffffffffffffffffffffffffffffff1661091e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f54686973204e4654206973206e6f7420666f722073616c6500000000000000006044820152606401610888565b608081015173ffffffffffffffffffffffffffffffffffffffff1661099f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e6044820152606401610888565b60808101516040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a359190613966565b90508260600151811015610acb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e60448201527f20796f75722062616c616e636520746f207061790000000000000000000000006064820152608401610888565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015260009073ffffffffffffffffffffffffffffffffffffffff84169063dd62ed3e90604401602060405180830381865afa158015610b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b629190613966565b90508360600151811015610bf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f596f7520646964206e6f7420616c6c6f772074686520636f6e7472616374207460448201527f6f2073656e642074686520707572636861736520616d6f756e740000000000006064820152608401610888565b60608401516000610c15610c0d836064612804565b600154612810565b9050610c3660005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16866040015173ffffffffffffffffffffffffffffffffffffffff1603610c70575060005b6000610c7c838361281c565b6040880151909150610ca89073ffffffffffffffffffffffffffffffffffffffff881690339084612828565b8115610cd757600954610cd79073ffffffffffffffffffffffffffffffffffffffff8881169133911685612828565b865160208801516040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401600060405180830381600087803b158015610d5457600080fd5b505af1158015610d68573d6000803e3d6000fd5b50505050610d7689896128c3565b60408781015188516020808b01516080808d01516060808f0151885173ffffffffffffffffffffffffffffffffffffffff988916815233968101969096529587168589015284019290925293169281019290925260a082015290517fa3d27cc8ac4e1915b6a89ce3e468d87aeb3caf011a47e236db61d098e452870c9181900360c00190a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260076020526040902054606090156110255773ffffffffffffffffffffffffffffffffffffffff841660009081526007602052604090205467ffffffffffffffff811115610e7257610e726134b8565b604051908082528060200260200182016040528015610ef057816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610e905790505b5090506000805b600554811015611022578573ffffffffffffffffffffffffffffffffffffffff1660058281548110610f2b57610f2b6138d0565b600091825260209091206002600690920201015473ffffffffffffffffffffffffffffffffffffffff16036110105760058181548110610f6d57610f6d6138d0565b60009182526020918290206040805160c0810182526006909302909101805473ffffffffffffffffffffffffffffffffffffffff90811684526001820154948401949094526002810154841691830191909152600381015460608301526004810154909216608082015260059091015460a08201528351849084908110610ff657610ff66138d0565b6020026020010181905250818061100c9061392e565b9250505b8061101a8161392e565b915050610ef7565b50505b9392505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561109157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611066575b5050505050905090565b60025460609067ffffffffffffffff8111156110b9576110b96134b8565b6040519080825280602002602001820160405280156110fe57816020015b60408051808201909152600080825260208201528152602001906001900390816110d75790505b50905060005b6002548110156111e35760405180604001604052806002838154811061112c5761112c6138d0565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff9081168452871682526008815260408220600280549490920193909291908690811061117d5761117d6138d0565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902054905282518390839081106111c5576111c56138d0565b602002602001018190525080806111db9061392e565b915050611104565b50919050565b6111f1612783565b6040514790339082156108fc029083906000818181858888f19350505050158015611220573d6000803e3d6000fd5b5060408051338152602081018390527f2f15b7a52fc8a006876377705647acbd22eed72dec9b154aa290e286c06a3cd4910160405180910390a150565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156113045760008481526020908190206040805160c08101825260068602909201805473ffffffffffffffffffffffffffffffffffffffff90811684526001808301548587015260028301548216938501939093526003820154606085015260048201541660808401526005015460a08301529083529092019101611281565b5050505090505b92915050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052905b600554811015611477578373ffffffffffffffffffffffffffffffffffffffff1660058281548110611378576113786138d0565b600091825260209091206006909102015473ffffffffffffffffffffffffffffffffffffffff161480156113cf575082600582815481106113bb576113bb6138d0565b906000526020600020906006020160010154145b1561146557600581815481106113e7576113e76138d0565b60009182526020918290206040805160c0810182526006909302909101805473ffffffffffffffffffffffffffffffffffffffff90811684526001820154948401949094526002810154841691830191909152600381015460608301526004810154909216608082015260059091015460a0820152915061130b9050565b8061146f8161392e565b915050611344565b5092915050565b606060048054806020026020016040519081016040528092919081815260200182805480156110915760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611066575050505050905090565b6114f3612783565b6114fd6000612e4f565b565b6000805b6004548110156115675760048181548110611520576115206138d0565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff908116908416036115555750600192915050565b8061155f8161392e565b915050611503565b50600092915050565b60005474010000000000000000000000000000000000000000900460ff16156115f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610888565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604090205460ff16611684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f7420616c6c6f776564204e465420636f6c6c656374696f6e0000000000006044820152606401610888565b6040517f6352211e00000000000000000000000000000000000000000000000000000000815260048101849052339073ffffffffffffffffffffffffffffffffffffffff861690636352211e90602401602060405180830381865afa1580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611715919061397f565b73ffffffffffffffffffffffffffffffffffffffff1614611792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f7520646f6e2774206f776e207468697320746f6b656e21000000000000006044820152606401610888565b600082116117fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f006044820152606401610888565b73ffffffffffffffffffffffffffffffffffffffff8116156118b257611821816114ff565b15156001146118b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f54686973204552433230206e6f7420616c6c6f7765642061732061207472616460448201527f696e672063757272656e637900000000000000000000000000000000000000006064820152608401610888565b6040805160c08101825273ffffffffffffffffffffffffffffffffffffffff86811680835260208301879052338385018190526060840187905291851660808401524260a084015292517f23b872dd0000000000000000000000000000000000000000000000000000000081526004810191909152306024820152604481018690529091906323b872dd90606401600060405180830381600087803b15801561195a57600080fd5b505af115801561196e573d6000803e3d6000fd5b5050505061197b81612ec4565b73ffffffffffffffffffffffffffffffffffffffff82166119ff576040805133815273ffffffffffffffffffffffffffffffffffffffff8781166020830152818301879052841660608201526080810185905290517f44f716b281fa3e96fbd6ef888a275ef2fdf8914960a4c57c0bef6ccaebf0df319181900360a00190a1611a5d565b6040805133815273ffffffffffffffffffffffffffffffffffffffff87166020820152908101859052606081018490527fc68dc1f889fa3a215dcdd97178af6bd67fab7b34138eef18f4313aac53f5b3649060800160405180910390a15b5050505050565b60025460609067ffffffffffffffff811115611a8257611a826134b8565b604051908082528060200260200182016040528015611ac757816020015b6040805180820190915260008082526020820152815260200190600190039081611aa05790505b50905060005b600254811015611bb857604051806040016040528060028381548110611af557611af56138d0565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006600060028581548110611b5257611b526138d0565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16835282019290925260400190205490528251839083908110611b9a57611b9a6138d0565b60200260200101819052508080611bb09061392e565b915050611acd565b5090565b60005474010000000000000000000000000000000000000000900460ff1615611c41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610888565b6000611c4d8383611311565b805190915073ffffffffffffffffffffffffffffffffffffffff16611cce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f54686973204e4654206973206e6f7420666f722073616c6500000000000000006044820152606401610888565b8060600151341015611d62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f596f752068617665206e6f74207061696420656e6f75676820666f722074686960448201527f73206974656d00000000000000000000000000000000000000000000000000006064820152608401610888565b608081015173ffffffffffffffffffffffffffffffffffffffff1615611de4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5468697320746f6b656e2073656c6c65642062792045524332300000000000006044820152606401610888565b346000611df5610c0d836064612804565b9050611e1660005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16836040015173ffffffffffffffffffffffffffffffffffffffff1603611e50575060005b6000611e5c838361281c565b9050836040015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611ea8573d6000803e3d6000fd5b508115611ef85760095460405173ffffffffffffffffffffffffffffffffffffffff9091169083156108fc029084906000818181858888f19350505050158015611ef6573d6000803e3d6000fd5b505b835160208501516040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401600060405180830381600087803b158015611f7557600080fd5b505af1158015611f89573d6000803e3d6000fd5b50505050611f9786866128c3565b60408085015185516020808801516060808a0151865173ffffffffffffffffffffffffffffffffffffffff9687168152339481019490945294909316948201949094529081019290925260808201527fbab4aa6b2d5c0935e0e2937d1f73655848f670d43bf6f0c7e9e11e635bb5d86f9060a00160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020526040902054606090156110255773ffffffffffffffffffffffffffffffffffffffff841660009081526006602052604090205467ffffffffffffffff811115612087576120876134b8565b60405190808252806020026020018201604052801561210557816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816120a55790505b5090506000805b600554811015611022578573ffffffffffffffffffffffffffffffffffffffff1660058281548110612140576121406138d0565b600091825260209091206006909102015473ffffffffffffffffffffffffffffffffffffffff1603612222576005818154811061217f5761217f6138d0565b60009182526020918290206040805160c0810182526006909302909101805473ffffffffffffffffffffffffffffffffffffffff90811684526001820154948401949094526002810154841691830191909152600381015460608301526004810154909216608082015260059091015460a08201528351849084908110612208576122086138d0565b6020026020010181905250818061221e9061392e565b9250505b8061222c8161392e565b91505061210c565b6060611025338484610e06565b600061224d8383611311565b805190915073ffffffffffffffffffffffffffffffffffffffff166122ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f546f6b656e206e6f7420666f756e646564206174206d61726b6574706c6163656044820152606401610888565b60005473ffffffffffffffffffffffffffffffffffffffff16331461238657806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f54686973206973206e6f7420796f7572204e46540000000000000000000000006044820152606401610888565b8051604080830151602084015191517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff91821660248201526044810192909252909116906323b872dd90606401600060405180830381600087803b15801561240a57600080fd5b505af115801561241e573d6000803e3d6000fd5b50505050612434816000015182602001516128c3565b6040818101518251602080850151845173ffffffffffffffffffffffffffffffffffffffff94851681529390921690830152918101919091527fcfd975662262e48e8c2b68605e79d409da1b108bdc941f32d355c4cf11d35925906060015b60405180910390a1505050565b6124a8612783565b8051610803906004906020840190613408565b6124c3612783565b600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b612512612783565b73ffffffffffffffffffffffffffffffffffffffff81166125b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610888565b6125be81612e4f565b50565b6125c9612783565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015612638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061265c9190613966565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61269960005473ffffffffffffffffffffffffffffffffffffffff1690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018490526044016020604051808303816000875af115801561270b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272f919061399c565b506040805133815273ffffffffffffffffffffffffffffffffffffffff851660208201529081018290527f33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb2990606001612493565b60005473ffffffffffffffffffffffffffffffffffffffff1633146114fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610888565b600061102582846139be565b600061102582846139f9565b60006110258284613a10565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526128bd9085906130cf565b50505050565b6005805473ffffffffffffffffffffffffffffffffffffffff841691906128ec90600190613a10565b815481106128fc576128fc6138d0565b600091825260209091206006909102015473ffffffffffffffffffffffffffffffffffffffff1614801561296257506005805482919061293e90600190613a10565b8154811061294e5761294e6138d0565b906000526020600020906006020160010154145b15612b25576005805460079160009161297d90600190613a10565b8154811061298d5761298d6138d0565b600091825260208083206002600690930201919091015473ffffffffffffffffffffffffffffffffffffffff16835282019290925260400181208054916129d383613a23565b9091555050600580546008916000916129ee90600190613a10565b815481106129fe576129fe6138d0565b600091825260208083206002600690930201919091015473ffffffffffffffffffffffffffffffffffffffff908116845283820194909452604092830182209386168252929092528120805491612a5483613a23565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600660205260408120805491612a8a83613a23565b91905055506005805480612aa057612aa0613a58565b60008281526020812060067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9093019283020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116825560018201839055600282018054821690556003820183905560048201805490911690556005015590555b60005b600554811015612e4a578273ffffffffffffffffffffffffffffffffffffffff1660058281548110612b5c57612b5c6138d0565b600091825260209091206006909102015473ffffffffffffffffffffffffffffffffffffffff16148015612bb357508160058281548110612b9f57612b9f6138d0565b906000526020600020906006020160010154145b15612e38576007600060058381548110612bcf57612bcf6138d0565b600091825260208083206002600690930201919091015473ffffffffffffffffffffffffffffffffffffffff1683528201929092526040018120805491612c1583613a23565b91905055506008600060058381548110612c3157612c316138d0565b600091825260208083206002600690930201919091015473ffffffffffffffffffffffffffffffffffffffff908116845283820194909452604092830182209387168252929092528120805491612c8783613a23565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152600660205260408120805491612cbd83613a23565b909155505060058054612cd290600190613a10565b81548110612ce257612ce26138d0565b906000526020600020906006020160058281548110612d0357612d036138d0565b600091825260209091208254600690920201805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161782556001808501549083015560028085015490830180549185169183169190911790556003808501549083015560048085015490830180549190941691161790915560059182015490820155805480612daf57612daf613a58565b60008281526020812060067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9093019283020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820183905560028201805482169055600382018390556004820180549091169055600501559055505050565b80612e428161392e565b915050612b28565b505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600580546001810182556000918252825160069182027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08101805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092556020808801517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18501556040808901517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db28601805491881691851691909117905560608901517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db386015560808901517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4860180549190971693169290921790945560a08701517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db590930192909255845291905281208054916130418361392e565b909155505060408082015173ffffffffffffffffffffffffffffffffffffffff166000908152600760205290812080549161307b8361392e565b909155505060408082015173ffffffffffffffffffffffffffffffffffffffff90811660009081526008602090815283822085519093168252919091529081208054916130c78361392e565b919050555050565b6000613131826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166131db9092919063ffffffff16565b805190915015612e4a578080602001905181019061314f919061399c565b612e4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610888565b60606131ea84846000856131f2565b949350505050565b606082471015613284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610888565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516132ad9190613aab565b60006040518083038185875af1925050503d80600081146132ea576040519150601f19603f3d011682016040523d82523d6000602084013e6132ef565b606091505b50915091506133008783838761330b565b979650505050505050565b606083156133a157825160000361339a5773ffffffffffffffffffffffffffffffffffffffff85163b61339a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610888565b50816131ea565b6131ea83838151156133b65781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108889190613ac7565b50805460008255906000526020600020908101906125be919061348a565b828054828255906000526020600020908101928215613482579160200282015b8281111561348257825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190613428565b50611bb89291505b5b80821115611bb8576000815560010161348b565b6000602082840312156134b157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146125be57600080fd5b8035613514816134e7565b919050565b6000602080838503121561352c57600080fd5b823567ffffffffffffffff8082111561354457600080fd5b818501915085601f83011261355857600080fd5b81358181111561356a5761356a6134b8565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156135ad576135ad6134b8565b6040529182528482019250838101850191888311156135cb57600080fd5b938501935b828510156135f0576135e185613509565b845293850193928501926135d0565b98975050505050505050565b6000806040838503121561360f57600080fd5b823561361a816134e7565b946020939093013593505050565b60008060006060848603121561363d57600080fd5b8335613648816134e7565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156136f0576136dd83855173ffffffffffffffffffffffffffffffffffffffff80825116835260208201516020840152806040830151166040840152606082015160608401528060808301511660808401525060a081015160a08301525050565b9284019260c09290920191600101613679565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156136f057835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101613718565b60006020828403121561375c57600080fd5b8135611025816134e7565b602080825282518282018190526000919060409081850190868401855b828110156137bf578151805173ffffffffffffffffffffffffffffffffffffffff168552860151868501529284019290850190600101613784565b5091979650505050505050565b600080604083850312156137df57600080fd5b50508035926020909101359150565b60c0810161130b828473ffffffffffffffffffffffffffffffffffffffff80825116835260208201516020840152806040830151166040840152606082015160608401528060808301511660808401525060a081015160a08301525050565b6000806000806080858703121561386357600080fd5b843561386e816134e7565b93506020850135925060408501359150606085013561388c816134e7565b939692955090935050565b600080604083850312156138aa57600080fd5b82356138b5816134e7565b915060208301356138c5816134e7565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361395f5761395f6138ff565b5060010190565b60006020828403121561397857600080fd5b5051919050565b60006020828403121561399157600080fd5b8151611025816134e7565b6000602082840312156139ae57600080fd5b8151801515811461102557600080fd5b6000826139f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808202811582820484141761130b5761130b6138ff565b8181038181111561130b5761130b6138ff565b600081613a3257613a326138ff565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60005b83811015613aa2578181015183820152602001613a8a565b50506000910152565b60008251613abd818460208701613a87565b9190910192915050565b6020815260008251806020840152613ae6816040850160208701613a87565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212204e7c2659d9e1d6d925ebc85e34c394a08c34ef326f6cfa47d80ad8c8d0c3ae3c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785FA7CE GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC8F77899 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE9E4E160 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8F77899 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xCB4CA919 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xDA24548A EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7C9197A GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA7C9197A EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xB7B7B8FF EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xC8D8101C EQ PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x98F748BD EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x527F2902 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x6629E913 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x527F2902 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x5B4E7ADD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x5B87F0F2 EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CA38DF5 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2CA38DF5 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x3A51F383 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x3EAC63ED EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x5211AC2E EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10603023 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x27713536 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2B205D14 EQ PUSH2 0x21F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x349F JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x36FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x3767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x11E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x37CC JUMP JUMPDEST PUSH2 0x125D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x37EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x147E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x14EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x14FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x30E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x384D JUMP JUMPDEST PUSH2 0x1570 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x1BBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x3897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x30E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x37CC JUMP JUMPDEST PUSH2 0x2234 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x2241 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x44D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3519 JUMP JUMPDEST PUSH2 0x24A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x24BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x250A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x374A JUMP JUMPDEST PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x64A PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x657 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x67D JUMPI PUSH2 0x67D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x6E6 DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x65A JUMP JUMPDEST POP PUSH2 0x6FB PUSH1 0x2 PUSH1 0x0 PUSH2 0x33EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x2 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 MLOAD SWAP1 SWAP2 PUSH1 0x3 SWAP2 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x794 JUMPI PUSH2 0x794 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x7FB DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x89D DUP4 DUP4 PUSH2 0x1311 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204E4654206973206E6F7420666F722073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20796F75722062616C616E636520746F20706179000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD MLOAD DUP2 LT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 PUSH2 0xC15 PUSH2 0xC0D DUP4 PUSH1 0x64 PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2810 JUMP JUMPDEST SWAP1 POP PUSH2 0xC36 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC70 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xC7C DUP4 DUP4 PUSH2 0x281C JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xCA8 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 CALLER SWAP1 DUP5 PUSH2 0x2828 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x9 SLOAD PUSH2 0xCD7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP6 PUSH2 0x2828 JUMP JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD76 DUP10 DUP10 PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD DUP9 MLOAD PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x80 DUP1 DUP14 ADD MLOAD PUSH1 0x60 DUP1 DUP16 ADD MLOAD DUP9 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 AND DUP2 MSTORE CALLER SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP8 AND DUP6 DUP10 ADD MSTORE DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xA3D27CC8AC4E1915B6A89CE3E468D87AEB3CAF011A47E236DB61D098E452870C SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x1025 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0xE90 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1022 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF2B JUMPI PUSH2 0xF2B PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1010 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xFF6 JUMPI PUSH2 0xFF6 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x100C SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x101A DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEF7 JUMP JUMPDEST POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1091 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1066 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B9 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x10D7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x112C JUMPI PUSH2 0x112C PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE DUP8 AND DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP5 SWAP1 SWAP3 ADD SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x117D JUMPI PUSH2 0x117D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x11DB SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1104 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F1 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP6 DUP8 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1281 JUMP JUMPDEST POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1477 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1378 JUMPI PUSH2 0x1378 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x13CF JUMPI POP DUP3 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13BB JUMPI PUSH2 0x13BB PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1465 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13E7 JUMPI PUSH2 0x13E7 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 POP PUSH2 0x130B SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x146F DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1344 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1091 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1066 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14F3 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x14FD PUSH1 0x0 PUSH2 0x2E4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1520 JUMPI PUSH2 0x1520 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1555 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x155F DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1503 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F776564204E465420636F6C6C656374696F6E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x397F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x17FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x1821 DUP2 PUSH2 0x14FF JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E672063757272656E63790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP8 SWAP1 MSTORE CALLER DUP4 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x195A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x196E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x197B DUP2 PUSH2 0x2EC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x19FF JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x44F716B281FA3E96FBD6EF888A275EF2FDF8914960A4C57C0BEF6CCAEBF0DF31 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xC68DC1F889FA3A215DCDD97178AF6BD67FAB7B34138EEF18F4313AAC53F5B364 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A82 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AC7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1AA0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1AF5 JUMPI PUSH2 0x1AF5 PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B52 JUMPI PUSH2 0x1B52 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1B9A JUMPI PUSH2 0x1B9A PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1BB0 SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ACD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4D DUP4 DUP4 PUSH2 0x1311 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204E4654206973206E6F7420666F722073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206974656D0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0x1DF5 PUSH2 0xC0D DUP4 PUSH1 0x64 PUSH2 0x2804 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E16 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E50 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x1E5C DUP4 DUP4 PUSH2 0x281C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1EA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1EF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1F97 DUP7 DUP7 PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP6 ADD MLOAD DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH1 0x60 DUP1 DUP11 ADD MLOAD DUP7 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xBAB4AA6B2D5C0935E0E2937D1F73655848F670D43BF6F0C7E9E11E635BB5D86F SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x1025 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2105 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x20A5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1022 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2140 JUMPI PUSH2 0x2140 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2222 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x221E SWAP1 PUSH2 0x392E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x222C DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x210C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1025 CALLER DUP5 DUP5 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224D DUP4 DUP4 PUSH2 0x1311 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E646564206174206D61726B6574706C616365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2386 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206973206E6F7420796F7572204E4654000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x240A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x241E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2434 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x40 DUP2 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP1 DUP4 ADD MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xCFD975662262E48E8C2B68605E79D409DA1B108BDC941F32D355C4CF11D35925 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x24A8 PUSH2 0x2783 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x803 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3408 JUMP JUMPDEST PUSH2 0x24C3 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2512 PUSH2 0x2783 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x25B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH2 0x25BE DUP2 PUSH2 0x2E4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25C9 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x2699 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x270B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x272F SWAP2 SWAP1 PUSH2 0x399C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29 SWAP1 PUSH1 0x60 ADD PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 DUP5 PUSH2 0x39BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 DUP5 PUSH2 0x39F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 DUP5 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x28BD SWAP1 DUP6 SWAP1 PUSH2 0x30CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 SWAP1 PUSH2 0x28EC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28FC JUMPI PUSH2 0x28FC PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2962 JUMPI POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x293E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x294E JUMPI PUSH2 0x294E PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2B25 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x297D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x298D JUMPI PUSH2 0x298D PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x29D3 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x8 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x29EE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29FE JUMPI PUSH2 0x29FE PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP7 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2A54 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2A8A DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x2AA0 JUMPI PUSH2 0x2AA0 PUSH2 0x3A58 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2E4A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B5C JUMPI PUSH2 0x2B5C PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2BB3 JUMPI POP DUP2 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B9F JUMPI PUSH2 0x2B9F PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2E38 JUMPI PUSH1 0x7 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2BCF JUMPI PUSH2 0x2BCF PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2C15 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2C31 JUMPI PUSH2 0x2C31 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP8 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2C87 DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2CBD DUP4 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH2 0x2CD2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2CE2 JUMPI PUSH2 0x2CE2 PUSH2 0x38D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D03 JUMPI PUSH2 0x2D03 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE DUP1 SLOAD DUP1 PUSH2 0x2DAF JUMPI PUSH2 0x2DAF PUSH2 0x3A58 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 ADD SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2E42 DUP2 PUSH2 0x392E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 MLOAD PUSH1 0x6 SWAP2 DUP3 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x20 DUP1 DUP9 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP6 ADD SSTORE PUSH1 0x40 DUP1 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP7 ADD DUP1 SLOAD SWAP2 DUP9 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP7 ADD SSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP7 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x3041 DUP4 PUSH2 0x392E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x307B DUP4 PUSH2 0x392E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP6 MLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x30C7 DUP4 PUSH2 0x392E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3131 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2E4A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x314F SWAP2 SWAP1 PUSH2 0x399C JUMP JUMPDEST PUSH2 0x2E4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x31EA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x31F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3284 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x32AD SWAP2 SWAP1 PUSH2 0x3AAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3300 DUP8 DUP4 DUP4 DUP8 PUSH2 0x330B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x33A1 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x339A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x339A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x888 JUMP JUMPDEST POP DUP2 PUSH2 0x31EA JUMP JUMPDEST PUSH2 0x31EA DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x33B6 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x3AC7 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x348A JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3482 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3482 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3428 JUMP JUMPDEST POP PUSH2 0x1BB8 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x348B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x25BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3514 DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x352C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x356A JUMPI PUSH2 0x356A PUSH2 0x34B8 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x35AD JUMPI PUSH2 0x35AD PUSH2 0x34B8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x35CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x35F0 JUMPI PUSH2 0x35E1 DUP6 PUSH2 0x3509 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x35D0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x360F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x361A DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x363D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3648 DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36F0 JUMPI PUSH2 0x36DD DUP4 DUP6 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE POP POP JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0xC0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3679 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36F0 JUMPI DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3718 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x375C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1025 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37BF JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3784 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x130B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x386E DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x388C DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x38B5 DUP2 PUSH2 0x34E7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x38C5 DUP2 PUSH2 0x34E7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x395F JUMPI PUSH2 0x395F PUSH2 0x38FF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1025 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x39F4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x130B JUMPI PUSH2 0x130B PUSH2 0x38FF JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x130B JUMPI PUSH2 0x130B PUSH2 0x38FF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3A32 JUMPI PUSH2 0x3A32 PUSH2 0x38FF JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AA2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A8A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3ABD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3A87 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3AE6 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3A87 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH29 0x2659D9E1D6D925EBC85E34C394A08C34EF326F6CFA47D80AD8C8D0C3AE EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "50386:14010:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57873:100;;;;;;;;;;-1:-1:-1;57873:100:0;;;;;:::i;:::-;;:::i;:::-;;56349:479;;;;;;;;;;-1:-1:-1;56349:479:0;;;;;:::i;:::-;;:::i;59582:1726::-;;;;;;;;;;-1:-1:-1;59582:1726:0;;;;;:::i;:::-;;:::i;58157:569::-;;;;;;;;;;-1:-1:-1;58157:569:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;56228:115;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;53510:477::-;;;;;;;;;;-1:-1:-1;53510:477:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;57314:191::-;;;;;;;;;;;;;:::i;51639:90::-;;;;;;;;;;-1:-1:-1;51717:4:0;51639:90;;;5746:14:1;;5739:22;5721:41;;5709:2;5694:18;51639:90:0;5581:187:1;51563:32:0;;;;;;;;;;;;51594:1;51563:32;;;;;5919:25:1;;;5907:2;5892:18;51563:32:0;5773:177:1;52624:143:0;;;;;;;;;;-1:-1:-1;52624:143:0;;;;;:::i;:::-;52725:34;;52698:7;52725:34;;;:22;:34;;;;;;;52624:143;58848:136;;;;;;;;;;-1:-1:-1;58848:136:0;;;;;:::i;:::-;;:::i;49200:86::-;;;;;;;;;;-1:-1:-1;49247:4:0;49271:7;;;;;;49200:86;;52182:434;;;;;;;;;;-1:-1:-1;52182:434:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;56976:104::-;;;;;;;;;;;;;:::i;2667:103::-;;;;;;;;;;;;;:::i;57088:218::-;;;;;;;;;;-1:-1:-1;57088:218:0;;;;;:::i;:::-;;:::i;2019:87::-;;;;;;;;;;-1:-1:-1;2065:7:0;2092:6;;;2019:87;;;7328:42:1;7316:55;;;7298:74;;7286:2;7271:18;2019:87:0;7152:226:1;57782:85:0;;;;;;;;;;-1:-1:-1;57850:9:0;;57782:85;;62508:1292;;;;;;;;;;-1:-1:-1;62508:1292:0;;;;;:::i;:::-;;:::i;53054:450::-;;;;;;;;;;;;;:::i;61318:1182::-;;;;;;:::i;:::-;;:::i;58990:584::-;;;;;;;;;;-1:-1:-1;58990:584:0;;;;;:::i;:::-;;:::i;52773:174::-;;;;;;;;;;-1:-1:-1;52773:174:0;;;;;:::i;:::-;52892:35;;;;52865:7;52892:35;;;:29;:35;;;;;;;;:47;;;;;;;;;;;;;52773:174;58734:108;;;;;;;;;;-1:-1:-1;58814:13:0;:20;58734:108;;57981:170;;;;;;;;;;-1:-1:-1;57981:170:0;;;;;:::i;:::-;;:::i;63808:585::-;;;;;;;;;;-1:-1:-1;63808:585:0;;;;;:::i;:::-;;:::i;56006:93::-;;;;;;;;;;-1:-1:-1;56079:12:0;;;;56006:93;;56838:126;;;;;;;;;;-1:-1:-1;56838:126:0;;;;;:::i;:::-;;:::i;56105:115::-;;;;;;;;;;-1:-1:-1;56105:115:0;;;;;:::i;:::-;;:::i;2925:201::-;;;;;;;;;;-1:-1:-1;2925:201:0;;;;;:::i;:::-;;:::i;57513:261::-;;;;;;;;;;-1:-1:-1;57513:261:0;;;;;:::i;:::-;;:::i;57873:100::-;1905:13;:11;:13::i;:::-;57941:9:::1;:24:::0;57873:100::o;56349:479::-;1905:13;:11;:13::i;:::-;56446:9:::1;56442:141;56465:18;:25:::0;56461:29;::::1;56442:141;;;56566:5;56512:19;:51;56540:18;56559:1;56540:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;;56512:51:::0;;;::::1;::::0;;;;;;;;:59;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;56492:3;::::1;::::0;::::1;:::i;:::-;;;;56442:141;;;-1:-1:-1::0;56593:25:0::1;56600:18;;56593:25;:::i;:::-;56633:9;56629:192;56652:15;:22;56648:1;:26;56629:192;;;56696:18;56728:15;56744:1;56728:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;56696:52;;::::1;::::0;;::::1;::::0;;-1:-1:-1;56696:52:0;;;;;;::::1;::::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;56783:18;;56696:52;;56763:19:::1;::::0;56783:18;;56799:1;;56783:18;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;56763:39:::1;;::::0;;;::::1;::::0;;;;;;-1:-1:-1;56763:39:0;:46;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;56676:3;::::1;::::0;::::1;:::i;:::-;;;;56629:192;;;;56349:479:::0;:::o;59582:1726::-;49247:4;49271:7;;;;;;49525:9;49517:38;;;;;;;9086:2:1;49517:38:0;;;9068:21:1;9125:2;9105:18;;;9098:30;9164:18;9144;;;9137:46;9200:18;;49517:38:0;;;;;;;;;59694:24:::1;59721:36;59737:10;59749:7;59721:15;:36::i;:::-;59776:18:::0;;59694:63;;-1:-1:-1;59776:32:0::1;;59768:69;;;::::0;::::1;::::0;;9431:2:1;59768:69:0::1;::::0;::::1;9413:21:1::0;9470:2;9450:18;;;9443:30;9509:26;9489:18;;;9482:54;9553:18;;59768:69:0::1;9229:348:1::0;59768:69:0::1;59856:13;::::0;::::1;::::0;:27:::1;;59848:72;;;::::0;::::1;::::0;;9784:2:1;59848:72:0::1;::::0;::::1;9766:21:1::0;;;9803:18;;;9796:30;9862:34;9842:18;;;9835:62;9914:18;;59848:72:0::1;9582:356:1::0;59848:72:0::1;59958:13;::::0;::::1;::::0;60006:30:::1;::::0;;;;60025:10:::1;60006:30;::::0;::::1;7298:74:1::0;59933:15:0::1;::::0;60006:18:::1;::::0;::::1;::::0;::::1;::::0;7271::1;;60006:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;59983:53;;60071:7;:13;;;60055:12;:29;;60047:94;;;::::0;::::1;::::0;;10334:2:1;60047:94:0::1;::::0;::::1;10316:21:1::0;10373:2;10353:18;;;10346:30;10412:34;10392:18;;;10385:62;10483:22;10463:18;;;10456:50;10523:19;;60047:94:0::1;10132:416:1::0;60047:94:0::1;60177:45;::::0;;;;60196:10:::1;60177:45;::::0;::::1;10788:34:1::0;60216:4:0::1;10838:18:1::0;;;10831:43;60152:22:0::1;::::0;60177:18:::1;::::0;::::1;::::0;::::1;::::0;10700::1;;60177:45:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60152:70;;60259:7;:13;;;60241:14;:31;;60233:102;;;::::0;::::1;::::0;;11087:2:1;60233:102:0::1;::::0;::::1;11069:21:1::0;11126:2;11106:18;;;11099:30;11165:34;11145:18;;;11138:62;11236:28;11216:18;;;11209:56;11282:19;;60233:102:0::1;10885:422:1::0;60233:102:0::1;60375:13;::::0;::::1;::::0;60358:14:::1;60419:50;60432:25;60375:13:::0;60453:3:::1;60432:12;:25::i;:::-;60459:9;;60419:12;:50::i;:::-;60399:70;;60502:7;2065::::0;2092:6;;;;2019:87;60502:7:::1;60484:25;;:7;:14;;;:25;;::::0;60480:44:::1;;-1:-1:-1::0;60523:1:0::1;60480:44;60535:21;60559:31;60572:6;60580:9;60559:12;:31::i;:::-;60685:14;::::0;::::1;::::0;60535:55;;-1:-1:-1;60603:136:0::1;::::0;:25:::1;::::0;::::1;::::0;60651:10:::1;::::0;60535:55;60603:25:::1;:136::i;:::-;60754:13:::0;;60750:192:::1;;60874:12;::::0;60784:146:::1;::::0;60874:12:::1;60784:25:::0;;::::1;::::0;60836:10:::1;::::0;60874:12:::1;60906:9:::0;60784:25:::1;:146::i;:::-;60960:18:::0;;61020:15:::1;::::0;::::1;::::0;60952:84:::1;::::0;;;;61001:4:::1;60952:84;::::0;::::1;11575:34:1::0;61008:10:0::1;11625:18:1::0;;;11618:43;11677:18;;;11670:34;;;;60952:40:0::1;::::0;;::::1;::::0;::::1;::::0;11487:18:1;;60952:84:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;61047:37;61064:10;61076:7;61047:16;:37::i;:::-;61129:14;::::0;;::::1;::::0;61185:18;;61218:15:::1;::::0;;::::1;::::0;61248:13:::1;::::0;;::::1;::::0;61276::::1;::::0;;::::1;::::0;61102:198;;12012:42:1;12081:15;;;12063:34;;61159:10:0::1;12113:18:1::0;;;12106:43;;;;12185:15;;;12165:18;;;12158:43;12217:18;;12210:34;;;;12281:15;;12260:19;;;12253:44;;;;12328:3;12313:19;;12306:35;61102:198:0;;::::1;::::0;;;;11989:3:1;61102:198:0;;::::1;59683:1625;;;;;;;59582:1726:::0;;:::o;58157:569::-;58316:24;;;58343:1;58316:24;;;:16;:24;;;;;;58272:22;;58316:28;58312:386;;58383:24;;;;;;;:16;:24;;;;;;58367:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58367:41:0;;;;;;;;;;;;;;;58361:47;;58423:15;58462:9;58457:230;58481:13;:20;58477:24;;58457:230;;;58558:6;58531:33;;:13;58545:1;58531:16;;;;;;;;:::i;:::-;;;;;;;;;:23;:16;;;;;:23;;;;:33;58527:145;;58604:13;58618:1;58604:16;;;;;;;;:::i;:::-;;;;;;;;;;58589:31;;;;;;;;58604:16;;;;;;;58589:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;;:3;;58593:7;;58589:12;;;;;;:::i;:::-;;;;;;:31;;;;58643:9;;;;;:::i;:::-;;;;58527:145;58503:3;;;;:::i;:::-;;;;58457:230;;;;58346:352;58312:386;58157:569;;;;;:::o;56228:115::-;56281:16;56317:18;56310:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56228:115;:::o;53510:477::-;53661:18;:25;53582:33;;53634:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;53634:53:0;;;;;;;;;;;;;;;;53628:59;;53702:9;53698:261;53721:18;:25;53717:29;;53698:261;;;53777:170;;;;;;;;53824:18;53843:1;53824:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;53777:170;;53865:35;;;;:29;:35;;;;;53909:18;:21;;53777:170;;;;;53865:35;;53824:21;53909:18;53928:1;;53909:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;53865:67;;;;;;;;;;;;;53777:170;;53768:6;;:3;;53772:1;;53768:6;;;;;;:::i;:::-;;;;;;:179;;;;53748:3;;;;;:::i;:::-;;;;53698:261;;;;53510:477;;;:::o;57314:191::-;1905:13;:11;:13::i;:::-;57414:36:::1;::::0;57382:21:::1;::::0;57422:10:::1;::::0;57414:36;::::1;;;::::0;57382:21;;57365:14:::1;57414:36:::0;57365:14;57414:36;57382:21;57422:10;57414:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;57466:31:0::1;::::0;;57478:10:::1;12526:74:1::0;;12631:2;12616:18;;12609:34;;;57466:31:0::1;::::0;12499:18:1;57466:31:0::1;;;;;;;57354:151;57314:191::o:0;58848:136::-;58925:18;58963:13;58956:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58848:136;;;;;:::o;52182:434::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52298:290:0;52321:13;:20;52317:24;;52298:290;;;52417:10;52386:41;;:13;52400:1;52386:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;:41;52385:118;;;;;52495:7;52467:13;52481:1;52467:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:35;52385:118;52363:214;;;52545:13;52559:1;52545:16;;;;;;;;:::i;:::-;;;;;;;;;;52538:23;;;;;;;;52545:16;;;;;;;52538:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52538:23:0;;-1:-1:-1;52538:23:0;52363:214;52343:3;;;;:::i;:::-;;;;52298:290;;;;52182:434;;;;:::o;56976:104::-;57023:16;57059:13;57052:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56976:104;:::o;2667:103::-;1905:13;:11;:13::i;:::-;2732:30:::1;2759:1;2732:18;:30::i;:::-;2667:103::o:0;57088:218::-;57148:4;;57165:111;57181:13;:20;57179:22;;57165:111;;;57235:13;57249:1;57235:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;57226:25;;;;57222:42;;-1:-1:-1;57260:4:0;;57088:218;-1:-1:-1;;57088:218:0:o;57222:42::-;57202:3;;;;:::i;:::-;;;;57165:111;;;-1:-1:-1;57293:5:0;;57088:218;-1:-1:-1;;57088:218:0:o;62508:1292::-;49247:4;49271:7;;;;;;49525:9;49517:38;;;;;;;9086:2:1;49517:38:0;;;9068:21:1;9125:2;9105:18;;;9098:30;9164:18;9144;;;9137:46;9200:18;;49517:38:0;8884:340:1;49517:38:0;62751:31:::1;::::0;::::1;;::::0;;;:19:::1;:31;::::0;;;;;::::1;;62729:107;;;::::0;::::1;::::0;;12856:2:1;62729:107:0::1;::::0;::::1;12838:21:1::0;12895:2;12875:18;;;12868:30;12934:28;12914:18;;;12907:56;12980:18;;62729:107:0::1;12654:350:1::0;62729:107:0::1;62893:37;::::0;;;;::::1;::::0;::::1;5919:25:1::0;;;62934:10:0::1;::::0;62893:51:::1;:27:::0;::::1;::::0;::::1;::::0;5892:18:1;;62893:37:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;;62871:126;;;::::0;::::1;::::0;;13467:2:1;62871:126:0::1;::::0;::::1;13449:21:1::0;13506:2;13486:18;;;13479:30;13545:27;13525:18;;;13518:55;13590:18;;62871:126:0::1;13265:349:1::0;62871:126:0::1;63024:1;63016:5;:9;63008:53;;;::::0;::::1;::::0;;13821:2:1;63008:53:0::1;::::0;::::1;13803:21:1::0;13860:2;13840:18;;;13833:30;13899:33;13879:18;;;13872:61;13950:18;;63008:53:0::1;13619:355:1::0;63008:53:0::1;63076:20;::::0;::::1;::::0;63072:172:::1;;63153:22;63168:6;63153:14;:22::i;:::-;:30;;63179:4;63153:30;63145:87;;;::::0;::::1;::::0;;14181:2:1;63145:87:0::1;::::0;::::1;14163:21:1::0;14220:2;14200:18;;;14193:30;14259:34;14239:18;;;14232:62;14330:14;14310:18;;;14303:42;14362:19;;63145:87:0::1;13979:408:1::0;63145:87:0::1;63282:164;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;63354:10:::1;63282:164:::0;;;;;;;;;;;;;;::::1;::::0;;;;63420:15:::1;63282:164:::0;;;;63457:69;;;;;::::1;::::0;::::1;11575:34:1::0;;;;63510:4:0::1;11625:18:1::0;;;11618:43;11677:18;;;11670:34;;;63282:164:0;;;63457:32:::1;::::0;11487:18:1;;63457:69:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;63537:24;63554:6;63537:16;:24::i;:::-;63578:20;::::0;::::1;63574:219;;63620:70;::::0;;63642:10:::1;14712:34:1::0;;14661:42;14782:15;;;14777:2;14762:18;;14755:43;14814:18;;;14807:34;;;14877:15;;14872:2;14857:18;;14850:43;14924:3;14909:19;;14902:35;;;63620:70:0;;::::1;::::0;;;;14638:3:1;63620:70:0;;::::1;63574:219;;;63728:53;::::0;;63741:10:::1;15240:34:1::0;;15189:42;15310:15;;15305:2;15290:18;;15283:43;15342:18;;;15335:34;;;15400:2;15385:18;;15378:34;;;63728:53:0::1;::::0;15166:3:1;15151:19;63728:53:0::1;;;;;;;63574:219;62681:1119;62508:1292:::0;;;;:::o;53054:450::-;53191:18;:25;53112:33;;53164:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;53164:53:0;;;;;;;;;;;;;;;;53158:59;;53232:9;53228:248;53251:18;:25;53247:29;;53228:248;;;53307:157;;;;;;;;53354:18;53373:1;53354:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;53307:157;;;;;;53395:22;:54;53426:18;53445:1;53426:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;53395:54;;;;;;;;;;;;;53307:157;;53298:6;;:3;;53302:1;;53298:6;;;;;;:::i;:::-;;;;;;:166;;;;53278:3;;;;;:::i;:::-;;;;53228:248;;;;53054:450;:::o;61318:1182::-;49247:4;49271:7;;;;;;49525:9;49517:38;;;;;;;9086:2:1;49517:38:0;;;9068:21:1;9125:2;9105:18;;;9098:30;9164:18;9144;;;9137:46;9200:18;;49517:38:0;8884:340:1;49517:38:0;61443:24:::1;61470:36;61486:10;61498:7;61470:15;:36::i;:::-;61526:18:::0;;61443:63;;-1:-1:-1;61526:32:0::1;;61517:70;;;::::0;::::1;::::0;;9431:2:1;61517:70:0::1;::::0;::::1;9413:21:1::0;9470:2;9450:18;;;9443:30;9509:26;9489:18;;;9482:54;9553:18;;61517:70:0::1;9229:348:1::0;61517:70:0::1;61645:7;:13;;;61632:9;:26;;61624:77;;;::::0;::::1;::::0;;15625:2:1;61624:77:0::1;::::0;::::1;15607:21:1::0;15664:2;15644:18;;;15637:30;15703:34;15683:18;;;15676:62;15774:8;15754:18;;;15747:36;15800:19;;61624:77:0::1;15423:402:1::0;61624:77:0::1;61764:13;::::0;::::1;::::0;:27:::1;;::::0;61756:66:::1;;;::::0;::::1;::::0;;16032:2:1;61756:66:0::1;::::0;::::1;16014:21:1::0;16071:2;16051:18;;;16044:30;16110:28;16090:18;;;16083:56;16156:18;;61756:66:0::1;15830:350:1::0;61756:66:0::1;61860:9;61843:14;61900:50;61913:25;61860:9:::0;61934:3:::1;61913:12;:25::i;61900:50::-;61880:70;;61983:7;2065::::0;2092:6;;;;2019:87;61983:7:::1;61965:25;;:7;:14;;;:25;;::::0;61961:44:::1;;-1:-1:-1::0;62004:1:0::1;61961:44;62016:21;62040:31;62053:6;62061:9;62040:12;:31::i;:::-;62016:55;;62092:7;:14;;;62084:32;;:47;62117:13;62084:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;62146:13:0;;62142:87:::1;;62184:12;::::0;62176:41:::1;::::0;62184:12:::1;::::0;;::::1;::::0;62176:41;::::1;;;::::0;62207:9;;62184:12:::1;62176:41:::0;62184:12;62176:41;62207:9;62184:12;62176:41;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;62142:87;62257:18:::0;;62317:15:::1;::::0;::::1;::::0;62249:84:::1;::::0;;;;62298:4:::1;62249:84;::::0;::::1;11575:34:1::0;62305:10:0::1;11625:18:1::0;;;11618:43;11677:18;;;11670:34;;;;62249:40:0::1;::::0;;::::1;::::0;::::1;::::0;11487:18:1;;62249:84:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;62344:37;62361:10;62373:7;62344:16;:37::i;:::-;62403:14;::::0;;::::1;::::0;62431:18;;62451:15:::1;::::0;;::::1;::::0;62468:13:::1;::::0;;::::1;::::0;62399:83;;16454:42:1;16523:15;;;16505:34;;62419:10:0::1;16555:18:1::0;;;16548:43;;;;16627:15;;;;16607:18;;;16600:43;;;;16659:18;;;16652:34;;;;16717:3;16702:19;;16695:35;62399:83:0::1;::::0;16431:3:1;16416:19;62399:83:0::1;;;;;;;61432:1068;;;;61318:1182:::0;;:::o;58990:584::-;59136:34;;;59173:1;59136:34;;;:22;:34;;;;;;59097:22;;59136:38;59132:414;;59213:34;;;;;;;:22;:34;;;;;;59197:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59197:51:0;;;;;;;;;;;;;;;59191:57;;59263:15;59302:9;59297:238;59321:13;:20;59317:24;;59297:238;;;59402:10;59371:41;;:13;59385:1;59371:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;:41;59367:153;;59452:13;59466:1;59452:16;;;;;;;;:::i;:::-;;;;;;;;;;59437:31;;;;;;;;59452:16;;;;;;;59437:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;;:3;;59441:7;;59437:12;;;;;;:::i;:::-;;;;;;:31;;;;59491:9;;;;;:::i;:::-;;;;59367:153;59343:3;;;;:::i;:::-;;;;59297:238;;57981:170;58059:18;58097:46;58117:10;58129:6;58137:5;58097:19;:46::i;63808:585::-;63882:22;63907:36;63923:10;63935:7;63907:15;:36::i;:::-;63963:16;;63882:61;;-1:-1:-1;63963:30:0;;63954:76;;;;;;;16943:2:1;63954:76:0;;;16925:21:1;;;16962:18;;;16955:30;17021:34;17001:18;;;16994:62;17073:18;;63954:76:0;16741:356:1;63954:76:0;2065:7;2092:6;;;64044:10;:21;64041:112;;64104:5;:12;;;64090:26;;:10;:26;;;64082:59;;;;;;;17304:2:1;64082:59:0;;;17286:21:1;17343:2;17323:18;;;17316:30;17382:22;17362:18;;;17355:50;17422:18;;64082:59:0;17102:344:1;64082:59:0;64171:16;;64217:12;;;;;64231:13;;;;64163:82;;;;;64210:4;64163:82;;;11575:34:1;64163:38:0;11645:15:1;;;11625:18;;;11618:43;11677:18;;;11670:34;;;;64163:38:0;;;;;;11487:18:1;;64163:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64256:48;64273:5;:16;;;64290:5;:13;;;64256:16;:48::i;:::-;64339:12;;;;;64353:16;;64371:13;;;;;64322:63;;11524:42:1;11593:15;;;11575:34;;11645:15;;;;11625:18;;;11618:43;11677:18;;;11670:34;;;;64322:63:0;;11502:2:1;11487:18;64322:63:0;;;;;;;;63871:522;63808:585;;:::o;56838:126::-;1905:13;:11;:13::i;:::-;56925:31;;::::1;::::0;:13:::1;::::0;:31:::1;::::0;::::1;::::0;::::1;:::i;56105:115::-:0;1905:13;:11;:13::i;:::-;56182:12:::1;:30:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;56105:115::o;2925:201::-;1905:13;:11;:13::i;:::-;3014:22:::1;::::0;::::1;3006:73;;;::::0;::::1;::::0;;17653:2:1;3006:73:0::1;::::0;::::1;17635:21:1::0;17692:2;17672:18;;;17665:30;17731:34;17711:18;;;17704:62;17802:8;17782:18;;;17775:36;17828:19;;3006:73:0::1;17451:402:1::0;3006:73:0::1;3090:28;3109:8;3090:18;:28::i;:::-;2925:201:::0;:::o;57513:261::-;1905:13;:11;:13::i;:::-;57636:30:::1;::::0;;;;57660:4:::1;57636:30;::::0;::::1;7298:74:1::0;57601:5:0;;57579:12:::1;::::0;57636:15:::1;::::0;::::1;::::0;::::1;::::0;7271:18:1;;57636:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;57618:48;;57677:5;:14;;;57692:7;2065::::0;2092:6;;;;2019:87;57692:7:::1;57677:32;::::0;;::::1;::::0;;;;;;12556:42:1;12544:55;;;57677:32:0::1;::::0;::::1;12526:74:1::0;12616:18;;;12609:34;;;12499:18;;57677:32:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;57725:41:0::1;::::0;;57739:10:::1;11575:34:1::0;;11524:42;11645:15;;11640:2;11625:18;;11618:43;11677:18;;;11670:34;;;57725:41:0::1;::::0;11502:2:1;11487:18;57725:41:0::1;11312:398:1::0;2184:132:0;2065:7;2092:6;2248:23;2092:6;736:10;2248:23;2240:68;;;;;;;18342:2:1;2240:68:0;;;18324:21:1;;;18361:18;;;18354:30;18420:34;18400:18;;;18393:62;18472:18;;2240:68:0;18140:356:1;35741:98:0;35799:7;35826:5;35830:1;35826;:5;:::i;35342:98::-;35400:7;35427:5;35431:1;35427;:5;:::i;34985:98::-;35043:7;35070:5;35074:1;35070;:5;:::i;6528:205::-;6656:68;;;11524:42:1;11593:15;;;6656:68:0;;;11575:34:1;11645:15;;11625:18;;;11618:43;11677:18;;;;11670:34;;;6656:68:0;;;;;;;;;;11487:18:1;;;;6656:68:0;;;;;;;;;;6679:27;6656:68;;;6629:96;;6649:5;;6629:19;:96::i;:::-;6528:205;;;;:::o;54286:1177::-;54388:13;54402:20;;54388:64;;;;:13;54402:24;;54425:1;;54402:24;:::i;:::-;54388:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:50;;;:64;54387:156;;;;-1:-1:-1;54484:13:0;54498:20;;54535:7;;54484:13;54498:24;;54521:1;;54498:24;:::i;:::-;54484:39;;;;;;;;:::i;:::-;;;;;;;;;;;:47;;;:58;54387:156;54369:468;;;54587:13;54601:20;;54570:16;;:63;;54601:23;;54623:1;;54601:23;:::i;:::-;54587:38;;;;;;;;:::i;:::-;;;;;;;;;:45;:38;;;;;:45;;;;;;;54570:63;;;;;;;;;;;;:65;;;;;;:::i;:::-;;;;-1:-1:-1;;54680:13:0;54694:20;;54650:29;;:76;;54694:23;;54716:1;;54694:23;:::i;:::-;54680:38;;;;;;;;:::i;:::-;;;;;;;;;:45;:38;;;;;:45;;;;;;;;;54650:76;;;;;;;;;;;;;;;:88;;;;;;;;;;;:90;;;;;;:::i;:::-;;;;-1:-1:-1;;54755:34:0;;;;;;;:22;:34;;;;;:36;;;;;;:::i;:::-;;;;;;54806:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54369:468;54851:9;54847:609;54870:13;:20;54866:24;;54847:609;;;54966:10;54935:41;;:13;54949:1;54935:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;:41;54934:118;;;;;55044:7;55016:13;55030:1;55016:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:35;54934:118;54912:533;;;55087:16;:41;55104:13;55118:1;55104:16;;;;;;;;:::i;:::-;;;;;;;;;:23;:16;;;;;:23;;;;;;;55087:41;;;;;;;;;;;;:43;;;;;;:::i;:::-;;;;;;55149:29;:54;55179:13;55193:1;55179:16;;;;;;;;:::i;:::-;;;;;;;;;:23;:16;;;;;:23;;;;;;;;;55149:54;;;;;;;;;;;;;;;:66;;;;;;;;;;;:68;;;;;;:::i;:::-;;;;-1:-1:-1;;55236:34:0;;;;;;;:22;:34;;;;;:36;;;;;;:::i;:::-;;;;-1:-1:-1;;55310:13:0;55324:20;;:23;;55346:1;;55324:23;:::i;:::-;55310:38;;;;;;;;:::i;:::-;;;;;;;;;;;55291:13;55305:1;55291:16;;;;;;;;:::i;:::-;;;;;;;;;:57;;:16;;;;;:57;;;;;;;;;;;;;-1:-1:-1;55291:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55367:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;54286:1177:0:o;54912:533::-;54892:3;;;;:::i;:::-;;;;54847:609;;;;54286:1177;;:::o;3286:191::-;3360:16;3379:6;;;3396:17;;;;;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;53995:285::-;54067:13;:27;;;;;;;-1:-1:-1;54067:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54105:42;;;;;;;:44;;;;;;:::i;:::-;;;;-1:-1:-1;;54177:14:0;;;;;54160:32;;;;;;:16;:32;;;;;:34;;;;;;:::i;:::-;;;;-1:-1:-1;;54235:14:0;;;;;54205:45;;;;;;;;:29;:45;;;;;;;54251:18;;54205:65;;;;;;;;;;;;:67;;;;;;:::i;:::-;;;;;;53995:285;:::o;9231:716::-;9655:23;9681:69;9709:4;9681:69;;;;;;;;;;;;;;;;;9689:5;9681:27;;;;:69;;;;;:::i;:::-;9765:17;;9655:95;;-1:-1:-1;9765:21:0;9761:179;;9862:10;9851:30;;;;;;;;;;;;:::i;:::-;9843:85;;;;;;;19678:2:1;9843:85:0;;;19660:21:1;19717:2;19697:18;;;19690:30;19756:34;19736:18;;;19729:62;19827:12;19807:18;;;19800:40;19857:19;;9843:85:0;19476:406:1;42812:229:0;42949:12;42981:52;43003:6;43011:4;43017:1;43020:12;42981:21;:52::i;:::-;42974:59;42812:229;-1:-1:-1;;;;42812:229:0:o;43898:455::-;44068:12;44126:5;44101:21;:30;;44093:81;;;;;;;20089:2:1;44093:81:0;;;20071:21:1;20128:2;20108:18;;;20101:30;20167:34;20147:18;;;20140:62;20238:8;20218:18;;;20211:36;20264:19;;44093:81:0;19887:402:1;44093:81:0;44186:12;44200:23;44227:6;:11;;44246:5;44253:4;44227:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44185:73;;;;44276:69;44303:6;44311:7;44320:10;44332:12;44276:26;:69::i;:::-;44269:76;43898:455;-1:-1:-1;;;;;;;43898:455:0:o;46471:644::-;46656:12;46685:7;46681:427;;;46713:10;:17;46734:1;46713:22;46709:290;;40351:19;;;;46923:60;;;;;;;21043:2:1;46923:60:0;;;21025:21:1;21082:2;21062:18;;;21055:30;21121:31;21101:18;;;21094:59;21170:18;;46923:60:0;20841:353:1;46923:60:0;-1:-1:-1;47020:10:0;47013:17;;46681:427;47063:33;47071:10;47083:12;47818:17;;:21;47814:388;;48050:10;48044:17;48107:15;48094:10;48090:2;48086:19;48079:44;47814:388;48177:12;48170:20;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:184::-;251:77;248:1;241:88;348:4;345:1;338:15;372:4;369:1;362:15;388:154;474:42;467:5;463:54;456:5;453:65;443:93;;532:1;529;522:12;547:134;615:20;;644:31;615:20;644:31;:::i;:::-;547:134;;;:::o;686:1180::-;770:6;801:2;844;832:9;823:7;819:23;815:32;812:52;;;860:1;857;850:12;812:52;900:9;887:23;929:18;970:2;962:6;959:14;956:34;;;986:1;983;976:12;956:34;1024:6;1013:9;1009:22;999:32;;1069:7;1062:4;1058:2;1054:13;1050:27;1040:55;;1091:1;1088;1081:12;1040:55;1127:2;1114:16;1149:2;1145;1142:10;1139:36;;;1155:18;;:::i;:::-;1201:2;1198:1;1194:10;1233:2;1227:9;1292:66;1287:2;1283;1279:11;1275:84;1267:6;1263:97;1410:6;1398:10;1395:22;1390:2;1378:10;1375:18;1372:46;1369:72;;;1421:18;;:::i;:::-;1457:2;1450:22;1507:18;;;1541:15;;;;-1:-1:-1;1583:11:1;;;1579:20;;;1611:19;;;1608:39;;;1643:1;1640;1633:12;1608:39;1667:11;;;;1687:148;1703:6;1698:3;1695:15;1687:148;;;1769:23;1788:3;1769:23;:::i;:::-;1757:36;;1720:12;;;;1813;;;;1687:148;;;1854:6;686:1180;-1:-1:-1;;;;;;;;686:1180:1:o;1871:315::-;1939:6;1947;2000:2;1988:9;1979:7;1975:23;1971:32;1968:52;;;2016:1;2013;2006:12;1968:52;2055:9;2042:23;2074:31;2099:5;2074:31;:::i;:::-;2124:5;2176:2;2161:18;;;;2148:32;;-1:-1:-1;;;1871:315:1:o;2191:383::-;2268:6;2276;2284;2337:2;2325:9;2316:7;2312:23;2308:32;2305:52;;;2353:1;2350;2343:12;2305:52;2392:9;2379:23;2411:31;2436:5;2411:31;:::i;:::-;2461:5;2513:2;2498:18;;2485:32;;-1:-1:-1;2564:2:1;2549:18;;;2536:32;;2191:383;-1:-1:-1;;;2191:383:1:o;3046:709::-;3271:2;3323:21;;;3393:13;;3296:18;;;3415:22;;;3242:4;;3271:2;3494:15;;;;3468:2;3453:18;;;3242:4;3537:192;3551:6;3548:1;3545:13;3537:192;;;3600:47;3643:3;3634:6;3628:13;2652:42;2733:2;2725:5;2719:12;2715:21;2710:3;2703:34;2786:4;2779:5;2775:16;2769:23;2762:4;2757:3;2753:14;2746:47;2854:2;2846:4;2839:5;2835:16;2829:23;2825:32;2818:4;2813:3;2809:14;2802:56;2907:4;2900:5;2896:16;2890:23;2883:4;2878:3;2874:14;2867:47;2975:2;2967:4;2960:5;2956:16;2950:23;2946:32;2939:4;2934:3;2930:14;2923:56;;3028:4;3021:5;3017:16;3011:23;3004:4;2999:3;2995:14;2988:47;2579:462;;;3600:47;3704:15;;;;3676:4;3667:14;;;;;3573:1;3566:9;3537:192;;;-1:-1:-1;3746:3:1;;3046:709;-1:-1:-1;;;;;;3046:709:1:o;3760:696::-;3946:2;3998:21;;;4068:13;;3971:18;;;4090:22;;;3917:4;;3946:2;4169:15;;;;4143:2;4128:18;;;3917:4;4212:218;4226:6;4223:1;4220:13;4212:218;;;4291:13;;4306:42;4287:62;4275:75;;4405:15;;;;4370:12;;;;4248:1;4241:9;4212:218;;4461:247;4520:6;4573:2;4561:9;4552:7;4548:23;4544:32;4541:52;;;4589:1;4586;4579:12;4541:52;4628:9;4615:23;4647:31;4672:5;4647:31;:::i;4713:863::-;4960:2;5012:21;;;5082:13;;4985:18;;;5104:22;;;4931:4;;4960:2;5145;;5163:18;;;;5204:15;;;4931:4;5247:303;5261:6;5258:1;5255:13;5247:303;;;5320:13;;5362:9;;5373:42;5358:58;5346:71;;5457:11;;5451:18;5437:12;;;5430:40;5490:12;;;;5525:15;;;;5283:1;5276:9;5247:303;;;-1:-1:-1;5567:3:1;;4713:863;-1:-1:-1;;;;;;;4713:863:1:o;5955:248::-;6023:6;6031;6084:2;6072:9;6063:7;6059:23;6055:32;6052:52;;;6100:1;6097;6090:12;6052:52;-1:-1:-1;;6123:23:1;;;6193:2;6178:18;;;6165:32;;-1:-1:-1;5955:248:1:o;6208:253::-;6396:3;6381:19;;6409:46;6385:9;6437:6;2652:42;2733:2;2725:5;2719:12;2715:21;2710:3;2703:34;2786:4;2779:5;2775:16;2769:23;2762:4;2757:3;2753:14;2746:47;2854:2;2846:4;2839:5;2835:16;2829:23;2825:32;2818:4;2813:3;2809:14;2802:56;2907:4;2900:5;2896:16;2890:23;2883:4;2878:3;2874:14;2867:47;2975:2;2967:4;2960:5;2956:16;2950:23;2946:32;2939:4;2934:3;2930:14;2923:56;;3028:4;3021:5;3017:16;3011:23;3004:4;2999:3;2995:14;2988:47;2579:462;;;7383:525;7469:6;7477;7485;7493;7546:3;7534:9;7525:7;7521:23;7517:33;7514:53;;;7563:1;7560;7553:12;7514:53;7602:9;7589:23;7621:31;7646:5;7621:31;:::i;:::-;7671:5;-1:-1:-1;7723:2:1;7708:18;;7695:32;;-1:-1:-1;7774:2:1;7759:18;;7746:32;;-1:-1:-1;7830:2:1;7815:18;;7802:32;7843:33;7802:32;7843:33;:::i;:::-;7383:525;;;;-1:-1:-1;7383:525:1;;-1:-1:-1;;7383:525:1:o;7913:388::-;7981:6;7989;8042:2;8030:9;8021:7;8017:23;8013:32;8010:52;;;8058:1;8055;8048:12;8010:52;8097:9;8084:23;8116:31;8141:5;8116:31;:::i;:::-;8166:5;-1:-1:-1;8223:2:1;8208:18;;8195:32;8236:33;8195:32;8236:33;:::i;:::-;8288:7;8278:17;;;7913:388;;;;;:::o;8306:184::-;8358:77;8355:1;8348:88;8455:4;8452:1;8445:15;8479:4;8476:1;8469:15;8495:184;8547:77;8544:1;8537:88;8644:4;8641:1;8634:15;8668:4;8665:1;8658:15;8684:195;8723:3;8754:66;8747:5;8744:77;8741:103;;8824:18;;:::i;:::-;-1:-1:-1;8871:1:1;8860:13;;8684:195::o;9943:184::-;10013:6;10066:2;10054:9;10045:7;10041:23;10037:32;10034:52;;;10082:1;10079;10072:12;10034:52;-1:-1:-1;10105:16:1;;9943:184;-1:-1:-1;9943:184:1:o;13009:251::-;13079:6;13132:2;13120:9;13111:7;13107:23;13103:32;13100:52;;;13148:1;13145;13138:12;13100:52;13180:9;13174:16;13199:31;13224:5;13199:31;:::i;17858:277::-;17925:6;17978:2;17966:9;17957:7;17953:23;17949:32;17946:52;;;17994:1;17991;17984:12;17946:52;18026:9;18020:16;18079:5;18072:13;18065:21;18058:5;18055:32;18045:60;;18101:1;18098;18091:12;18501:274;18541:1;18567;18557:189;;18602:77;18599:1;18592:88;18703:4;18700:1;18693:15;18731:4;18728:1;18721:15;18557:189;-1:-1:-1;18760:9:1;;18501:274::o;18780:168::-;18853:9;;;18884;;18901:15;;;18895:22;;18881:37;18871:71;;18922:18;;:::i;18953:128::-;19020:9;;;19041:11;;;19038:37;;;19055:18;;:::i;19086:196::-;19125:3;19153:5;19143:39;;19162:18;;:::i;:::-;-1:-1:-1;19209:66:1;19198:78;;19086:196::o;19287:184::-;19339:77;19336:1;19329:88;19436:4;19433:1;19426:15;19460:4;19457:1;19450:15;20294:250;20379:1;20389:113;20403:6;20400:1;20397:13;20389:113;;;20479:11;;;20473:18;20460:11;;;20453:39;20425:2;20418:10;20389:113;;;-1:-1:-1;;20536:1:1;20518:16;;20511:27;20294:250::o;20549:287::-;20678:3;20716:6;20710:13;20732:66;20791:6;20786:3;20779:4;20771:6;20767:17;20732:66;:::i;:::-;20814:16;;;;;20549:287;-1:-1:-1;;20549:287:1:o;21199:455::-;21348:2;21337:9;21330:21;21311:4;21380:6;21374:13;21423:6;21418:2;21407:9;21403:18;21396:34;21439:79;21511:6;21506:2;21495:9;21491:18;21486:2;21478:6;21474:15;21439:79;:::i;:::-;21570:2;21558:15;21575:66;21554:88;21539:104;;;;21645:2;21535:113;;21199:455;-1:-1:-1;;21199:455:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3036400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyNFT(address,uint256)": "infinite",
								"buyNFTbyERC20(address,uint256)": "infinite",
								"deSellNFT(address,uint256)": "infinite",
								"getAllowedCollections()": "infinite",
								"getAllowedERC20()": "infinite",
								"getCollectionTokensAtSale(address,uint256,uint256)": "infinite",
								"getCollectionsTokensCount()": "infinite",
								"getColletionTokensCount(address)": "2597",
								"getFeeReceiver()": "2418",
								"getMyTokensAtSale(uint256,uint256)": "infinite",
								"getTokensAtSale(uint256,uint256)": "infinite",
								"getTokensAtSaleCount()": "2337",
								"getTradeFee()": "2382",
								"getUserCollectionTokensCount(address,address)": "infinite",
								"getUserCollectionsTokenCount(address)": "infinite",
								"getUserTokensAtSale(address,uint256,uint256)": "infinite",
								"isAllowedERC20(address)": "infinite",
								"isMarketPlaceContract()": "233",
								"marketTokensGet(address,uint256)": "infinite",
								"owner()": "2364",
								"paused()": "2360",
								"renounceOwnership()": "infinite",
								"sellNFT(address,uint256,uint256,address)": "infinite",
								"setAllowedCollections(address[])": "infinite",
								"setAllowedERC20(address[])": "infinite",
								"setFeeReceiver(address)": "26744",
								"setTradeFee(uint256)": "24523",
								"transferOwnership(address)": "infinite",
								"version()": "263",
								"withdrawERC20(address)": "infinite",
								"withdrawWei()": "infinite"
							},
							"internal": {
								"_marketTokensAdd(struct Marketplace.SelledNFT memory)": "infinite",
								"_marketTokensDel(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 51629,
									"end": 51630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51604,
									"end": 51630,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 51604,
									"end": 51630,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 55479,
									"end": 55998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1740,
									"end": 1772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49087,
									"end": 49092,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55670,
									"end": 55683,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 55670,
									"end": 55690,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55666,
									"end": 55667,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55666,
									"end": 55690,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55752,
									"end": 55756,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55712,
									"end": 55731,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55732,
									"end": 55745,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 55746,
									"end": 55747,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 55732,
									"end": 55748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55732,
									"end": 55748,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55712,
									"end": 55756,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55789,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55803,
									"end": 55816,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 55817,
									"end": 55818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 55803,
									"end": 55819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55803,
									"end": 55819,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55771,
									"end": 55821,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 55692,
									"end": 55695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55695,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 55650,
									"end": 55833,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 55859,
									"end": 55886,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55859,
									"end": 55886,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55859,
									"end": 55886,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55903,
									"end": 55916,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55890,
									"end": 55900,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 55858,
									"end": 55916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55855,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55843,
									"end": 55916,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 55927,
									"end": 55949,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55949,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55973,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 55960,
									"end": 55973,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 55960,
									"end": 55990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55960,
									"end": 55990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55479,
									"end": 55998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3349,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 50386,
									"end": 64396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 238,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 225,
									"end": 238,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 267,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 267,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 257,
									"end": 299,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 257,
									"end": 299,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 247,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 247,
									"end": 317,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 313,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 311,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 303,
									"end": 315,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 247,
									"end": 317,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 247,
									"end": 317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 323,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1251,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 328,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 393,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 439,
									"end": 443,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 431,
									"end": 437,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 427,
									"end": 444,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 423,
									"end": 450,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 413,
									"end": 468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 413,
									"end": 468,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 461,
									"end": 462,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 454,
									"end": 466,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 413,
									"end": 468,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 413,
									"end": 468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 487,
									"end": 500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 487,
									"end": 500,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 519,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 572,
									"end": 582,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 572,
									"end": 582,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 572,
									"end": 582,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 569,
									"end": 605,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 569,
									"end": 605,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 569,
									"end": 605,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 585,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 585,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 585,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 585,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 585,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 633,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 629,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 624,
									"end": 634,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 666,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 726,
									"end": 728,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 722,
									"end": 729,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 717,
									"end": 719,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 713,
									"end": 715,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 709,
									"end": 720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 705,
									"end": 730,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 697,
									"end": 703,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 693,
									"end": 731,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 769,
									"end": 779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 766,
									"end": 788,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 761,
									"end": 763,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 749,
									"end": 759,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 746,
									"end": 764,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 743,
									"end": 789,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 740,
									"end": 812,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 740,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 740,
									"end": 812,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 792,
									"end": 810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 792,
									"end": 810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 792,
									"end": 810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 792,
									"end": 810,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 792,
									"end": 810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 828,
									"end": 830,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 821,
									"end": 843,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 878,
									"end": 896,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 878,
									"end": 896,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 878,
									"end": 896,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 954,
									"end": 969,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 954,
									"end": 969,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 969,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 950,
									"end": 974,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 950,
									"end": 974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 950,
									"end": 974,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 912,
									"end": 927,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 986,
									"end": 1001,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 986,
									"end": 1001,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 986,
									"end": 1001,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1004,
									"end": 1016,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 983,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1050,
									"end": 1052,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1042,
									"end": 1048,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1085,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1174,
									"end": 1177,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1144,
									"end": 1178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1144,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1179,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1179,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1211,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1107,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1062,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1245,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1251,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1251,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 1409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1417,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1483,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1468,
									"end": 1477,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1459,
									"end": 1466,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1478,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1484,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1498,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1494,
									"end": 1495,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1487,
									"end": 1499,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1448,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1540,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1589,
									"end": 1603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1603,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1616,
									"end": 1617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1614,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1606,
									"end": 1618,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1586,
									"end": 1620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1703,
									"end": 1710,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1700,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1639,
									"end": 1711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1639,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1711,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1778,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1730,
									"end": 1779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1730,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1779,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1821,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1808,
									"end": 1817,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1804,
									"end": 1822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1823,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1823,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1873,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1873,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 1900,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1888,
									"end": 1896,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1901,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1904,
									"end": 1916,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2003,
									"end": 2010,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1981,
									"end": 1990,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1977,
									"end": 2001,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1937,
									"end": 2011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1937,
									"end": 2011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 2011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 2011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 2011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 2017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2149,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2022,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2078,
									"end": 2081,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2074,
									"end": 2094,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2064,
									"end": 2095,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2114,
									"end": 2118,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2111,
									"end": 2112,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2104,
									"end": 2119,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2138,
									"end": 2142,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2135,
									"end": 2136,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2128,
									"end": 2143,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2196,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2283,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2268,
									"end": 2271,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2264,
									"end": 2284,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2254,
									"end": 2285,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2308,
									"end": 2312,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2305,
									"end": 2306,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2298,
									"end": 2313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2336,
									"end": 2340,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2333,
									"end": 2334,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2326,
									"end": 2341,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2211,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2379,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2367,
									"end": 2380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2154,
									"end": 2386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2154,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 64396,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e7c2659d9e1d6d925ebc85e34c394a08c34ef326f6cfa47d80ad8c8d0c3ae3c64736f6c63430008120033",
									".code": [
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "785FA7CE"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "C8F77899"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "E9E4E160"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "E9E4E160"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "EFDCD974"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "F4F3B200"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "C8F77899"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "CB4CA919"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "DA24548A"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "E8A35392"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "A7C9197A"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "A7C9197A"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "A82BA76F"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "B7B7B8FF"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "C8D8101C"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "785FA7CE"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "952977F5"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "98F748BD"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "527F2902"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "6629E913"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "69C57352"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "527F2902"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "5B4E7ADD"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "5B87F0F2"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "2CA38DF5"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "2CA38DF5"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "3A51F383"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "3EAC63ED"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "5211AC2E"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "10603023"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "27713536"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "2B205D14"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 64396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 57873,
											"end": 57973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 57873,
											"end": 57973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56349,
											"end": 56828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56349,
											"end": 56828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 59582,
											"end": 61308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 59582,
											"end": 61308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 58157,
											"end": 58726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 58157,
											"end": 58726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 58157,
											"end": 58726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 56228,
											"end": 56343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 56228,
											"end": 56343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 53510,
											"end": 53987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 53510,
											"end": 53987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 53510,
											"end": 53987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 57314,
											"end": 57505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51717,
											"end": 51721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5761,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51639,
											"end": 51729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5581,
											"end": 5768,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 51594,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 5944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5907,
											"end": 5909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5892,
											"end": 5910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51563,
											"end": 51595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5773,
											"end": 5950,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 52624,
											"end": 52767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 52705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52747,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52624,
											"end": 52767,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 58848,
											"end": 58984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 58848,
											"end": 58984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 52182,
											"end": 52616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 52182,
											"end": 52616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 52182,
											"end": 52616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 56976,
											"end": 57080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 57088,
											"end": 57306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 57088,
											"end": 57306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7370,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7316,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7152,
											"end": 7378,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57850,
											"end": 57859,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57850,
											"end": 57859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 57782,
											"end": 57867,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 62508,
											"end": 63800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 62508,
											"end": 63800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 53054,
											"end": 53504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 61318,
											"end": 62500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 61318,
											"end": 62500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 58990,
											"end": 59574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 58990,
											"end": 59574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 52773,
											"end": 52947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52865,
											"end": 52872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52921,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52892,
											"end": 52939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52773,
											"end": 52947,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58814,
											"end": 58827,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58814,
											"end": 58834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 58734,
											"end": 58842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 57981,
											"end": 58151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 57981,
											"end": 58151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 63808,
											"end": 64393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 63808,
											"end": 64393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56079,
											"end": 56091,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 56079,
											"end": 56091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56079,
											"end": 56091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56079,
											"end": 56091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 56006,
											"end": 56099,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56838,
											"end": 56964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 56838,
											"end": 56964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 56105,
											"end": 56220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 56105,
											"end": 56220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 57513,
											"end": 57774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 57513,
											"end": 57774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 57873,
											"end": 57973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57941,
											"end": 57950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57941,
											"end": 57965,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56446,
											"end": 56455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56465,
											"end": 56483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56465,
											"end": 56490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56490,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56566,
											"end": 56571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56512,
											"end": 56531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56512,
											"end": 56563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56540,
											"end": 56558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56559,
											"end": 56560,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 56540,
											"end": 56561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56540,
											"end": 56561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 56512,
											"end": 56571,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56571,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 56492,
											"end": 56495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 56492,
											"end": 56495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 56492,
											"end": 56495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56495,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56495,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 56442,
											"end": 56583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56593,
											"end": 56618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 56600,
											"end": 56618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56600,
											"end": 56618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56593,
											"end": 56618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 56593,
											"end": 56618,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 56593,
											"end": 56618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56633,
											"end": 56642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56652,
											"end": 56667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56652,
											"end": 56674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56648,
											"end": 56649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56648,
											"end": 56674,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56728,
											"end": 56743,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56744,
											"end": 56745,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 56728,
											"end": 56746,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56728,
											"end": 56746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 56696,
											"end": 56748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56696,
											"end": 56748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56763,
											"end": 56782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56799,
											"end": 56800,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56799,
											"end": 56800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 56783,
											"end": 56801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56783,
											"end": 56801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56763,
											"end": 56802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 56763,
											"end": 56802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 56763,
											"end": 56809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56809,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 56679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 56679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 56676,
											"end": 56679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 56679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 56676,
											"end": 56679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 56679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 56676,
											"end": 56679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 56679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 56679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 56679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56629,
											"end": 56821,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56349,
											"end": 56828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9086,
											"end": 9088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59721,
											"end": 59757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 59737,
											"end": 59747,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59749,
											"end": 59756,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59721,
											"end": 59736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 59721,
											"end": 59757,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59721,
											"end": 59757,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 59721,
											"end": 59757,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59776,
											"end": 59794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59776,
											"end": 59794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59776,
											"end": 59808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59776,
											"end": 59808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59768,
											"end": 59837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59768,
											"end": 59837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59768,
											"end": 59837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9470,
											"end": 9472,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9509,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "54686973204E4654206973206E6F7420666F722073616C650000000000000000"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9571,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9553,
											"end": 9571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 59768,
											"end": 59837,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59856,
											"end": 59869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59856,
											"end": 59869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59856,
											"end": 59869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59856,
											"end": 59869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59856,
											"end": 59883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59856,
											"end": 59883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59848,
											"end": 59920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59848,
											"end": 59920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59848,
											"end": 59920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9784,
											"end": 9786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59848,
											"end": 59920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9766,
											"end": 9787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 9787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 9787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9835,
											"end": 9897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9914,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9914,
											"end": 9932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9582,
											"end": 9938,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 59848,
											"end": 59920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59958,
											"end": 59971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59958,
											"end": 59971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59958,
											"end": 59971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59958,
											"end": 59971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60006,
											"end": 60036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60006,
											"end": 60036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60025,
											"end": 60035,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60006,
											"end": 60036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59933,
											"end": 59948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59933,
											"end": 59948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60006,
											"end": 60024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 60006,
											"end": 60024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60006,
											"end": 60036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 60006,
											"end": 60036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 60006,
											"end": 60036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59983,
											"end": 60036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59983,
											"end": 60036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60071,
											"end": 60078,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60071,
											"end": 60084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60071,
											"end": 60084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60071,
											"end": 60084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60055,
											"end": 60067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60055,
											"end": 60084,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60055,
											"end": 60084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60047,
											"end": 60141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60047,
											"end": 60141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60047,
											"end": 60141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10334,
											"end": 10336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60047,
											"end": 60141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10316,
											"end": 10337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10373,
											"end": 10375,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10346,
											"end": 10376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10446,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E"
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10483,
											"end": 10505,
											"name": "PUSH",
											"source": 1,
											"value": "20796F75722062616C616E636520746F20706179000000000000000000000000"
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10542,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10523,
											"end": 10542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10132,
											"end": 10548,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 60047,
											"end": 60141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60177,
											"end": 60222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60177,
											"end": 60222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60196,
											"end": 60206,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60177,
											"end": 60222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 60216,
											"end": 60220,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10831,
											"end": 10874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 60152,
											"end": 60174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60152,
											"end": 60174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60177,
											"end": 60195,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 60177,
											"end": 60195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60177,
											"end": 60222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 60177,
											"end": 60222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 60177,
											"end": 60222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60152,
											"end": 60222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60152,
											"end": 60222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60259,
											"end": 60266,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60259,
											"end": 60272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60259,
											"end": 60272,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60259,
											"end": 60272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60241,
											"end": 60255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60241,
											"end": 60272,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60241,
											"end": 60272,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60233,
											"end": 60335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60233,
											"end": 60335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11087,
											"end": 11089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60233,
											"end": 60335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11126,
											"end": 11128,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11099,
											"end": 11129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11165,
											"end": 11199,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074"
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11264,
											"name": "PUSH",
											"source": 1,
											"value": "6F2073656E642074686520707572636861736520616D6F756E74000000000000"
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11282,
											"end": 11301,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11282,
											"end": 11301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10885,
											"end": 11307,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60233,
											"end": 60335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60375,
											"end": 60388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60375,
											"end": 60388,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60375,
											"end": 60388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60375,
											"end": 60388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60358,
											"end": 60372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60419,
											"end": 60469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 60432,
											"end": 60457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 60375,
											"end": 60388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60453,
											"end": 60456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60432,
											"end": 60444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 60432,
											"end": 60457,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60432,
											"end": 60457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 60432,
											"end": 60457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60459,
											"end": 60468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60459,
											"end": 60468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60419,
											"end": 60431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 60419,
											"end": 60469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60419,
											"end": 60469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 60419,
											"end": 60469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60399,
											"end": 60469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60399,
											"end": 60469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60502,
											"end": 60509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60502,
											"end": 60509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 60502,
											"end": 60509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60484,
											"end": 60509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60484,
											"end": 60509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60484,
											"end": 60491,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60484,
											"end": 60498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60484,
											"end": 60498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60484,
											"end": 60498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60484,
											"end": 60509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60484,
											"end": 60509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60484,
											"end": 60509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60480,
											"end": 60524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 60480,
											"end": 60524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60523,
											"end": 60524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60480,
											"end": 60524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 60480,
											"end": 60524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60535,
											"end": 60556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60559,
											"end": 60590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 60572,
											"end": 60578,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60580,
											"end": 60589,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60559,
											"end": 60571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 60559,
											"end": 60590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60559,
											"end": 60590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 60559,
											"end": 60590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60685,
											"end": 60699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60685,
											"end": 60699,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60685,
											"end": 60699,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60685,
											"end": 60699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60535,
											"end": 60590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60535,
											"end": 60590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60603,
											"end": 60739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 60603,
											"end": 60739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60603,
											"end": 60628,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60651,
											"end": 60661,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60651,
											"end": 60661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60535,
											"end": 60590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 60603,
											"end": 60739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 60603,
											"end": 60739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60754,
											"end": 60767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60754,
											"end": 60767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60750,
											"end": 60942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 60750,
											"end": 60942,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60874,
											"end": 60886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60874,
											"end": 60886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60784,
											"end": 60930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 60784,
											"end": 60930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60874,
											"end": 60886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60784,
											"end": 60809,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60784,
											"end": 60809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60784,
											"end": 60809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60784,
											"end": 60809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60836,
											"end": 60846,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60836,
											"end": 60846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60874,
											"end": 60886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60906,
											"end": 60915,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60784,
											"end": 60809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 60784,
											"end": 60930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60784,
											"end": 60930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 60784,
											"end": 60930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60960,
											"end": 60978,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60960,
											"end": 60978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61020,
											"end": 61035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61020,
											"end": 61035,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 61020,
											"end": 61035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61020,
											"end": 61035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60952,
											"end": 61036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60952,
											"end": 61036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61001,
											"end": 61005,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60952,
											"end": 61036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61008,
											"end": 61018,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 60952,
											"end": 60992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60952,
											"end": 60992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 60992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 60992,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 60992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 60992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 60952,
											"end": 60992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60952,
											"end": 61036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60952,
											"end": 61036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60952,
											"end": 61036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61047,
											"end": 61084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 61064,
											"end": 61074,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 61076,
											"end": 61083,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 61047,
											"end": 61063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 61047,
											"end": 61084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61047,
											"end": 61084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 61047,
											"end": 61084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61129,
											"end": 61143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61129,
											"end": 61143,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61129,
											"end": 61143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61129,
											"end": 61143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61129,
											"end": 61143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61185,
											"end": 61203,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 61185,
											"end": 61203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61218,
											"end": 61233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61218,
											"end": 61233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61218,
											"end": 61233,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 61218,
											"end": 61233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61218,
											"end": 61233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61248,
											"end": 61261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61248,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61248,
											"end": 61261,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 61248,
											"end": 61261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61248,
											"end": 61261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61276,
											"end": 61289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61276,
											"end": 61289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61276,
											"end": 61289,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 61276,
											"end": 61289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61276,
											"end": 61289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12054,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12081,
											"end": 12096,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 12081,
											"end": 12096,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12081,
											"end": 12096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12063,
											"end": 12097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12063,
											"end": 12097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61159,
											"end": 61169,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12113,
											"end": 12131,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12149,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12149,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12200,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12200,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12158,
											"end": 12201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12281,
											"end": 12296,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12281,
											"end": 12296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12253,
											"end": 12297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12253,
											"end": 12297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12253,
											"end": 12297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12253,
											"end": 12297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12328,
											"end": 12331,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 12313,
											"end": 12332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A3D27CC8AC4E1915B6A89CE3E468D87AEB3CAF011A47E236DB61D098E452870C"
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61300,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 59683,
											"end": 61308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59683,
											"end": 61308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59683,
											"end": 61308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59683,
											"end": 61308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59683,
											"end": 61308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59683,
											"end": 61308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59683,
											"end": 61308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59582,
											"end": 61308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58332,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58294,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58272,
											"end": 58294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58316,
											"end": 58344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58312,
											"end": 58698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 58312,
											"end": 58698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58399,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58383,
											"end": 58407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 58367,
											"end": 58408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58361,
											"end": 58408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58361,
											"end": 58408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58462,
											"end": 58471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58481,
											"end": 58494,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58481,
											"end": 58501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58477,
											"end": 58501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58477,
											"end": 58501,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58558,
											"end": 58564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58531,
											"end": 58564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58544,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58545,
											"end": 58546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 58531,
											"end": 58547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58554,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58531,
											"end": 58554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 58527,
											"end": 58672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58617,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58618,
											"end": 58619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 58604,
											"end": 58620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58604,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58593,
											"end": 58600,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58593,
											"end": 58600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 58589,
											"end": 58601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 58643,
											"end": 58652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58672,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 58527,
											"end": 58672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 58503,
											"end": 58506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58346,
											"end": 58698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58312,
											"end": 58698,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 58312,
											"end": 58698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58157,
											"end": 58726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56281,
											"end": 56297,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56317,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56310,
											"end": 56335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53661,
											"end": 53679,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53661,
											"end": 53686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53582,
											"end": 53615,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53582,
											"end": 53615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 53634,
											"end": 53687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53634,
											"end": 53687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53628,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53628,
											"end": 53687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53702,
											"end": 53711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53721,
											"end": 53739,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53721,
											"end": 53746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53842,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53843,
											"end": 53844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 53824,
											"end": 53845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53894,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53927,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53824,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53928,
											"end": 53929,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53928,
											"end": 53929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 53909,
											"end": 53930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53909,
											"end": 53930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53865,
											"end": 53932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53772,
											"end": 53773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53772,
											"end": 53773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 53768,
											"end": 53774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 53748,
											"end": 53751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53698,
											"end": 53959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53510,
											"end": 53987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 57314,
											"end": 57505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57414,
											"end": 57450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57382,
											"end": 57403,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 57382,
											"end": 57403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57422,
											"end": 57432,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57422,
											"end": 57432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57382,
											"end": 57403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57382,
											"end": 57403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57414,
											"end": 57450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57382,
											"end": 57403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57422,
											"end": 57432,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57414,
											"end": 57450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 57414,
											"end": 57450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57466,
											"end": 57497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57478,
											"end": 57488,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12526,
											"end": 12600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12526,
											"end": 12600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 12633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4"
										},
										{
											"begin": 57466,
											"end": 57497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12499,
											"end": 12517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57497,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 57354,
											"end": 57505,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58925,
											"end": 58943,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58963,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58956,
											"end": 58976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58848,
											"end": 58984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52321,
											"end": 52334,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52321,
											"end": 52341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 52341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 52341,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52417,
											"end": 52427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52386,
											"end": 52427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52399,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52400,
											"end": 52401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 52386,
											"end": 52402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52386,
											"end": 52413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52386,
											"end": 52427,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52385,
											"end": 52503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52385,
											"end": 52503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52385,
											"end": 52503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 52385,
											"end": 52503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52385,
											"end": 52503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52495,
											"end": 52502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52480,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52481,
											"end": 52482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 52467,
											"end": 52483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52491,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52467,
											"end": 52491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52385,
											"end": 52503,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 52385,
											"end": 52503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 52363,
											"end": 52577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52558,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52559,
											"end": 52560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 52545,
											"end": 52561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52538,
											"end": 52561,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52577,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 52363,
											"end": 52577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 52343,
											"end": 52346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52298,
											"end": 52588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52182,
											"end": 52616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57023,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57059,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 57080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 2759,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2732,
											"end": 2762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57148,
											"end": 57152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57148,
											"end": 57152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57181,
											"end": 57194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57181,
											"end": 57201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57179,
											"end": 57201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57179,
											"end": 57201,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57249,
											"end": 57250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 57235,
											"end": 57251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57235,
											"end": 57251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57226,
											"end": 57251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57226,
											"end": 57251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57226,
											"end": 57251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57226,
											"end": 57251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57222,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 57222,
											"end": 57264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57260,
											"end": 57264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57260,
											"end": 57264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57088,
											"end": 57306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57222,
											"end": 57264,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 57222,
											"end": 57264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 57202,
											"end": 57205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57202,
											"end": 57205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 57165,
											"end": 57276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57293,
											"end": 57298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57293,
											"end": 57298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57088,
											"end": 57306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9086,
											"end": 9088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8884,
											"end": 9224,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62751,
											"end": 62782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62751,
											"end": 62782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 62751,
											"end": 62782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62729,
											"end": 62836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62729,
											"end": 62836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62729,
											"end": 62836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12856,
											"end": 12858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62729,
											"end": 62836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12838,
											"end": 12859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12897,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 12875,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12875,
											"end": 12893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12875,
											"end": 12893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12868,
											"end": 12898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 12962,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420616C6C6F776564204E465420636F6C6C656374696F6E000000000000"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 12963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 12654,
											"end": 13004,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 62729,
											"end": 62836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62893,
											"end": 62930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62893,
											"end": 62930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62893,
											"end": 62930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 5944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 62934,
											"end": 62944,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 62934,
											"end": 62944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62893,
											"end": 62920,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 62893,
											"end": 62920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5892,
											"end": 5910,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5892,
											"end": 5910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62893,
											"end": 62930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 62893,
											"end": 62930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 62893,
											"end": 62930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62893,
											"end": 62944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62944,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62871,
											"end": 62997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62871,
											"end": 62997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62871,
											"end": 62997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13467,
											"end": 13469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62871,
											"end": 62997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 13470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13506,
											"end": 13508,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13479,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13545,
											"end": 13572,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 13525,
											"end": 13543,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13525,
											"end": 13543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13525,
											"end": 13543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 13265,
											"end": 13614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 62871,
											"end": 62997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63024,
											"end": 63025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63016,
											"end": 63021,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63016,
											"end": 63025,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63008,
											"end": 63061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 63008,
											"end": 63061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63008,
											"end": 63061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63008,
											"end": 63061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13803,
											"end": 13824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13862,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 13863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 13932,
											"name": "PUSH",
											"source": 1,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13872,
											"end": 13933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 13619,
											"end": 13974,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 63008,
											"end": 63061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63076,
											"end": 63096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 63076,
											"end": 63096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63076,
											"end": 63096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63076,
											"end": 63096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63072,
											"end": 63244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 63072,
											"end": 63244,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63153,
											"end": 63175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 63168,
											"end": 63174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63153,
											"end": 63167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 63153,
											"end": 63175,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63153,
											"end": 63175,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 63153,
											"end": 63175,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63153,
											"end": 63183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63153,
											"end": 63183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63179,
											"end": 63183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63153,
											"end": 63183,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63145,
											"end": 63232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 63145,
											"end": 63232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63145,
											"end": 63232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14181,
											"end": 14183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63145,
											"end": 63232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 14184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14220,
											"end": 14222,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 14200,
											"end": 14218,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14200,
											"end": 14218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14200,
											"end": 14218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14193,
											"end": 14223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14259,
											"end": 14293,
											"name": "PUSH",
											"source": 1,
											"value": "54686973204552433230206E6F7420616C6C6F77656420617320612074726164"
										},
										{
											"begin": 14239,
											"end": 14257,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14239,
											"end": 14257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14239,
											"end": 14257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14330,
											"end": 14344,
											"name": "PUSH",
											"source": 1,
											"value": "696E672063757272656E63790000000000000000000000000000000000000000"
										},
										{
											"begin": 14310,
											"end": 14328,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14310,
											"end": 14328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14310,
											"end": 14328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14362,
											"end": 14381,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14362,
											"end": 14381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 13979,
											"end": 14387,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 63145,
											"end": 63232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63364,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63420,
											"end": 63435,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 63510,
											"end": 63514,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 63457,
											"end": 63489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63457,
											"end": 63526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63457,
											"end": 63526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63537,
											"end": 63561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 63554,
											"end": 63560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63537,
											"end": 63553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 63537,
											"end": 63561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63537,
											"end": 63561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 63537,
											"end": 63561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63578,
											"end": 63598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 63578,
											"end": 63598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63578,
											"end": 63598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63642,
											"end": 63652,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14712,
											"end": 14746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14712,
											"end": 14746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14782,
											"end": 14797,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14777,
											"end": 14779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 14841,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 14841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 14841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14877,
											"end": 14892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14877,
											"end": 14892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14874,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14857,
											"end": 14875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14850,
											"end": 14893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14927,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14909,
											"end": 14928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 14937,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 14937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 14937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "44F716B281FA3E96FBD6EF888A275EF2FDF8914960A4C57C0BEF6CCAEBF0DF31"
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14638,
											"end": 14641,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63620,
											"end": 63690,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63728,
											"end": 63781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63728,
											"end": 63781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63741,
											"end": 63751,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15240,
											"end": 15274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15240,
											"end": 15274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15231,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15310,
											"end": 15325,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15310,
											"end": 15325,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15305,
											"end": 15307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15290,
											"end": 15308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15290,
											"end": 15308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15342,
											"end": 15360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15342,
											"end": 15360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15342,
											"end": 15360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15335,
											"end": 15369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15335,
											"end": 15369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15335,
											"end": 15369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15402,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15385,
											"end": 15403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15385,
											"end": 15403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15378,
											"end": 15412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15378,
											"end": 15412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15378,
											"end": 15412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C68DC1F889FA3A215DCDD97178AF6BD67FAB7B34138EEF18F4313AAC53F5B364"
										},
										{
											"begin": 63728,
											"end": 63781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15166,
											"end": 15169,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15151,
											"end": 15170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63728,
											"end": 63781,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 63574,
											"end": 63793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62681,
											"end": 63800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62508,
											"end": 63800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53191,
											"end": 53209,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53191,
											"end": 53216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53112,
											"end": 53145,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53112,
											"end": 53145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 53164,
											"end": 53217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53164,
											"end": 53217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53158,
											"end": 53217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53232,
											"end": 53241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53251,
											"end": 53269,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53251,
											"end": 53276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53276,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53372,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53373,
											"end": 53374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 53354,
											"end": 53375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53354,
											"end": 53375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53417,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53426,
											"end": 53444,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53445,
											"end": 53446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 53426,
											"end": 53447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53426,
											"end": 53447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53395,
											"end": 53449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53307,
											"end": 53464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53302,
											"end": 53303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53302,
											"end": 53303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 53298,
											"end": 53304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 53278,
											"end": 53281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53278,
											"end": 53281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53228,
											"end": 53476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9086,
											"end": 9088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8884,
											"end": 9224,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61443,
											"end": 61467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61470,
											"end": 61506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 61486,
											"end": 61496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61498,
											"end": 61505,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61470,
											"end": 61485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 61470,
											"end": 61506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61470,
											"end": 61506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 61470,
											"end": 61506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61526,
											"end": 61544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61443,
											"end": 61506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61443,
											"end": 61506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61526,
											"end": 61558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61526,
											"end": 61558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61517,
											"end": 61587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 61517,
											"end": 61587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61517,
											"end": 61587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61517,
											"end": 61587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9470,
											"end": 9472,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9509,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "54686973204E4654206973206E6F7420666F722073616C650000000000000000"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9571,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9553,
											"end": 9571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 61517,
											"end": 61587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61645,
											"end": 61652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61645,
											"end": 61658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61645,
											"end": 61658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61645,
											"end": 61658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61632,
											"end": 61641,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61632,
											"end": 61658,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61632,
											"end": 61658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61624,
											"end": 61701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 61624,
											"end": 61701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61624,
											"end": 61701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15627,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61624,
											"end": 61701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15664,
											"end": 15666,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15637,
											"end": 15667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15703,
											"end": 15737,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F74207061696420656E6F75676820666F7220746869"
										},
										{
											"begin": 15683,
											"end": 15701,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15683,
											"end": 15701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15683,
											"end": 15701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15676,
											"end": 15738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15774,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "73206974656D0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15754,
											"end": 15772,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15754,
											"end": 15772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15747,
											"end": 15783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 15423,
											"end": 15825,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 61624,
											"end": 61701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61764,
											"end": 61777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61764,
											"end": 61777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61764,
											"end": 61777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61764,
											"end": 61777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61764,
											"end": 61791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61764,
											"end": 61791,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61764,
											"end": 61791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61756,
											"end": 61822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 61756,
											"end": 61822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61756,
											"end": 61822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16032,
											"end": 16034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61756,
											"end": 61822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16014,
											"end": 16035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16071,
											"end": 16073,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 16051,
											"end": 16069,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16051,
											"end": 16069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16051,
											"end": 16069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16110,
											"end": 16138,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204552433230000000000000"
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16083,
											"end": 16139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16156,
											"end": 16174,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16156,
											"end": 16174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 15830,
											"end": 16180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 61756,
											"end": 61822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61860,
											"end": 61869,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61843,
											"end": 61857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61900,
											"end": 61950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 61913,
											"end": 61938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 61860,
											"end": 61869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61934,
											"end": 61937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61913,
											"end": 61925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 61913,
											"end": 61938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61900,
											"end": 61950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 61900,
											"end": 61950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61880,
											"end": 61950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61880,
											"end": 61950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61983,
											"end": 61990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61983,
											"end": 61990,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 61983,
											"end": 61990,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61965,
											"end": 61990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61972,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61965,
											"end": 61979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61979,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61965,
											"end": 61990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61961,
											"end": 62005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 61961,
											"end": 62005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 62004,
											"end": 62005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61961,
											"end": 62005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 61961,
											"end": 62005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62016,
											"end": 62037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62040,
											"end": 62071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 62053,
											"end": 62059,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62061,
											"end": 62070,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62040,
											"end": 62052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 62040,
											"end": 62071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62040,
											"end": 62071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 62040,
											"end": 62071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62016,
											"end": 62071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62016,
											"end": 62071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62092,
											"end": 62099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62092,
											"end": 62106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62092,
											"end": 62106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62092,
											"end": 62106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62084,
											"end": 62116,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 62117,
											"end": 62130,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62084,
											"end": 62131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 62084,
											"end": 62131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 62146,
											"end": 62159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62146,
											"end": 62159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62142,
											"end": 62229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 62142,
											"end": 62229,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 62184,
											"end": 62196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62176,
											"end": 62217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62184,
											"end": 62196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62207,
											"end": 62216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62207,
											"end": 62216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62176,
											"end": 62217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62207,
											"end": 62216,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62184,
											"end": 62196,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62176,
											"end": 62217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62176,
											"end": 62217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62142,
											"end": 62229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 62142,
											"end": 62229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62257,
											"end": 62275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62257,
											"end": 62275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62317,
											"end": 62332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62317,
											"end": 62332,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62317,
											"end": 62332,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62317,
											"end": 62332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62249,
											"end": 62333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62249,
											"end": 62333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62298,
											"end": 62302,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62249,
											"end": 62333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 62305,
											"end": 62315,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 62249,
											"end": 62289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62249,
											"end": 62289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 62249,
											"end": 62289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62249,
											"end": 62333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62249,
											"end": 62333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62249,
											"end": 62333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62344,
											"end": 62381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 62361,
											"end": 62371,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62373,
											"end": 62380,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62344,
											"end": 62360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 62344,
											"end": 62381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62344,
											"end": 62381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 62344,
											"end": 62381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62403,
											"end": 62417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62403,
											"end": 62417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62403,
											"end": 62417,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62403,
											"end": 62417,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62403,
											"end": 62417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62431,
											"end": 62449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62431,
											"end": 62449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62451,
											"end": 62466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62451,
											"end": 62466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62451,
											"end": 62466,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 62451,
											"end": 62466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62451,
											"end": 62466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62468,
											"end": 62481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 62468,
											"end": 62481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62468,
											"end": 62481,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 62468,
											"end": 62481,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62468,
											"end": 62481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62482,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16523,
											"end": 16538,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 16523,
											"end": 16538,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16523,
											"end": 16538,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 62419,
											"end": 62429,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 16573,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16555,
											"end": 16573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16555,
											"end": 16573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16591,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16591,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16642,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16642,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16600,
											"end": 16643,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16600,
											"end": 16643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16600,
											"end": 16643,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16600,
											"end": 16643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16659,
											"end": 16677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16659,
											"end": 16677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16659,
											"end": 16677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16652,
											"end": 16686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16652,
											"end": 16686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16652,
											"end": 16686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16652,
											"end": 16686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 16720,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16695,
											"end": 16730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "BAB4AA6B2D5C0935E0E2937D1F73655848F670D43BF6F0C7E9E11E635BB5D86F"
										},
										{
											"begin": 62399,
											"end": 62482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16431,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16416,
											"end": 16435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62482,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 61432,
											"end": 62500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61432,
											"end": 62500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61432,
											"end": 62500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61432,
											"end": 62500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61318,
											"end": 62500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 58990,
											"end": 59574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59173,
											"end": 59174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59158,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59097,
											"end": 59119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59097,
											"end": 59119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 59132,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59235,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59213,
											"end": 59247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 59197,
											"end": 59248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59191,
											"end": 59248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59191,
											"end": 59248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59263,
											"end": 59278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59302,
											"end": 59311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59297,
											"end": 59535,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 59297,
											"end": 59535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59321,
											"end": 59334,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59321,
											"end": 59341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59317,
											"end": 59341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59317,
											"end": 59341,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59297,
											"end": 59535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59297,
											"end": 59535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 59297,
											"end": 59535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59402,
											"end": 59412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59371,
											"end": 59412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59384,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59385,
											"end": 59386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 59371,
											"end": 59387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59371,
											"end": 59398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59371,
											"end": 59412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59367,
											"end": 59520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 59367,
											"end": 59520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59465,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59466,
											"end": 59467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 59452,
											"end": 59468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59452,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59440,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59441,
											"end": 59448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59441,
											"end": 59448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 59437,
											"end": 59449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59437,
											"end": 59468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 59491,
											"end": 59500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59367,
											"end": 59520,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 59367,
											"end": 59520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 59343,
											"end": 59346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59343,
											"end": 59346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59297,
											"end": 59535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 59297,
											"end": 59535,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 57981,
											"end": 58151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58059,
											"end": 58077,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58097,
											"end": 58143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 58117,
											"end": 58127,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58129,
											"end": 58135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58137,
											"end": 58142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58097,
											"end": 58116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 58097,
											"end": 58143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63882,
											"end": 63904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63907,
											"end": 63943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 63923,
											"end": 63933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63935,
											"end": 63942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63907,
											"end": 63922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 63907,
											"end": 63943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63907,
											"end": 63943,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 63907,
											"end": 63943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63963,
											"end": 63979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63963,
											"end": 63979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63882,
											"end": 63943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63882,
											"end": 63943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 63963,
											"end": 63993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 63963,
											"end": 63993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 16945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 16946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 16946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16962,
											"end": 16980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16955,
											"end": 16985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17021,
											"end": 17055,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E206E6F7420666F756E646564206174206D61726B6574706C616365"
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17073,
											"end": 17091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16741,
											"end": 17097,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 63954,
											"end": 64030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64044,
											"end": 64054,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 64044,
											"end": 64065,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64041,
											"end": 64153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 64041,
											"end": 64153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64104,
											"end": 64109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64104,
											"end": 64116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64104,
											"end": 64116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64104,
											"end": 64116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64090,
											"end": 64116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 64090,
											"end": 64116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64090,
											"end": 64100,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 64090,
											"end": 64116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 64090,
											"end": 64116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64090,
											"end": 64116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17304,
											"end": 17306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17343,
											"end": 17345,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17316,
											"end": 17346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17382,
											"end": 17404,
											"name": "PUSH",
											"source": 1,
											"value": "54686973206973206E6F7420796F7572204E4654000000000000000000000000"
										},
										{
											"begin": 17362,
											"end": 17380,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17362,
											"end": 17380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17362,
											"end": 17380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17355,
											"end": 17405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17422,
											"end": 17440,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17422,
											"end": 17440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17102,
											"end": 17446,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 64082,
											"end": 64141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64171,
											"end": 64187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64171,
											"end": 64187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64217,
											"end": 64229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64217,
											"end": 64229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64217,
											"end": 64229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 64217,
											"end": 64229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64217,
											"end": 64229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64231,
											"end": 64244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 64231,
											"end": 64244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64231,
											"end": 64244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64231,
											"end": 64244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64210,
											"end": 64214,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 64163,
											"end": 64201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 64163,
											"end": 64201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64201,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 64163,
											"end": 64201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64163,
											"end": 64245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64256,
											"end": 64304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 64273,
											"end": 64278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64273,
											"end": 64289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64273,
											"end": 64289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64273,
											"end": 64289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64290,
											"end": 64295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64290,
											"end": 64303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 64290,
											"end": 64303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64290,
											"end": 64303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64256,
											"end": 64272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 64256,
											"end": 64304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 64256,
											"end": 64304,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 64256,
											"end": 64304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64339,
											"end": 64351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64339,
											"end": 64351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64339,
											"end": 64351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64339,
											"end": 64351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64339,
											"end": 64351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64353,
											"end": 64369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64353,
											"end": 64369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64371,
											"end": 64384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 64371,
											"end": 64384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64371,
											"end": 64384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64371,
											"end": 64384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64371,
											"end": 64384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11566,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11593,
											"end": 11608,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "PUSH",
											"source": 0,
											"value": "CFD975662262E48E8C2B68605E79D409DA1B108BDC941F32D355C4CF11D35925"
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11502,
											"end": 11504,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64322,
											"end": 64385,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 63871,
											"end": 64393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63808,
											"end": 64393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 56838,
											"end": 56964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 56925,
											"end": 56956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56925,
											"end": 56938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56925,
											"end": 56956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56956,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56925,
											"end": 56956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 56925,
											"end": 56956,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 56105,
											"end": 56220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 56182,
											"end": 56212,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56212,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 17655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17635,
											"end": 17656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17692,
											"end": 17694,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 17672,
											"end": 17690,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17672,
											"end": 17690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17672,
											"end": 17690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17665,
											"end": 17695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17731,
											"end": 17765,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17711,
											"end": 17729,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17711,
											"end": 17729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17711,
											"end": 17729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17704,
											"end": 17766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17802,
											"end": 17810,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17782,
											"end": 17800,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17782,
											"end": 17800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17782,
											"end": 17800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17775,
											"end": 17811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17828,
											"end": 17847,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17828,
											"end": 17847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17451,
											"end": 17853,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 3109,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3090,
											"end": 3118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 57513,
											"end": 57774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57636,
											"end": 57666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57636,
											"end": 57666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57660,
											"end": 57664,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57636,
											"end": 57666,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57601,
											"end": 57606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57601,
											"end": 57606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57579,
											"end": 57591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57579,
											"end": 57591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57636,
											"end": 57651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 57636,
											"end": 57651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57636,
											"end": 57666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 57636,
											"end": 57666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 57636,
											"end": 57666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57618,
											"end": 57666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57618,
											"end": 57666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57677,
											"end": 57691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 57692,
											"end": 57699,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 57699,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 57692,
											"end": 57699,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12556,
											"end": 12598,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12544,
											"end": 12599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 12599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 12599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12526,
											"end": 12600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12499,
											"end": 12517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57677,
											"end": 57709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 57677,
											"end": 57709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 57677,
											"end": 57709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57725,
											"end": 57766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57725,
											"end": 57766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57725,
											"end": 57766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57739,
											"end": 57749,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11524,
											"end": 11566,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11640,
											"end": 11642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57725,
											"end": 57766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29"
										},
										{
											"begin": 57725,
											"end": 57766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11502,
											"end": 11504,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57725,
											"end": 57766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 11312,
											"end": 11710,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18342,
											"end": 18344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18324,
											"end": 18345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18324,
											"end": 18345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18324,
											"end": 18345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18420,
											"end": 18454,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18393,
											"end": 18455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18472,
											"end": 18490,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 18472,
											"end": 18490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 18140,
											"end": 18496,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35799,
											"end": 35806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 35830,
											"end": 35831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 35826,
											"end": 35831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35400,
											"end": 35407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 35431,
											"end": 35432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 35427,
											"end": 35432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35043,
											"end": 35050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 35074,
											"end": 35075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 35070,
											"end": 35075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11566,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11593,
											"end": 11608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11487,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6654,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 6629,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54286,
											"end": 55463,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 54286,
											"end": 55463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54401,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54402,
											"end": 54422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54402,
											"end": 54422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54388,
											"end": 54452,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54402,
											"end": 54426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 54402,
											"end": 54426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54425,
											"end": 54426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54425,
											"end": 54426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54402,
											"end": 54426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 54402,
											"end": 54426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54402,
											"end": 54426,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 54402,
											"end": 54426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54388,
											"end": 54427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54388,
											"end": 54438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54388,
											"end": 54452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54387,
											"end": 54543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54387,
											"end": 54543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54387,
											"end": 54543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 54387,
											"end": 54543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54484,
											"end": 54497,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54498,
											"end": 54518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54498,
											"end": 54518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54535,
											"end": 54542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54535,
											"end": 54542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54498,
											"end": 54522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 54498,
											"end": 54522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54521,
											"end": 54522,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54521,
											"end": 54522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54498,
											"end": 54522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 54498,
											"end": 54522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54498,
											"end": 54522,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 54498,
											"end": 54522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54484,
											"end": 54523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54484,
											"end": 54531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54484,
											"end": 54542,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54387,
											"end": 54543,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 54387,
											"end": 54543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54369,
											"end": 54837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54369,
											"end": 54837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 54369,
											"end": 54837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54600,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54601,
											"end": 54621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54601,
											"end": 54621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54586,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54570,
											"end": 54586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54601,
											"end": 54624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 54601,
											"end": 54624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54623,
											"end": 54624,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54623,
											"end": 54624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54601,
											"end": 54624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 54601,
											"end": 54624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54601,
											"end": 54624,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 54601,
											"end": 54624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54587,
											"end": 54625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54587,
											"end": 54632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 54570,
											"end": 54635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54680,
											"end": 54693,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54694,
											"end": 54714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54694,
											"end": 54714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54679,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54650,
											"end": 54679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54694,
											"end": 54717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 54694,
											"end": 54717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54716,
											"end": 54717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54716,
											"end": 54717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54694,
											"end": 54717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 54694,
											"end": 54717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54694,
											"end": 54717,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 54694,
											"end": 54717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54680,
											"end": 54718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54738,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 54650,
											"end": 54740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54650,
											"end": 54740,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54777,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54789,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 54755,
											"end": 54791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54819,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 54806,
											"end": 54825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54806,
											"end": 54825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54369,
											"end": 54837,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 54369,
											"end": 54837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54851,
											"end": 54860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54870,
											"end": 54883,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54870,
											"end": 54890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54866,
											"end": 54890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54866,
											"end": 54890,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54966,
											"end": 54976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54935,
											"end": 54976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54948,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54949,
											"end": 54950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54935,
											"end": 54951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54935,
											"end": 54962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54976,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54934,
											"end": 55052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54934,
											"end": 55052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54934,
											"end": 55052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 54934,
											"end": 55052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54934,
											"end": 55052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55044,
											"end": 55051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55029,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55030,
											"end": 55031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55016,
											"end": 55032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55016,
											"end": 55040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55016,
											"end": 55051,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54934,
											"end": 55052,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 54934,
											"end": 55052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54912,
											"end": 55445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54912,
											"end": 55445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 54912,
											"end": 55445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55103,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55104,
											"end": 55117,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55118,
											"end": 55119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55104,
											"end": 55120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55104,
											"end": 55127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 55087,
											"end": 55130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "tag",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55178,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55179,
											"end": 55192,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55193,
											"end": 55194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55179,
											"end": 55195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55179,
											"end": 55202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 55149,
											"end": 55217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55149,
											"end": 55217,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55258,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 55236,
											"end": 55272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55236,
											"end": 55272,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55310,
											"end": 55323,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55324,
											"end": 55344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55324,
											"end": 55344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55324,
											"end": 55347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 55324,
											"end": 55347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55346,
											"end": 55347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55346,
											"end": 55347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55324,
											"end": 55347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 55324,
											"end": 55347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55324,
											"end": 55347,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 55324,
											"end": 55347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55310,
											"end": 55348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55310,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55304,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55305,
											"end": 55306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55291,
											"end": 55307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55291,
											"end": 55348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 55367,
											"end": 55386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55367,
											"end": 55386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54286,
											"end": 55463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54912,
											"end": 55445,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 54912,
											"end": 55445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 54892,
											"end": 54895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54892,
											"end": 54895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54847,
											"end": 55456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54286,
											"end": 55463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54286,
											"end": 55463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54286,
											"end": 55463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53995,
											"end": 54280,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 53995,
											"end": 54280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54080,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5"
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54067,
											"end": 54094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54147,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54147,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 54105,
											"end": 54149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54177,
											"end": 54191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54177,
											"end": 54191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54176,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 54160,
											"end": 54194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54160,
											"end": 54194,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54235,
											"end": 54249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54235,
											"end": 54249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54235,
											"end": 54249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54235,
											"end": 54249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54235,
											"end": 54249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54234,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54269,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 54205,
											"end": 54272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53995,
											"end": 54280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53995,
											"end": 54280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 9709,
											"end": 9713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 9851,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19717,
											"end": 19719,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 19697,
											"end": 19715,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19697,
											"end": 19715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19697,
											"end": 19715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19690,
											"end": 19720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19756,
											"end": 19790,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 19736,
											"end": 19754,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 19736,
											"end": 19754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19736,
											"end": 19754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19827,
											"end": 19839,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19800,
											"end": 19840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19857,
											"end": 19876,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 19857,
											"end": 19876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19476,
											"end": 19882,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "tag",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42961,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 43003,
											"end": 43009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43011,
											"end": 43015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43020,
											"end": 43032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 42981,
											"end": 43033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "tag",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42974,
											"end": 43033,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42812,
											"end": 43041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "tag",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44068,
											"end": 44080,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44126,
											"end": 44131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44122,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20071,
											"end": 20092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20128,
											"end": 20130,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 20108,
											"end": 20126,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20108,
											"end": 20126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20108,
											"end": 20126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20101,
											"end": 20131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20167,
											"end": 20201,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 20147,
											"end": 20165,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 20147,
											"end": 20165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20147,
											"end": 20165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20140,
											"end": 20202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20238,
											"end": 20246,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20218,
											"end": 20236,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20218,
											"end": 20236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20218,
											"end": 20236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20211,
											"end": 20247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20283,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 20264,
											"end": 20283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19887,
											"end": 20289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "tag",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44186,
											"end": 44198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44200,
											"end": 44223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44233,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44227,
											"end": 44238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44246,
											"end": 44251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44253,
											"end": 44257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 44227,
											"end": 44258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 44303,
											"end": 44309,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44311,
											"end": 44318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44320,
											"end": 44330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44332,
											"end": 44344,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 44276,
											"end": 44345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44269,
											"end": 44345,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43898,
											"end": 44353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46656,
											"end": 46668,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46685,
											"end": 46692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46734,
											"end": 46735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46713,
											"end": 46735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21025,
											"end": 21046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21082,
											"end": 21084,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21055,
											"end": 21085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21121,
											"end": 21152,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 21101,
											"end": 21119,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 21101,
											"end": 21119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21101,
											"end": 21119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21094,
											"end": 21153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21170,
											"end": 21188,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 21170,
											"end": 21188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 20841,
											"end": 21194,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47020,
											"end": 47030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "tag",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 47071,
											"end": 47081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47083,
											"end": 47095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48050,
											"end": 48060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48044,
											"end": 48061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48107,
											"end": 48122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48094,
											"end": 48104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48090,
											"end": 48092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48086,
											"end": 48105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48079,
											"end": 48123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "tag",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48177,
											"end": 48189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 48170,
											"end": 48190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "499"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "640"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "489"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "643"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "642"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "643"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "642"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "643"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "640"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 199,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 348,
											"end": 352,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 372,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 388,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 388,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 474,
											"end": 516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 463,
											"end": 517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 456,
											"end": 461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 518,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 443,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 443,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 547,
											"end": 681,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 547,
											"end": 681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 635,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 615,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 644,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 644,
											"end": 675,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 547,
											"end": 681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 547,
											"end": 681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 547,
											"end": 681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 547,
											"end": 681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 686,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 770,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 832,
											"end": 841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 823,
											"end": 830,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 819,
											"end": 842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 815,
											"end": 847,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 887,
											"end": 910,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 959,
											"end": 973,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 956,
											"end": 990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 956,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 956,
											"end": 990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 986,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 976,
											"end": 988,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 956,
											"end": 990,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 956,
											"end": 990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1022,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1076,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1077,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1130,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 1139,
											"end": 1175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1155,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1199,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1194,
											"end": 1204,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1227,
											"end": 1236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1283,
											"end": 1285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1417,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1393,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1418,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1441,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 1369,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1421,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1630,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1630,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 1608,
											"end": 1647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1647,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 1608,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1678,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1678,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1678,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 1788,
											"end": 1791,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 1769,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1793,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1732,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1732,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1732,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 1687,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 686,
											"end": 1866,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 686,
											"end": 1866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1871,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2003,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2020,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 1968,
											"end": 2020,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2018,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2020,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 1968,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2065,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 2074,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2105,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 2074,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2180,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2180,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1871,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2574,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2191,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2323,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2357,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 2305,
											"end": 2357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2355,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2357,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 2305,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2402,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 2411,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2517,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2517,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2568,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2568,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3755,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3046,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3471,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3558,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 3643,
											"end": 3646,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2713,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2760,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2913,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2971,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2960,
											"end": 2965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3032,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3034,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 3041,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3647,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 3600,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 3537,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3746,
											"end": 3749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3749,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3755,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3760,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4430,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 4212,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4233,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 4212,
											"end": 4430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4287,
											"end": 4349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4382,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 4212,
											"end": 4430,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4708,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4461,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4672,
											"end": 4677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 4647,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 5576,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4713,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5012,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5219,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5219,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5268,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5449,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5540,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 5247,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 5576,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 5576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 6203,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5955,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6087,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 6052,
											"end": 6104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6104,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 6052,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6123,
											"end": 6146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6146,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6197,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5955,
											"end": 6203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6461,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6208,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6381,
											"end": 6400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6385,
											"end": 6394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2713,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2760,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2913,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2971,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2960,
											"end": 2965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3032,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3034,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 3041,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7532,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7517,
											"end": 7550,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7567,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 7514,
											"end": 7567,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7565,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7567,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 7514,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7612,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7646,
											"end": 7651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7621,
											"end": 7652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7652,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7621,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7676,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 7727,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 7727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7774,
											"end": 7776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7778,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7830,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7834,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 7802,
											"end": 7834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7843,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7876,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 7843,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7908,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7383,
											"end": 7908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8301,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7913,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8030,
											"end": 8039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8045,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 8010,
											"end": 8062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8062,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 8010,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8097,
											"end": 8106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8107,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 8141,
											"end": 8146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 8116,
											"end": 8147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8147,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 8116,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8223,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8227,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 8195,
											"end": 8227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 8236,
											"end": 8269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8269,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 8236,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8306,
											"end": 8490,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8306,
											"end": 8490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8435,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8355,
											"end": 8356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8348,
											"end": 8436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8445,
											"end": 8460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8483,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8476,
											"end": 8477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8495,
											"end": 8679,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 8495,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8624,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8544,
											"end": 8545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8537,
											"end": 8625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8634,
											"end": 8649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8668,
											"end": 8672,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8665,
											"end": 8666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8658,
											"end": 8673,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8684,
											"end": 8879,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8684,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8820,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8747,
											"end": 8752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8744,
											"end": 8821,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 8741,
											"end": 8844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 8824,
											"end": 8842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8860,
											"end": 8873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8684,
											"end": 8879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9943,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10066,
											"end": 10068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10054,
											"end": 10063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10041,
											"end": 10064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10037,
											"end": 10069,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10086,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 10034,
											"end": 10086,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10084,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10086,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 10034,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10105,
											"end": 10121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10105,
											"end": 10121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 10127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9943,
											"end": 10127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13009,
											"end": 13260,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 13009,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13103,
											"end": 13135,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13100,
											"end": 13152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13100,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 13100,
											"end": 13152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13148,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13138,
											"end": 13150,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13100,
											"end": 13152,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 13100,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13174,
											"end": 13190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13199,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 13224,
											"end": 13229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13199,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 13199,
											"end": 13230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17858,
											"end": 18135,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 17858,
											"end": 18135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17925,
											"end": 17931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17978,
											"end": 17980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17966,
											"end": 17975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17957,
											"end": 17964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17953,
											"end": 17976,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17981,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 17946,
											"end": 17998,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17946,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 17946,
											"end": 17998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17994,
											"end": 17995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17991,
											"end": 17992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17984,
											"end": 17996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17946,
											"end": 17998,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 17946,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18026,
											"end": 18035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18020,
											"end": 18036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18072,
											"end": 18085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18065,
											"end": 18086,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18058,
											"end": 18063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18055,
											"end": 18087,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18045,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 18045,
											"end": 18105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18101,
											"end": 18102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18098,
											"end": 18099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18091,
											"end": 18103,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 18775,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 18501,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18541,
											"end": 18542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18567,
											"end": 18568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18557,
											"end": 18746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 18557,
											"end": 18746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18602,
											"end": 18679,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18599,
											"end": 18600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18592,
											"end": 18680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18707,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 18700,
											"end": 18701,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18693,
											"end": 18708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18731,
											"end": 18735,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18728,
											"end": 18729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18721,
											"end": 18736,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18557,
											"end": 18746,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 18557,
											"end": 18746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18760,
											"end": 18769,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 18775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18780,
											"end": 18948,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 18780,
											"end": 18948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18853,
											"end": 18862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18853,
											"end": 18862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18853,
											"end": 18862,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18884,
											"end": 18893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18884,
											"end": 18893,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18901,
											"end": 18916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18901,
											"end": 18916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18901,
											"end": 18916,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18895,
											"end": 18917,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18895,
											"end": 18917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18918,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18871,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 18871,
											"end": 18942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18922,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 18922,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 18922,
											"end": 18940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18953,
											"end": 19081,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 18953,
											"end": 19081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19029,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19052,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 19038,
											"end": 19075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19055,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 19055,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 19055,
											"end": 19073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19282,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 19086,
											"end": 19282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19125,
											"end": 19128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19153,
											"end": 19158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19143,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 19143,
											"end": 19182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 19162,
											"end": 19180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19209,
											"end": 19275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19198,
											"end": 19276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19198,
											"end": 19276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19287,
											"end": 19471,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 19287,
											"end": 19471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19339,
											"end": 19416,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19336,
											"end": 19337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19329,
											"end": 19417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19436,
											"end": 19440,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 19433,
											"end": 19434,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19426,
											"end": 19441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19460,
											"end": 19464,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19457,
											"end": 19458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19450,
											"end": 19465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20294,
											"end": 20544,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 20294,
											"end": 20544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20379,
											"end": 20380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20403,
											"end": 20409,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20400,
											"end": 20401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20397,
											"end": 20410,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20479,
											"end": 20490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20479,
											"end": 20490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20479,
											"end": 20490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20473,
											"end": 20491,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20460,
											"end": 20471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20460,
											"end": 20471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20460,
											"end": 20471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 20492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20425,
											"end": 20427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20418,
											"end": 20428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 20389,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20536,
											"end": 20537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20518,
											"end": 20534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20518,
											"end": 20534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20511,
											"end": 20538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20294,
											"end": 20544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20549,
											"end": 20836,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 20549,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20678,
											"end": 20681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20716,
											"end": 20722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20710,
											"end": 20723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20732,
											"end": 20798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 20791,
											"end": 20797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20786,
											"end": 20789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20779,
											"end": 20783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20771,
											"end": 20777,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20767,
											"end": 20784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20732,
											"end": 20798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 20732,
											"end": 20798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20732,
											"end": 20798,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 20732,
											"end": 20798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20814,
											"end": 20830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20814,
											"end": 20830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20814,
											"end": 20830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20814,
											"end": 20830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20814,
											"end": 20830,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20549,
											"end": 20836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20549,
											"end": 20836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21199,
											"end": 21654,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 21199,
											"end": 21654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21348,
											"end": 21350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21337,
											"end": 21346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21330,
											"end": 21351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21311,
											"end": 21315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21380,
											"end": 21386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21374,
											"end": 21387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21423,
											"end": 21429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21418,
											"end": 21420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21407,
											"end": 21416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21396,
											"end": 21430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21439,
											"end": 21518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 21511,
											"end": 21517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21506,
											"end": 21508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21495,
											"end": 21504,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21491,
											"end": 21509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21486,
											"end": 21488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21478,
											"end": 21484,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21439,
											"end": 21518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 21439,
											"end": 21518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21439,
											"end": 21518,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 21439,
											"end": 21518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21570,
											"end": 21572,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 21558,
											"end": 21573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21575,
											"end": 21641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 21554,
											"end": 21642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21539,
											"end": 21643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21539,
											"end": 21643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21539,
											"end": 21643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21539,
											"end": 21643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21645,
											"end": 21647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21535,
											"end": 21648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21535,
											"end": 21648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21199,
											"end": 21654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21199,
											"end": 21654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyNFT(address,uint256)": "a82ba76f",
							"buyNFTbyERC20(address,uint256)": "2b205d14",
							"deSellNFT(address,uint256)": "da24548a",
							"getAllowedCollections()": "3a51f383",
							"getAllowedERC20()": "69c57352",
							"getCollectionTokensAtSale(address,uint256,uint256)": "b7b7b8ff",
							"getCollectionsTokensCount()": "a7c9197a",
							"getColletionTokensCount(address)": "5b4e7add",
							"getFeeReceiver()": "e8a35392",
							"getMyTokensAtSale(uint256,uint256)": "cb4ca919",
							"getTokensAtSale(uint256,uint256)": "5b87f0f2",
							"getTokensAtSaleCount()": "c8f77899",
							"getTradeFee()": "952977f5",
							"getUserCollectionTokensCount(address,address)": "c8d8101c",
							"getUserCollectionsTokenCount(address)": "3eac63ed",
							"getUserTokensAtSale(address,uint256,uint256)": "2ca38df5",
							"isAllowedERC20(address)": "785fa7ce",
							"isMarketPlaceContract()": "527f2902",
							"marketTokensGet(address,uint256)": "6629e913",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"sellNFT(address,uint256,uint256,address)": "98f748bd",
							"setAllowedCollections(address[])": "27713536",
							"setAllowedERC20(address[])": "e9e4e160",
							"setFeeReceiver(address)": "efdcd974",
							"setTradeFee(uint256)": "10603023",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50",
							"withdrawERC20(address)": "f4f3b200",
							"withdrawWei()": "5211ac2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"__collections\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"__feeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__tradeFee\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"__allowedERC20\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BuyWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSaleWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawWei\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFTbyERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deSellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedCollections\",\"outputs\":[{\"internalType\":\"contract IERC721[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedERC20\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getCollectionTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollectionsTokensCount\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.CollectionTokenCount[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"getColletionTokensCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getMyTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"getTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensAtSaleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"getUserCollectionTokensCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCollectionsTokenCount\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.CollectionTokenCount[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getUserTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"isAllowedERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMarketPlaceContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"marketTokensGet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT\",\"name\":\"ret\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"sellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_newCollections\",\"type\":\"address[]\"}],\"name\":\"setAllowedCollections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newAllowedERC20\",\"type\":\"address[]\"}],\"name\":\"setAllowedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTradeFee\",\"type\":\"uint256\"}],\"name\":\"setTradeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2258,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2432,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tradeFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 2444,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_marketCollections",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_contract(IERC721)638)dyn_storage"
							},
							{
								"astId": 2448,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_allowedCollections",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2451,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_allowedERC20",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 2455,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_marketTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(SelledNFT)2426_storage)dyn_storage"
							},
							{
								"astId": 2459,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_collectionTokensCount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2463,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_userTokensCount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2469,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_userTokensCountByCollections",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2471,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_feeReceiver",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_contract(IERC721)638)dyn_storage": {
								"base": "t_contract(IERC721)638",
								"encoding": "dynamic_array",
								"label": "contract IERC721[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(SelledNFT)2426_storage)dyn_storage": {
								"base": "t_struct(SelledNFT)2426_storage",
								"encoding": "dynamic_array",
								"label": "struct Marketplace.SelledNFT[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC721)638": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(SelledNFT)2426_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.SelledNFT",
								"members": [
									{
										"astId": 2415,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "collection",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2417,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2419,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 2421,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2423,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "erc20",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 2425,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "utx",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122079af5b6915790cd53bb3f98ae80dadb3943e2f12b18efcd7b425ed0abcd2aabf64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079af5b6915790cd53bb3f98ae80dadb3943e2f12b18efcd7b425ed0abcd2aabf64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xAF5B6915790CD53BB3F98AE80DADB3943E2F12B18EFCD7B425ED EXP 0xBC 0xD2 0xAA 0xBF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;17953:12616:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079af5b6915790cd53bb3f98ae80dadb3943e2f12b18efcd7b425ed0abcd2aabf64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xAF5B6915790CD53BB3F98AE80DADB3943E2F12B18EFCD7B425ED EXP 0xBC 0xD2 0xAA 0xBF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079af5b6915790cd53bb3f98ae80dadb3943e2f12b18efcd7b425ed0abcd2aabf64736f6c63430008120033",
									".code": [
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2258,
								"contract": "source/Marketplace.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a38ec331b15ce1fc4998c343becb5d6eb8eea6b06989731e19b1de523c35aef464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a38ec331b15ce1fc4998c343becb5d6eb8eea6b06989731e19b1de523c35aef464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 DUP15 0xC3 BALANCE 0xB1 0x5C 0xE1 0xFC 0x49 SWAP9 0xC3 NUMBER 0xBE 0xCB 0x5D PUSH15 0xB8EEA6B06989731E19B1DE523C35AE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;6284:3666:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a38ec331b15ce1fc4998c343becb5d6eb8eea6b06989731e19b1de523c35aef464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 DUP15 0xC3 BALANCE 0xB1 0x5C 0xE1 0xFC 0x49 SWAP9 0xC3 NUMBER 0xBE 0xCB 0x5D PUSH15 0xB8EEA6B06989731E19B1DE523C35AE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a38ec331b15ce1fc4998c343becb5d6eb8eea6b06989731e19b1de523c35aef464736f6c63430008120033",
									".code": [
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b414cd1c3ed67b23de4cb3a4c6252cb36bbfd5f297f98208576358b7eee419a164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b414cd1c3ed67b23de4cb3a4c6252cb36bbfd5f297f98208576358b7eee419a164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 EQ 0xCD SHR RETURNDATACOPY 0xD6 PUSH28 0x23DE4CB3A4C6252CB36BBFD5F297F98208576358B7EEE419A164736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;32254:6409:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b414cd1c3ed67b23de4cb3a4c6252cb36bbfd5f297f98208576358b7eee419a164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 EQ 0xCD SHR RETURNDATACOPY 0xD6 PUSH28 0x23DE4CB3A4C6252CB36BBFD5F297F98208576358B7EEE419A164736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b414cd1c3ed67b23de4cb3a4c6252cb36bbfd5f297f98208576358b7eee419a164736f6c63430008120033",
									".code": [
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122045101ff87392f983fc6349e131d07d8971cfc576371e46e87bb5e3aab25f761d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045101ff87392f983fc6349e131d07d8971cfc576371e46e87bb5e3aab25f761d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT LT 0x1F 0xF8 PUSH20 0x92F983FC6349E131D07D8971CFC576371E46E87B 0xB5 0xE3 0xAA 0xB2 0x5F PUSH23 0x1D64736F6C634300081200330000000000000000000000 ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;30734:1081:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045101ff87392f983fc6349e131d07d8971cfc576371e46e87bb5e3aab25f761d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT LT 0x1F 0xF8 PUSH20 0x92F983FC6349E131D07D8971CFC576371E46E87B 0xB5 0xE3 0xAA 0xB2 0x5F PUSH23 0x1D64736F6C634300081200330000000000000000000000 ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045101ff87392f983fc6349e131d07d8971cfc576371e46e87bb5e3aab25f761d64736f6c63430008120033",
									".code": [
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x9d89c5c914bb8a096d66a1a125ba8a64049890e22f80868b66b5061ba5728641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645fceb2bc0d1420bb8307b7d5fe0c39d7cdf3c8b658747b0128ef1901d084e3\",\"dweb:/ipfs/Qmd3Evvi4YGubp6sTPn7zvVgQRt9zFVce7Wgho95kiZgYP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> source/Marketplace.sol:1584:50:\n     |\n1584 |     function getUserTokensAtSale(address seller, uint256 offset, uint256 limit)\n     |                                                  ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58216,
					"file": "source/Marketplace.sol",
					"start": 58202
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> source/Marketplace.sol:1584:66:\n     |\n1584 |     function getUserTokensAtSale(address seller, uint256 offset, uint256 limit)\n     |                                                                  ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58231,
					"file": "source/Marketplace.sol",
					"start": 58218
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> source/Marketplace.sol:1604:30:\n     |\n1604 |     function getTokensAtSale(uint256 limit, uint256 offset) public view returns (SelledNFT[] memory) {\n     |                              ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58886,
					"file": "source/Marketplace.sol",
					"start": 58873
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> source/Marketplace.sol:1604:45:\n     |\n1604 |     function getTokensAtSale(uint256 limit, uint256 offset) public view returns (SelledNFT[] memory) {\n     |                                             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58902,
					"file": "source/Marketplace.sol",
					"start": 58888
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> source/Marketplace.sol:1607:60:\n     |\n1607 |     function getCollectionTokensAtSale(address collection, uint256 offset, uint256 limit) public view returns (SelledNFT[] memory ret) {\n     |                                                            ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 59059,
					"file": "source/Marketplace.sol",
					"start": 59045
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> source/Marketplace.sol:1607:76:\n     |\n1607 |     function getCollectionTokensAtSale(address collection, uint256 offset, uint256 limit) public view returns (SelledNFT[] memory ret) {\n     |                                                                            ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 59074,
					"file": "source/Marketplace.sol",
					"start": 59061
				},
				"type": "Warning"
			}
		],
		"sources": {
			"source/Marketplace.sol": {
				"ast": {
					"absolutePath": "source/Marketplace.sol",
					"exportedSymbols": {
						"Address": [
							2243
						],
						"Context": [
							21
						],
						"IERC165": [
							526
						],
						"IERC20": [
							517
						],
						"IERC20Permit": [
							165
						],
						"IERC721": [
							638
						],
						"Marketplace": [
							3839
						],
						"Math": [
							1502
						],
						"Ownable": [
							131
						],
						"Pausable": [
							2332
						],
						"SafeERC20": [
							441
						],
						"SafeMath": [
							1915
						],
						"SignedMath": [
							1605
						]
					},
					"id": 3840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "641:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "729:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 21,
									"src": "656:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "829:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "840:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "813:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:0"
									},
									"scope": 21,
									"src": "762:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3840,
							"src": "623:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "Context",
										"nameLocations": [
											"1478:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1478:7:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 22,
								"nodeType": "StructuredDocumentation",
								"src": "942:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								21
							],
							"name": "Ownable",
							"nameLocation": "1467:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1509:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "1493:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 32,
									"name": "OwnershipTransferred",
									"nameLocation": "1530:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1567:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1551:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1598:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1582:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:57:0"
									},
									"src": "1524:84:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1729:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 37,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1759:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1759:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1740:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1740:32:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1616:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:0"
									},
									"scope": 131,
									"src": "1715:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1894:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 45,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1905:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1905:13:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "1929:1:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1788:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 50,
									"name": "onlyOwner",
									"nameLocation": "1882:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:2:0"
									},
									"src": "1873:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "2074:32:0",
										"statements": [
											{
												"expression": {
													"id": 56,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "2092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "2085:13:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1946:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2028:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:9:0"
									},
									"scope": 131,
									"src": "2019:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2229:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 64,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "2248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 66,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 63,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "2240:68:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2114:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2193:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:0:0"
									},
									"scope": 131,
									"src": "2184:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2721:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2732:30:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2324:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 76,
												"name": "onlyOwner",
												"nameLocations": [
													"2711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2711:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2676:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2721:0:0"
									},
									"scope": 131,
									"src": "2667:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2995:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "3014:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3026:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 97,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3026:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3026:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3014:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3038:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3006:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "3006:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "3109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3090:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "3090:28:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2778:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"2985:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2985:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2985:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2995:0:0"
									},
									"scope": 131,
									"src": "2925:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3349:128:0",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3368:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "3360:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3360:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"id": 118,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3360:25:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "3396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3405:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3396:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3396:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 125,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3460:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3429:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "3424:45:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3134:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3295:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3322:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3314:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:0"
									},
									"scope": 131,
									"src": "3286:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3840,
							"src": "1449:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "3562:487:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "IERC20Permit",
							"nameLocation": "4061:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4081:812:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "4908:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4983:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4975:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5007:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4999:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5026:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 142,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5026:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5072:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5064:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4914:166:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5089:0:0"
									},
									"scope": 165,
									"src": "4899:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5098:300:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "5413:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:15:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5457:9:0"
									},
									"scope": 165,
									"src": "5404:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5475:130:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5674:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5690:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5716:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5715:9:0"
									},
									"scope": 165,
									"src": "5665:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3840,
							"src": "4051:1677:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "5817:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 441,
							"linearizedBaseContracts": [
								441
							],
							"name": "SafeERC20",
							"nameLocation": "6292:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 169,
									"libraryName": {
										"id": 167,
										"name": "Address",
										"nameLocations": [
											"6315:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2243,
										"src": "6315:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6309:26:0",
									"typeName": {
										"id": 168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6327:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "6415:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "6446:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 183,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "6476:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6482:8:0",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 484,
																		"src": "6476:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6491:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6476:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 186,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "6501:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "6505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 181,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6453:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6457:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6453:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6453:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 179,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6426:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6426:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "6426:86:0"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "6352:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6372:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "IERC20",
														"nameLocations": [
															"6365:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6365:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6387:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6379:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:41:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6415:0:0"
									},
									"scope": 441,
									"src": "6343:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "6618:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 208,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "6679:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6685:12:0",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 516,
																		"src": "6679:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6698:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6679:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 211,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "6708:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 212,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "6714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6718:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6656:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6660:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6656:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6656:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 204,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6629:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6629:96:0"
											}
										]
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6537:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6561:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 193,
														"name": "IERC20",
														"nameLocations": [
															"6554:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6554:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6568:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6590:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6582:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:55:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6618:0:0"
									},
									"scope": 441,
									"src": "6528:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7078:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "7332:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7341:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7331:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 238,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "7372:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7364:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 236,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7364:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7364:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 240,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "7379:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 234,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "7348:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7354:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 494,
																				"src": "7348:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7348:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7391:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7348:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 244,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7347:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7331:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7408:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7309:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7309:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "7506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 253,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "7536:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7542:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7536:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7550:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7536:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "7560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "7569:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 251,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7513:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7517:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7513:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7513:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 249,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7486:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7486:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "7486:90:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6741:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "7011:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7030:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7023:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "IERC20",
														"nameLocations": [
															"7023:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7023:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7023:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7022:46:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7078:0:0"
									},
									"scope": 441,
									"src": "7002:582:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7678:197:0",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "7697:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "7689:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 278,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7736:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7728:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7728:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 280,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 274,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "7712:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7718:9:0",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "7712:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7712:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 282,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "7754:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7712:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7689:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "7790:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 265,
																			"src": "7820:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7826:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7820:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7834:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7820:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 292,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "7844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 293,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "7853:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 287,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7797:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7801:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7797:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7797:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 285,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7770:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7770:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "7770:97:0"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "7601:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 263,
														"name": "IERC20",
														"nameLocations": [
															"7623:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7623:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7623:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7662:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7654:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:46:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7678:0:0"
									},
									"scope": 441,
									"src": "7592:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7969:377:0",
										"statements": [
											{
												"id": 344,
												"nodeType": "UncheckedBlock",
												"src": "7980:359:0",
												"statements": [
													{
														"assignments": [
															309
														],
														"declarations": [
															{
																"constant": false,
																"id": 309,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "8013:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8005:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 308,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 318,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8044:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8044:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8044:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "8059:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 310,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8034:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "8028:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8028:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8005:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "8090:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 321,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "8106:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8090:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8113:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 319,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "8082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8082:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8082:75:0"
													},
													{
														"assignments": [
															327
														],
														"declarations": [
															{
																"constant": false,
																"id": 327,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "8180:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8172:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 331,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 328,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "8195:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "8210:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8172:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 333,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8250:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 336,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 301,
																					"src": "8280:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8286:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 504,
																				"src": "8280:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8294:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "8280:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 339,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 303,
																			"src": "8304:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 340,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "8313:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 334,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "8257:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8261:18:0",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "8257:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8257:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 332,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "8230:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8230:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "8230:97:0"
													}
												]
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "7892:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7921:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "IERC20",
														"nameLocations": [
															"7914:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7914:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7945:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7913:46:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7969:0:0"
									},
									"scope": 441,
									"src": "7883:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8578:262:0",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "8597:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8589:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"arguments": [
														{
															"id": 370,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8624:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8617:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8611:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8611:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8589:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8670:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 379,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8677:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 380,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8687:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 381,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8690:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 382,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8693:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8641:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8647:6:0",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "8641:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8641:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8641:54:0"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "8714:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8706:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"id": 389,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 387,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8727:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8733:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8727:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8727:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8706:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "8765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 394,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "8779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8779:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8765:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8796:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8757:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8757:75:0"
											}
										]
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "8363:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8397:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8384:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$165",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 347,
														"name": "IERC20Permit",
														"nameLocations": [
															"8384:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 165,
														"src": "8384:12:0"
													},
													"referencedDeclaration": 165,
													"src": "8384:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$165",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "8495:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8487:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "8520:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "8540:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8532:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "8560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8373:195:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8578:0:0"
									},
									"scope": 441,
									"src": "8354:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "9301:646:0",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9668:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "9655:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 411,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9655:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [
														{
															"id": 418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9709:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9715:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 415,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9689:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9681:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9681:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9696:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2003,
														"src": "9681:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9655:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 422,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9776:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9765:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9765:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "9761:179:0",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "9788:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 429,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "9862:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "9875:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 430,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "9875:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 432,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9874:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 427,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "9851:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "9855:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "9851:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9851:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9883:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 426,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9843:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9843:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "9843:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8848:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "9240:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9260:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 404,
														"name": "IERC20",
														"nameLocations": [
															"9260:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "9260:6:0"
													},
													"referencedDeclaration": 517,
													"src": "9260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9287:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9274:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9301:0:0"
									},
									"scope": 441,
									"src": "9231:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3840,
							"src": "6284:3666:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "10030:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 517,
							"linearizedBaseContracts": [
								517
							],
							"name": "IERC20",
							"nameLocation": "10114:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "10128:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 451,
									"name": "Transfer",
									"nameLocation": "10303:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10328:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10312:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10350:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10334:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10362:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10311:57:0"
									},
									"src": "10297:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "10377:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 460,
									"name": "Approval",
									"nameLocation": "10540:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10549:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10588:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10572:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10605:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10597:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10548:63:0"
									},
									"src": "10534:78:0"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "10620:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "10703:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10714:2:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "10740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10739:9:0"
									},
									"scope": 517,
									"src": "10694:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "10757:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10846:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10855:17:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10896:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10895:9:0"
									},
									"scope": 517,
									"src": "10837:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "10913:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "11136:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11153:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11145:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11144:28:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11191:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11190:6:0"
									},
									"scope": 517,
									"src": "11127:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "11205:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "11490:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11508:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11500:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11523:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11515:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11499:32:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11555:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11554:9:0"
									},
									"scope": 517,
									"src": "11481:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "11572:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12242:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12249:33:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12301:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:6:0"
									},
									"scope": 517,
									"src": "12233:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "12315:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "12625:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12660:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12652:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12672:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12664:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12637:42:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12697:6:0"
									},
									"scope": 517,
									"src": "12616:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3840,
							"src": "10104:2603:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 526,
							"linearizedBaseContracts": [
								526
							],
							"name": "IERC165",
							"nameLocation": "12723:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "12738:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "13100:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "13125:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13117:20:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13160:6:0"
									},
									"scope": 526,
									"src": "13091:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3840,
							"src": "12713:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "IERC165",
										"nameLocations": [
											"13195:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "13195:7:0"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "13195:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 638,
							"linearizedBaseContracts": [
								638,
								526
							],
							"name": "IERC721",
							"nameLocation": "13184:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "13210:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 537,
									"name": "Transfer",
									"nameLocation": "13312:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13321:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13359:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13343:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13379:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13363:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13320:67:0"
									},
									"src": "13306:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "13396:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 546,
									"name": "Approval",
									"nameLocation": "13504:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13513:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13552:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13536:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13578:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13562:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13512:74:0"
									},
									"src": "13498:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "13595:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 555,
									"name": "ApprovalForAll",
									"nameLocation": "13726:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13741:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13780:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13764:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13795:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13740:64:0"
									},
									"src": "13720:85:0"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "13813:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13906:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13916:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13915:15:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "13962:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13953:17:0"
									},
									"scope": 638,
									"src": "13897:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "13979:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "14131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14138:17:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:0"
									},
									"scope": 638,
									"src": "14122:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "14202:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14785:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14820:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14812:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14897:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14882:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14801:107:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14917:0:0"
									},
									"scope": 638,
									"src": "14776:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "14926:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15641:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15699:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15657:77:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15743:0:0"
									},
									"scope": 638,
									"src": "15632:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "15752:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16284:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16338:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16330:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16296:77:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16382:0:0"
									},
									"scope": 638,
									"src": "16275:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "16391:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16870:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16886:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16878:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16877:29:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16915:0:0"
									},
									"scope": 638,
									"src": "16861:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "16924:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17257:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17283:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17275:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "17298:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17293:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17274:34:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17317:0:0"
									},
									"scope": 638,
									"src": "17248:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "17326:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "17486:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17497:17:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17546:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17538:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17537:18:0"
									},
									"scope": 638,
									"src": "17477:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "17564:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17721:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17761:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17753:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17737:33:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17794:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17794:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17793:6:0"
									},
									"scope": 638,
									"src": "17712:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3840,
							"src": "13174:4629:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "17876:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1502,
							"linearizedBaseContracts": [
								1502
							],
							"name": "Math",
							"nameLocation": "17961:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 643,
									"members": [
										{
											"id": 640,
											"name": "Down",
											"nameLocation": "17998:4:0",
											"nodeType": "EnumValue",
											"src": "17998:4:0"
										},
										{
											"id": 641,
											"name": "Up",
											"nameLocation": "18041:2:0",
											"nodeType": "EnumValue",
											"src": "18041:2:0"
										},
										{
											"id": 642,
											"name": "Zero",
											"nameLocation": "18073:4:0",
											"nodeType": "EnumValue",
											"src": "18073:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "17978:8:0",
									"nodeType": "EnumDefinition",
									"src": "17973:126:0"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "18241:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 653,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "18259:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 654,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "18263:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18259:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 657,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "18271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18259:13:0",
													"trueExpression": {
														"id": 656,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "18267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 659,
												"nodeType": "Return",
												"src": "18252:20:0"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "18107:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "18183:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18195:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18187:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18206:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18198:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18186:22:0"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18231:9:0"
									},
									"scope": 1502,
									"src": "18174:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "18423:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 671,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "18441:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 672,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "18445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18441:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 675,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "18453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18441:13:0",
													"trueExpression": {
														"id": 674,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "18449:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 670,
												"id": 677,
												"nodeType": "Return",
												"src": "18434:20:0"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "18288:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "18365:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18368:22:0"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18413:9:0"
									},
									"scope": 1502,
									"src": "18356:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "18652:85:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 689,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "18709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 690,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "18713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18709:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "18719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "18723:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "18718:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18708:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 700,
												"nodeType": "Return",
												"src": "18701:28:0"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "18470:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "18590:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18606:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18598:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18617:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18609:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18597:22:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18642:9:0"
									},
									"scope": 1502,
									"src": "18581:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "19015:126:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "19105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19110:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19105:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 716,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "19119:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "19128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19118:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "19118:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19105:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 725,
												"nodeType": "Return",
												"src": "19098:35:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "18745:193:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "18953:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18969:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18961:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18960:22:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "19006:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19005:9:0"
									},
									"scope": 1502,
									"src": "18944:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "19562:3898:0",
										"statements": [
											{
												"id": 848,
												"nodeType": "UncheckedBlock",
												"src": "19573:3880:0",
												"statements": [
													{
														"assignments": [
															740
														],
														"declarations": [
															{
																"constant": false,
																"id": 740,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "19906:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19898:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19898:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 741,
														"nodeType": "VariableDeclarationStatement",
														"src": "19898:13:0"
													},
													{
														"assignments": [
															743
														],
														"declarations": [
															{
																"constant": false,
																"id": 743,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "19979:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19971:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 742,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19971:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 744,
														"nodeType": "VariableDeclarationStatement",
														"src": "19971:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20052:161:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20071:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20088:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20091:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20098:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "20094:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20094:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20081:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20081:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "20075:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20119:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20132:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20135:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "20128:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20128:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "20119:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20155:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20172:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20176:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "20168:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20168:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20187:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20191:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20184:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20184:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20164:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20164:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "20155:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20119:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20176:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20191:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "20155:5:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20088:1:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20132:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20091:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20135:1:0",
																"valueSize": 1
															}
														],
														"id": 745,
														"nodeType": "InlineAssembly",
														"src": "20043:170:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 746,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "20297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20306:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 754,
														"nodeType": "IfStatement",
														"src": "20293:77:0",
														"trueBody": {
															"id": 753,
															"nodeType": "Block",
															"src": "20309:61:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 749,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "20335:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 750,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "20343:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20335:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 738,
																	"id": 752,
																	"nodeType": "Return",
																	"src": "20328:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "20483:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 757,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "20497:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20483:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20504:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 755,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "20475:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20475:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "20475:53:0"
													},
													{
														"assignments": [
															763
														],
														"declarations": [
															{
																"constant": false,
																"id": 763,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "20799:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "20791:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 764,
														"nodeType": "VariableDeclarationStatement",
														"src": "20791:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20832:298:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "20903:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20923:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20926:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "20929:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20916:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20916:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "20903:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21026:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "21039:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "21049:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "21060:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "21046:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21046:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21035:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21035:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "21026:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21085:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21098:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "21105:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21094:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21094:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21085:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "20929:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21060:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21085:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21098:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21026:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21039:5:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "20903:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21049:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21105:9:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20923:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20926:1:0",
																"valueSize": 1
															}
														],
														"id": 765,
														"nodeType": "InlineAssembly",
														"src": "20823:307:0"
													},
													{
														"assignments": [
															767
														],
														"declarations": [
															{
																"constant": false,
																"id": 767,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "21451:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "21443:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21443:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 775,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 768,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "21458:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "21473:12:0",
																			"subExpression": {
																				"id": 769,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "21474:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21488:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "21473:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21472:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21458:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21443:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "21514:371:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "21581:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "21600:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21613:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21596:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21596:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "21581:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21688:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21701:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21708:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21697:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21697:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21688:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21831:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21851:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "21854:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21847:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21847:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "21861:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "21843:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21843:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21868:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21839:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21839:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "21831:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21581:11:0",
																"valueSize": 1
															},
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21600:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21688:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21701:5:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21613:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21708:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21831:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21854:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21861:4:0",
																"valueSize": 1
															}
														],
														"id": 776,
														"nodeType": "InlineAssembly",
														"src": "21505:380:0"
													},
													{
														"expression": {
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "21954:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 778,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "21963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 779,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "21971:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21963:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21954:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 782,
														"nodeType": "ExpressionStatement",
														"src": "21954:21:0"
													},
													{
														"assignments": [
															784
														],
														"declarations": [
															{
																"constant": false,
																"id": 784,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "22306:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "22298:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 783,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 791,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22317:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 786,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "22321:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22317:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 788,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22316:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "22316:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22298:39:0"
													},
													{
														"expression": {
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22573:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 795,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22573:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22569:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22558:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 799,
														"nodeType": "ExpressionStatement",
														"src": "22558:36:0"
													},
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 800,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 802,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22643:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 803,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22657:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22643:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22639:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22628:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "22628:36:0"
													},
													{
														"expression": {
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 808,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22714:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 811,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22728:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22714:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22710:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22699:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 815,
														"nodeType": "ExpressionStatement",
														"src": "22699:36:0"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 816,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 818,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22785:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 819,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22785:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22781:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22770:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "22770:36:0"
													},
													{
														"expression": {
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 826,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22856:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 827,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22870:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22856:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22852:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22841:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 831,
														"nodeType": "ExpressionStatement",
														"src": "22841:36:0"
													},
													{
														"expression": {
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22913:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22924:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 834,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 835,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22928:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22924:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22913:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 839,
														"nodeType": "ExpressionStatement",
														"src": "22913:36:0"
													},
													{
														"expression": {
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 840,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "23389:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 841,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "23398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 842,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "23406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23398:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23389:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 845,
														"nodeType": "ExpressionStatement",
														"src": "23389:24:0"
													},
													{
														"expression": {
															"id": 846,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "23435:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 738,
														"id": 847,
														"nodeType": "Return",
														"src": "23428:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "19149:309:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "19473:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "19488:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19480:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "19499:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "19510:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19502:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19479:43:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19545:16:0"
									},
									"scope": 1502,
									"src": "19464:3996:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "23707:195:0",
										"statements": [
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23726:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "23718:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "23742:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 869,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "23745:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 870,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "23748:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															850,
															894
														],
														"referencedDeclaration": 850,
														"src": "23735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23735:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23718:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$643",
															"typeString": "enum Math.Rounding"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "23775:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 874,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "23787:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "23796:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 641,
															"src": "23787:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "23775:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "23809:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 879,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "23812:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 880,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "23815:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 877,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "23802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23802:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23830:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23802:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23775:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "23771:100:0",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "23833:38:0",
													"statements": [
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 885,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "23848:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "23848:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 891,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 866,
													"src": "23888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 864,
												"id": 892,
												"nodeType": "Return",
												"src": "23881:13:0"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "23468:123:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "23606:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "23621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "23632:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23624:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "23643:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23635:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23656:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "Rounding",
														"nameLocations": [
															"23656:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "23656:8:0"
													},
													"referencedDeclaration": 643,
													"src": "23656:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23612:62:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23698:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23697:9:0"
									},
									"scope": 1502,
									"src": "23597:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "24185:1616:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "24200:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24205:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24200:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "24196:47:0",
												"trueBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "24208:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 901,
															"id": 906,
															"nodeType": "Return",
															"src": "24223:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24942:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "24934:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24951:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 913,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "24962:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 912,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1174,
																			1210
																		],
																		"referencedDeclaration": 1174,
																		"src": "24957:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24957:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24968:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24957:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 917,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24956:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24951:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24934:36:0"
											},
											{
												"id": 1004,
												"nodeType": "UncheckedBlock",
												"src": "25377:417:0",
												"statements": [
													{
														"expression": {
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 920,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25402:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 921,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25412:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 922,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25421:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 923,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25425:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25421:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25412:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 926,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25411:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25411:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25402:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 930,
														"nodeType": "ExpressionStatement",
														"src": "25402:35:0"
													},
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 931,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 932,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25462:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 933,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25471:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 934,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25475:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25471:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25462:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 937,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25461:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25461:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25452:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "25452:35:0"
													},
													{
														"expression": {
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 942,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25502:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 943,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25512:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 944,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25521:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 945,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25525:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25521:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25512:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25511:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25511:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25502:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 952,
														"nodeType": "ExpressionStatement",
														"src": "25502:35:0"
													},
													{
														"expression": {
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 953,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 954,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25562:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 955,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25571:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 956,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25575:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25571:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25562:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 959,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25561:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25561:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25552:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 963,
														"nodeType": "ExpressionStatement",
														"src": "25552:35:0"
													},
													{
														"expression": {
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 964,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25602:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 965,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25612:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 966,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25621:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 967,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25625:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25621:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25612:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 970,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25611:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25636:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25611:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25602:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "25602:35:0"
													},
													{
														"expression": {
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25652:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 976,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25662:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 977,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25671:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 978,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25675:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25671:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25662:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25661:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25686:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25661:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25652:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 985,
														"nodeType": "ExpressionStatement",
														"src": "25652:35:0"
													},
													{
														"expression": {
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 986,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25702:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 987,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25712:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 988,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 989,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25725:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25721:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25712:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25711:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25736:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25711:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25702:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 996,
														"nodeType": "ExpressionStatement",
														"src": "25702:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 998,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "25763:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 999,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "25771:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1000,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "25775:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25771:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 997,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "25759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25759:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 901,
														"id": 1003,
														"nodeType": "Return",
														"src": "25752:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "23910:212:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "24137:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24150:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24142:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24141:11:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24175:9:0"
									},
									"scope": 1502,
									"src": "24128:1673:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25982:166:0",
										"statements": [
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "25993:148:0",
												"statements": [
													{
														"assignments": [
															1018
														],
														"declarations": [
															{
																"constant": false,
																"id": 1018,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26026:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1040,
																"src": "26018:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1017,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1022,
														"initialValue": {
															"arguments": [
																{
																	"id": 1020,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "26040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1019,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1006,
																	1042
																],
																"referencedDeclaration": 1006,
																"src": "26035:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26035:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26018:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "26064:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1024,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "26074:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1025,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "26086:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "26095:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "26086:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "26074:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1028,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26101:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1029,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26110:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26101:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1009,
																					"src": "26119:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26101:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26074:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26127:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26074:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26073:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26064:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1016,
														"id": 1039,
														"nodeType": "Return",
														"src": "26057:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "25809:91:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25915:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25928:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25920:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25931:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "Rounding",
														"nameLocations": [
															"25931:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "25931:8:0"
													},
													"referencedDeclaration": 643,
													"src": "25931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25919:30:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25972:9:0"
									},
									"scope": 1502,
									"src": "25906:242:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "26339:958:0",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26358:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "26350:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"hexValue": "30",
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26367:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26350:18:0"
											},
											{
												"id": 1170,
												"nodeType": "UncheckedBlock",
												"src": "26379:887:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26408:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26417:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "26408:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26423:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26408:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "26404:102:0",
														"trueBody": {
															"id": 1067,
															"nodeType": "Block",
															"src": "26426:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26445:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26455:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26445:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "26445:13:0"
																},
																{
																	"expression": {
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1063,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26477:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26487:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26477:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1066,
																	"nodeType": "ExpressionStatement",
																	"src": "26477:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1069,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26524:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26533:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "26524:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26538:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26524:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1083,
														"nodeType": "IfStatement",
														"src": "26520:99:0",
														"trueBody": {
															"id": 1082,
															"nodeType": "Block",
															"src": "26541:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26560:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26570:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26560:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1077,
																	"nodeType": "ExpressionStatement",
																	"src": "26560:12:0"
																},
																{
																	"expression": {
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1078,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26591:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26601:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26591:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1081,
																	"nodeType": "ExpressionStatement",
																	"src": "26591:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1084,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26637:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26646:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "26637:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26637:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1098,
														"nodeType": "IfStatement",
														"src": "26633:99:0",
														"trueBody": {
															"id": 1097,
															"nodeType": "Block",
															"src": "26654:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1089,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26673:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26683:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26673:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "26673:12:0"
																},
																{
																	"expression": {
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1093,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26704:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26714:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26704:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1096,
																	"nodeType": "ExpressionStatement",
																	"src": "26704:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26759:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26750:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26764:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26750:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1113,
														"nodeType": "IfStatement",
														"src": "26746:99:0",
														"trueBody": {
															"id": 1112,
															"nodeType": "Block",
															"src": "26767:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26786:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26796:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26786:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1107,
																	"nodeType": "ExpressionStatement",
																	"src": "26786:12:0"
																},
																{
																	"expression": {
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1108,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26817:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26827:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26817:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1111,
																	"nodeType": "ExpressionStatement",
																	"src": "26817:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26872:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26863:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26876:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26863:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1128,
														"nodeType": "IfStatement",
														"src": "26859:96:0",
														"trueBody": {
															"id": 1127,
															"nodeType": "Block",
															"src": "26879:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1119,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26898:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26908:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26898:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1122,
																	"nodeType": "ExpressionStatement",
																	"src": "26898:11:0"
																},
																{
																	"expression": {
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26928:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26938:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1126,
																	"nodeType": "ExpressionStatement",
																	"src": "26928:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26973:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26982:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26986:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26973:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1143,
														"nodeType": "IfStatement",
														"src": "26969:96:0",
														"trueBody": {
															"id": 1142,
															"nodeType": "Block",
															"src": "26989:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27008:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27018:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27008:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1137,
																	"nodeType": "ExpressionStatement",
																	"src": "27008:11:0"
																},
																{
																	"expression": {
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27038:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1141,
																	"nodeType": "ExpressionStatement",
																	"src": "27038:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27083:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27092:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27083:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27083:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1158,
														"nodeType": "IfStatement",
														"src": "27079:96:0",
														"trueBody": {
															"id": 1157,
															"nodeType": "Block",
															"src": "27099:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27118:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27128:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27118:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "27118:11:0"
																},
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27148:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27158:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27148:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "27148:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27193:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27206:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27193:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1169,
														"nodeType": "IfStatement",
														"src": "27189:66:0",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "27209:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27228:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27238:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27228:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "27228:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1171,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1051,
													"src": "27283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1172,
												"nodeType": "Return",
												"src": "27276:13:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "26156:116:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26287:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26291:15:0"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26329:9:0"
									},
									"scope": 1502,
									"src": "26278:1019:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "27536:170:0",
										"statements": [
											{
												"id": 1208,
												"nodeType": "UncheckedBlock",
												"src": "27547:152:0",
												"statements": [
													{
														"assignments": [
															1186
														],
														"declarations": [
															{
																"constant": false,
																"id": 1186,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27580:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1208,
																"src": "27572:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1190,
														"initialValue": {
															"arguments": [
																{
																	"id": 1188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "27594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1187,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1174,
																	1210
																],
																"referencedDeclaration": 1174,
																"src": "27589:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27589:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27572:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "27622:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "27632:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1193,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "27644:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "27653:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "27644:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "27632:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "27659:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1197,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "27664:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27659:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1199,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1177,
																					"src": "27673:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27659:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "27632:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27685:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "27632:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27681:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "27631:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "27622:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1184,
														"id": 1207,
														"nodeType": "Return",
														"src": "27615:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "27305:145:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "27465:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27494:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27485:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1178,
														"name": "Rounding",
														"nameLocations": [
															"27485:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "27485:8:0"
													},
													"referencedDeclaration": 643,
													"src": "27485:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27469:34:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27526:9:0"
									},
									"scope": 1502,
									"src": "27456:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "27899:886:0",
										"statements": [
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "27918:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "27910:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"hexValue": "30",
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27927:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27910:18:0"
											},
											{
												"id": 1335,
												"nodeType": "UncheckedBlock",
												"src": "27939:815:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "27968:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27977:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27983:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27977:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "27968:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1238,
														"nodeType": "IfStatement",
														"src": "27964:106:0",
														"trueBody": {
															"id": 1237,
															"nodeType": "Block",
															"src": "27987:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28006:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28015:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28021:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "28015:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "28006:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "28006:17:0"
																},
																{
																	"expression": {
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1233,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28042:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28052:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "28042:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1236,
																	"nodeType": "ExpressionStatement",
																	"src": "28042:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1239,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28088:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28097:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28103:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28097:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "28088:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "28084:106:0",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "28107:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1244,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28126:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28135:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28141:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "28135:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "28126:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "28126:17:0"
																},
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28162:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28172:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "28162:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "28162:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1256,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28217:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28223:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "28217:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "28208:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1272,
														"nodeType": "IfStatement",
														"src": "28204:106:0",
														"trueBody": {
															"id": 1271,
															"nodeType": "Block",
															"src": "28227:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28246:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28255:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28261:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "28255:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "28246:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1266,
																	"nodeType": "ExpressionStatement",
																	"src": "28246:17:0"
																},
																{
																	"expression": {
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28282:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28292:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "28282:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1270,
																	"nodeType": "ExpressionStatement",
																	"src": "28282:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28328:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28337:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "28337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "28328:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1289,
														"nodeType": "IfStatement",
														"src": "28324:103:0",
														"trueBody": {
															"id": 1288,
															"nodeType": "Block",
															"src": "28346:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28365:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28374:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "28374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "28365:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"nodeType": "ExpressionStatement",
																	"src": "28365:16:0"
																},
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28400:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28410:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "28400:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "28400:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28445:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28454:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "28454:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "28445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1306,
														"nodeType": "IfStatement",
														"src": "28441:103:0",
														"trueBody": {
															"id": 1305,
															"nodeType": "Block",
															"src": "28463:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1295,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28482:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28491:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28497:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "28491:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "28482:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "28482:16:0"
																},
																{
																	"expression": {
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28517:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28527:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "28517:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"nodeType": "ExpressionStatement",
																	"src": "28517:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28562:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28571:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "28571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "28562:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1323,
														"nodeType": "IfStatement",
														"src": "28558:103:0",
														"trueBody": {
															"id": 1322,
															"nodeType": "Block",
															"src": "28580:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28599:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28608:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28614:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "28608:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "28599:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"nodeType": "ExpressionStatement",
																	"src": "28599:16:0"
																},
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28634:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28644:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "28634:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "28634:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28679:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28688:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28694:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "28688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "28679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1334,
														"nodeType": "IfStatement",
														"src": "28675:68:0",
														"trueBody": {
															"id": 1333,
															"nodeType": "Block",
															"src": "28697:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28716:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28726:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "28716:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "28716:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1336,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1219,
													"src": "28771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1337,
												"nodeType": "Return",
												"src": "28764:13:0"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "27714:117:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "27846:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27860:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27851:15:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27890:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27889:9:0"
									},
									"scope": 1502,
									"src": "27837:948:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "29026:172:0",
										"statements": [
											{
												"id": 1373,
												"nodeType": "UncheckedBlock",
												"src": "29037:154:0",
												"statements": [
													{
														"assignments": [
															1351
														],
														"declarations": [
															{
																"constant": false,
																"id": 1351,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "29070:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1373,
																"src": "29062:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29062:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1355,
														"initialValue": {
															"arguments": [
																{
																	"id": 1353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "29085:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1352,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1339,
																	1375
																],
																"referencedDeclaration": 1339,
																"src": "29079:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29079:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29062:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "29113:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1357,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1345,
																					"src": "29123:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1358,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "29135:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "29144:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "29135:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "29123:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "29150:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1362,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1351,
																						"src": "29156:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29150:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1364,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "29165:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29150:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "29123:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29177:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "29123:55:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29173:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29122:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "29113:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1349,
														"id": 1372,
														"nodeType": "Return",
														"src": "29106:73:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "28793:146:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "28954:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28968:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28960:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28984:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28975:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1343,
														"name": "Rounding",
														"nameLocations": [
															"28975:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "28975:8:0"
													},
													"referencedDeclaration": 643,
													"src": "28975:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28959:34:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "29017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29016:9:0"
									},
									"scope": 1502,
									"src": "28945:253:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "29520:624:0",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29539:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "29531:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"hexValue": "30",
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29548:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29531:18:0"
											},
											{
												"id": 1458,
												"nodeType": "UncheckedBlock",
												"src": "29560:553:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29589:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29598:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "29589:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29589:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1401,
														"nodeType": "IfStatement",
														"src": "29585:101:0",
														"trueBody": {
															"id": 1400,
															"nodeType": "Block",
															"src": "29607:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29626:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29636:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "29626:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "29626:13:0"
																},
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29658:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29668:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29658:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "29658:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29713:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29704:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29718:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29704:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1416,
														"nodeType": "IfStatement",
														"src": "29700:98:0",
														"trueBody": {
															"id": 1415,
															"nodeType": "Block",
															"src": "29721:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29750:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29740:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1410,
																	"nodeType": "ExpressionStatement",
																	"src": "29740:12:0"
																},
																{
																	"expression": {
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1411,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29771:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29781:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29771:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1414,
																	"nodeType": "ExpressionStatement",
																	"src": "29771:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29816:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29825:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29816:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29830:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29816:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1431,
														"nodeType": "IfStatement",
														"src": "29812:98:0",
														"trueBody": {
															"id": 1430,
															"nodeType": "Block",
															"src": "29833:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1422,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29852:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29862:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29852:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1425,
																	"nodeType": "ExpressionStatement",
																	"src": "29852:12:0"
																},
																{
																	"expression": {
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1426,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29883:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29893:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29883:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1429,
																	"nodeType": "ExpressionStatement",
																	"src": "29883:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29937:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29928:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29928:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "29924:98:0",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "29945:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29964:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29974:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29964:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1440,
																	"nodeType": "ExpressionStatement",
																	"src": "29964:12:0"
																},
																{
																	"expression": {
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29995:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30005:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29995:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1444,
																	"nodeType": "ExpressionStatement",
																	"src": "29995:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "30040:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30049:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "30040:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30053:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30040:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1457,
														"nodeType": "IfStatement",
														"src": "30036:66:0",
														"trueBody": {
															"id": 1456,
															"nodeType": "Block",
															"src": "30056:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1452,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "30075:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30085:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30075:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1455,
																	"nodeType": "ExpressionStatement",
																	"src": "30075:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1459,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "30130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1460,
												"nodeType": "Return",
												"src": "30123:13:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "29206:245:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "29466:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29481:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29472:15:0"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29511:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29510:9:0"
									},
									"scope": 1502,
									"src": "29457:687:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "30387:179:0",
										"statements": [
											{
												"id": 1499,
												"nodeType": "UncheckedBlock",
												"src": "30398:161:0",
												"statements": [
													{
														"assignments": [
															1474
														],
														"declarations": [
															{
																"constant": false,
																"id": 1474,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30431:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1499,
																"src": "30423:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1473,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30423:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1478,
														"initialValue": {
															"arguments": [
																{
																	"id": 1476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "30447:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1475,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1462,
																	1501
																],
																"referencedDeclaration": 1462,
																"src": "30440:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30440:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30423:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "30475:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1480,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "30485:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1481,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "30497:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "30506:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "30497:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "30485:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "30512:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1487,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1485,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "30518:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1486,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "30528:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "30518:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1488,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "30517:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "30512:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1490,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1465,
																					"src": "30533:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30512:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "30485:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30545:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "30485:61:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30541:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "30484:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "30475:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1472,
														"id": 1498,
														"nodeType": "Return",
														"src": "30468:79:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "30152:147:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30314:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30336:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1466,
														"name": "Rounding",
														"nameLocations": [
															"30336:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "30336:8:0"
													},
													"referencedDeclaration": 643,
													"src": "30336:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30320:34:0"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30377:9:0"
									},
									"scope": 1502,
									"src": "30305:261:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3840,
							"src": "17953:12616:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "30650:82:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1605,
							"linearizedBaseContracts": [
								1605
							],
							"name": "SignedMath",
							"nameLocation": "30742:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "30898:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1513,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "30916:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1514,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "30920:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "30916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1517,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "30928:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "30916:13:0",
													"trueExpression": {
														"id": 1516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "30924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1519,
												"nodeType": "Return",
												"src": "30909:20:0"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "30760:68:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "30843:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30854:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30847:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30864:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30857:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1507,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30846:20:0"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30890:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1510,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30889:8:0"
									},
									"scope": 1605,
									"src": "30834:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "31084:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1531,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "31102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1532,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "31106:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "31102:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "31114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31102:13:0",
													"trueExpression": {
														"id": 1534,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "31110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1537,
												"nodeType": "Return",
												"src": "31095:20:0"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "30945:69:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "31029:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31033:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1523,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31050:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31043:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1525,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31043:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31032:20:0"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31076:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1528,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31075:8:0"
									},
									"scope": 1605,
									"src": "31020:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "31334:166:0",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "31405:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "31398:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1549,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "31398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1551,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "31410:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1552,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "31414:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31410:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1555,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31421:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1556,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31425:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31421:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "31420:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1561,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31419:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31409:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31398:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1564,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "31451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1569,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1550,
																						"src": "31471:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "31463:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1567,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "31463:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31463:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31477:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "31463:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31456:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1565,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "31456:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31456:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1574,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31485:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1575,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31485:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31484:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31456:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1579,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31455:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31451:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1581,
												"nodeType": "Return",
												"src": "31444:48:0"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "31131:129:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "31275:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31283:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31300:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31293:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31282:20:0"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31326:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1546,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31325:8:0"
									},
									"scope": 1605,
									"src": "31266:234:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "31649:163:0",
										"statements": [
											{
												"id": 1602,
												"nodeType": "UncheckedBlock",
												"src": "31660:145:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1593,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31777:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31782:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "31777:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "31790:2:0",
																		"subExpression": {
																			"id": 1597,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31791:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "31777:15:0",
																	"trueExpression": {
																		"id": 1596,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "31786:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1591,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31769:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1590,
														"id": 1601,
														"nodeType": "Return",
														"src": "31762:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "31508:80:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "31603:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "31614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31607:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1585,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31607:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31606:10:0"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31639:9:0"
									},
									"scope": 1605,
									"src": "31594:218:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3840,
							"src": "30734:1081:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1606,
								"nodeType": "StructuredDocumentation",
								"src": "32051:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1915,
							"linearizedBaseContracts": [
								1915
							],
							"name": "SafeMath",
							"nameLocation": "32262:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "32495:146:0",
										"statements": [
											{
												"id": 1636,
												"nodeType": "UncheckedBlock",
												"src": "32506:128:0",
												"statements": [
													{
														"assignments": [
															1619
														],
														"declarations": [
															{
																"constant": false,
																"id": 1619,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "32539:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1636,
																"src": "32531:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1623,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1621,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "32547:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32531:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "32567:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1625,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1631,
														"nodeType": "IfStatement",
														"src": "32563:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32582:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32589:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1617,
															"id": 1630,
															"nodeType": "Return",
															"src": "32574:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1633,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "32620:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1634,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1617,
														"id": 1635,
														"nodeType": "Return",
														"src": "32606:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "32278:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "32428:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32443:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32434:22:0"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32479:15:0"
									},
									"scope": 1915,
									"src": "32419:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "32869:118:0",
										"statements": [
											{
												"id": 1664,
												"nodeType": "UncheckedBlock",
												"src": "32880:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "32909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1651,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "32913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1657,
														"nodeType": "IfStatement",
														"src": "32905:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32924:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32931:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1656,
															"nodeType": "Return",
															"src": "32916:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1659,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "32962:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1660,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "32966:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32962:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32955:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1649,
														"id": 1663,
														"nodeType": "Return",
														"src": "32948:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "32649:138:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "32802:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32817:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32809:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32828:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32820:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32808:22:0"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32854:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32854:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32853:15:0"
									},
									"scope": 1915,
									"src": "32793:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "33218:427:0",
										"statements": [
											{
												"id": 1706,
												"nodeType": "UncheckedBlock",
												"src": "33229:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1678,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33491:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1685,
														"nodeType": "IfStatement",
														"src": "33487:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33507:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33513:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33506:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1684,
															"nodeType": "Return",
															"src": "33499:16:0"
														}
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "33538:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1706,
																"src": "33530:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "33530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1691,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1689,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33530:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1692,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1693,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "33570:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33566:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33575:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33566:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1701,
														"nodeType": "IfStatement",
														"src": "33562:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33586:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33593:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33585:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1700,
															"nodeType": "Return",
															"src": "33578:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1703,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1677,
														"id": 1705,
														"nodeType": "Return",
														"src": "33610:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "32995:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "33151:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33157:22:0"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33203:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33202:15:0"
									},
									"scope": 1915,
									"src": "33142:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "33877:119:0",
										"statements": [
											{
												"id": 1734,
												"nodeType": "UncheckedBlock",
												"src": "33888:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "33917:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "33913:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33933:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1719,
															"id": 1726,
															"nodeType": "Return",
															"src": "33925:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33965:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "33971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "33975:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33971:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33964:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1719,
														"id": 1733,
														"nodeType": "Return",
														"src": "33957:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "33653:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "33810:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33825:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33836:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33828:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33816:22:0"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33861:15:0"
									},
									"scope": 1915,
									"src": "33801:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "34238:119:0",
										"statements": [
											{
												"id": 1762,
												"nodeType": "UncheckedBlock",
												"src": "34249:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "34278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1755,
														"nodeType": "IfStatement",
														"src": "34274:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34294:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34301:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "34293:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1747,
															"id": 1754,
															"nodeType": "Return",
															"src": "34286:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34326:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1757,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "34332:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1758,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "34336:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "34332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1760,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "34325:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1747,
														"id": 1761,
														"nodeType": "Return",
														"src": "34318:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "34004:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "34171:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34197:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34189:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34177:22:0"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34223:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34223:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34222:15:0"
									},
									"scope": 1915,
									"src": "34162:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "34671:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "34689:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "34693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34689:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1777,
												"nodeType": "Return",
												"src": "34682:12:0"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "34365:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "34613:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34636:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34628:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34616:22:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34661:9:0"
									},
									"scope": 1915,
									"src": "34604:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "35052:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "35070:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "35074:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35070:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1792,
												"nodeType": "Return",
												"src": "35063:12:0"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "34710:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "34994:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35006:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "34998:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34997:22:0"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35042:9:0"
									},
									"scope": 1915,
									"src": "34985:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "35409:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "35427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1805,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "35431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1807,
												"nodeType": "Return",
												"src": "35420:12:0"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "35091:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "35351:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35354:22:0"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35399:9:0"
									},
									"scope": 1915,
									"src": "35342:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "35808:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "35826:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "35830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1822,
												"nodeType": "Return",
												"src": "35819:12:0"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "35448:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "35750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35753:22:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35798:9:0"
									},
									"scope": 1915,
									"src": "35741:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "36373:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "36391:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1835,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "36395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36391:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1837,
												"nodeType": "Return",
												"src": "36384:12:0"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "35847:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "36315:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36327:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36318:22:0"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36363:9:0"
									},
									"scope": 1915,
									"src": "36306:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "36978:111:0",
										"statements": [
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "36989:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "37022:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "37027:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1855,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "37030:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1851,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37014:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1857,
														"nodeType": "ExpressionStatement",
														"src": "37014:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1858,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "37065:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "37069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1850,
														"id": 1861,
														"nodeType": "Return",
														"src": "37058:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "36412:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "36892:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "36932:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36918:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36918:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36895:50:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36968:9:0"
									},
									"scope": 1915,
									"src": "36883:206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "37682:110:0",
										"statements": [
											{
												"id": 1887,
												"nodeType": "UncheckedBlock",
												"src": "37693:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1877,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "37726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37730:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "37726:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1880,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "37733:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1876,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37718:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37718:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1882,
														"nodeType": "ExpressionStatement",
														"src": "37718:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1883,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "37768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "37772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1875,
														"id": 1886,
														"nodeType": "Return",
														"src": "37761:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "37097:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "37596:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37608:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37600:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37619:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37611:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "37636:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37622:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37599:50:0"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37672:9:0"
									},
									"scope": 1915,
									"src": "37587:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "38550:110:0",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "38561:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1902,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "38594:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38598:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "38594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1905,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "38601:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1901,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "38586:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38586:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1907,
														"nodeType": "ExpressionStatement",
														"src": "38586:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "38636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1909,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "38640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1900,
														"id": 1911,
														"nodeType": "Return",
														"src": "38629:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "37800:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "38464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "38504:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38490:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38467:50:0"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38540:9:0"
									},
									"scope": 1915,
									"src": "38455:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3840,
							"src": "32254:6409:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1916,
								"nodeType": "StructuredDocumentation",
								"src": "38736:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2243,
							"linearizedBaseContracts": [
								2243
							],
							"name": "Address",
							"nameLocation": "38815:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "40122:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1924,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "40351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40359:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "40351:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40364:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "40351:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40351:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1929,
												"nodeType": "Return",
												"src": "40344:30:0"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "38830:1220:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "40065:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "40084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40076:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40075:17:0"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40115:6:0"
									},
									"scope": 2243,
									"src": "40056:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "41387:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1942,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "41414:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "41406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1940,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "41406:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41406:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "41420:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "41406:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1945,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41406:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41439:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41398:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "41398:73:0"
											},
											{
												"assignments": [
													1951,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1951,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "41490:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "41485:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1950,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "41485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1958,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41533:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1952,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "41503:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41513:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "41503:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1954,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "41503:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41503:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41484:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1960,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "41555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41564:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41547:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "41547:78:0"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "40390:920:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "41325:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "41351:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41335:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41335:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41370:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41362:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41334:43:0"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41387:0:0"
									},
									"scope": 2243,
									"src": "41316:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "42484:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "42524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "42532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42538:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42541:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1975,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42502:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42502:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1974,
												"id": 1981,
												"nodeType": "Return",
												"src": "42495:79:0"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "41641:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42404:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42433:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42416:35:0"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42470:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42469:14:0"
									},
									"scope": 2243,
									"src": "42395:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "42963:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1996,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "43003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "43011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43017:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1999,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "43020:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1995,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42981:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42981:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1994,
												"id": 2001,
												"nodeType": "Return",
												"src": "42974:59:0"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "42590:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42821:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42869:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42869:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42911:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42897:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42833:97:0"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42949:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42948:14:0"
									},
									"scope": 2243,
									"src": "42812:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "43529:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "43569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2017,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "43577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2018,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "43583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43590:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2015,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "43547:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43547:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2021,
												"nodeType": "Return",
												"src": "43540:94:0"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "43049:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43425:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43463:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43446:50:0"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43515:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43515:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43514:14:0"
									},
									"scope": 2243,
									"src": "43416:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "44082:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2040,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "44109:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "44101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2038,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "44101:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44101:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "44115:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "44101:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44126:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44101:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44133:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44093:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "44093:81:0"
											},
											{
												"assignments": [
													2049,
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "44191:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44186:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2048,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "44186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "44213:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44200:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2050,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "44200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"arguments": [
														{
															"id": 2056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "44253:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2052,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "44227:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "44234:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "44227:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "44227:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44227:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44185:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2060,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "44303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2061,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "44311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2062,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "44320:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2063,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "44332:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2059,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "44276:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44276:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2065,
												"nodeType": "Return",
												"src": "44269:76:0"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "43650:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43907:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43947:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43939:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43977:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43964:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "44030:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44016:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "44016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43928:121:0"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44068:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44067:14:0"
									},
									"scope": 2243,
									"src": "43898:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "44638:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2078,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "44675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2079,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "44683:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44689:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2077,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2084,
															2113
														],
														"referencedDeclaration": 2113,
														"src": "44656:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44656:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2076,
												"id": 2082,
												"nodeType": "Return",
												"src": "44649:80:0"
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "44361:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44547:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44595:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44582:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44565:35:0"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44624:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44624:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44623:14:0"
									},
									"scope": 2243,
									"src": "44538:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "45091:171:0",
										"statements": [
											{
												"assignments": [
													2097,
													2099
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "45108:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45103:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2096,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "45103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2099,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "45130:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45117:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2098,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "45117:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2104,
												"initialValue": {
													"arguments": [
														{
															"id": 2102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "45162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45151:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "45144:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45144:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45102:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45212:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "45220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2108,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "45229:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2109,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "45241:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2105,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "45185:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45185:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2095,
												"id": 2111,
												"nodeType": "Return",
												"src": "45178:76:0"
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "44745:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44938:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44992:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45034:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45020:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2090,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44956:97:0"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45077:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45076:14:0"
									},
									"scope": 2243,
									"src": "44929:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "45546:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "45585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "45593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45599:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2123,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2130,
															2159
														],
														"referencedDeclaration": 2159,
														"src": "45564:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45564:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2122,
												"id": 2128,
												"nodeType": "Return",
												"src": "45557:84:0"
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "45270:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45458:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45478:35:0"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45532:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45531:14:0"
									},
									"scope": 2243,
									"src": "45449:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "46002:173:0",
										"statements": [
											{
												"assignments": [
													2143,
													2145
												],
												"declarations": [
													{
														"constant": false,
														"id": 2143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "46019:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46014:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "46014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "46041:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46028:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "46028:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2150,
												"initialValue": {
													"arguments": [
														{
															"id": 2148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "46075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46055:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46062:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "46055:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46055:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46013:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "46133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2154,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "46142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "46154:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2151,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "46098:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46098:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2157,
												"nodeType": "Return",
												"src": "46091:76:0"
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "45657:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45852:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45891:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45883:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45908:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45908:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45950:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45936:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45872:97:0"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45988:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45987:14:0"
									},
									"scope": 2243,
									"src": "45843:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "46670:445:0",
										"statements": [
											{
												"condition": {
													"id": 2173,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2164,
													"src": "46685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "47048:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2191,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "47071:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2192,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "47083:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2190,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47063:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "47063:33:0"
														}
													]
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "46681:427:0",
												"trueBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "46694:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2174,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "46713:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "46724:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "46713:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "46713:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2186,
															"nodeType": "IfStatement",
															"src": "46709:290:0",
															"trueBody": {
																"id": 2185,
																"nodeType": "Block",
																"src": "46737:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2180,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2162,
																							"src": "46942:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2179,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1931,
																						"src": "46931:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "46931:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "46951:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2178,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "46923:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46923:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2184,
																		"nodeType": "ExpressionStatement",
																		"src": "46923:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2187,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "47020:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2188,
															"nodeType": "Return",
															"src": "47013:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "46183:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "46480:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "46525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "46547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46542:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "46542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "46578:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46565:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "46613:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46599:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46506:126:0"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46656:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46655:14:0"
									},
									"scope": 2243,
									"src": "46471:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "47508:141:0",
										"statements": [
											{
												"condition": {
													"id": 2210,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2201,
													"src": "47523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2219,
													"nodeType": "Block",
													"src": "47582:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2215,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "47605:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2216,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "47617:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2214,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47597:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2218,
															"nodeType": "ExpressionStatement",
															"src": "47597:33:0"
														}
													]
												},
												"id": 2220,
												"nodeType": "IfStatement",
												"src": "47519:123:0",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "47532:44:0",
													"statements": [
														{
															"expression": {
																"id": 2211,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "47554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2209,
															"id": 2212,
															"nodeType": "Return",
															"src": "47547:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "47123:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "47353:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "47385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47416:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47403:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47403:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47451:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47437:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47369:101:0"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47494:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47494:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47493:14:0"
									},
									"scope": 2243,
									"src": "47344:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "47740:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2229,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "47818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47829:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47818:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47838:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "47818:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2239,
													"nodeType": "Block",
													"src": "48155:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2236,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2226,
																		"src": "48177:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2235,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "48170:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48170:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2238,
															"nodeType": "ExpressionStatement",
															"src": "48170:20:0"
														}
													]
												},
												"id": 2240,
												"nodeType": "IfStatement",
												"src": "47814:388:0",
												"trueBody": {
													"id": 2234,
													"nodeType": "Block",
													"src": "47841:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "48002:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "48021:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "48050:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "48044:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48044:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "48025:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "48090:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "48094:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "48086:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "48086:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "48107:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "48079:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48079:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "48079:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48050:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48094:10:0",
																	"valueSize": 1
																}
															],
															"id": 2233,
															"nodeType": "InlineAssembly",
															"src": "47993:145:0"
														}
													]
												}
											}
										]
									},
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "47666:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47687:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47674:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47674:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47713:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47699:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47673:53:0"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47740:0:0"
									},
									"scope": 2243,
									"src": "47657:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3840,
							"src": "38807:9405:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2245,
										"name": "Context",
										"nameLocations": [
											"48695:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "48695:7:0"
									},
									"id": 2246,
									"nodeType": "InheritanceSpecifier",
									"src": "48695:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2244,
								"nodeType": "StructuredDocumentation",
								"src": "48216:447:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2332,
							"linearizedBaseContracts": [
								2332,
								21
							],
							"name": "Pausable",
							"nameLocation": "48683:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "48710:75:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2251,
									"name": "Paused",
									"nameLocation": "48797:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "48804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48803:17:0"
									},
									"src": "48791:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "48829:72:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2256,
									"name": "Unpaused",
									"nameLocation": "48913:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "48922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48921:17:0"
									},
									"src": "48907:32:0"
								},
								{
									"constant": false,
									"id": 2258,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "48960:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2332,
									"src": "48947:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2257,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "48947:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "49066:34:0",
										"statements": [
											{
												"expression": {
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2262,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "49077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49087:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "49077:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "49077:15:0"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "48976:69:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2267,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49063:2:0"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49066:0:0"
									},
									"scope": 2332,
									"src": "49051:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "49253:33:0",
										"statements": [
											{
												"expression": {
													"id": 2273,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2258,
													"src": "49271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2272,
												"id": 2274,
												"nodeType": "Return",
												"src": "49264:14:0"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "49108:86:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "49209:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49215:2:0"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "49247:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "49247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49246:6:0"
									},
									"scope": 2332,
									"src": "49200:86:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "49506:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "49525:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2280,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "49526:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49526:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49536:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49517:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "49517:38:0"
											},
											{
												"id": 2286,
												"nodeType": "PlaceholderStatement",
												"src": "49566:1:0"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "49294:181:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2288,
									"name": "whenNotPaused",
									"nameLocation": "49490:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49503:2:0"
									},
									"src": "49481:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "49784:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2292,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "49803:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49803:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49813:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49795:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "49795:41:0"
											},
											{
												"id": 2297,
												"nodeType": "PlaceholderStatement",
												"src": "49847:1:0"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "49583:173:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2299,
									"name": "whenPaused",
									"nameLocation": "49771:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49781:2:0"
									},
									"src": "49762:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "50049:69:0",
										"statements": [
											{
												"expression": {
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2305,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "50060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50070:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "50060:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2308,
												"nodeType": "ExpressionStatement",
												"src": "50060:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2310,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "50097:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50097:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2309,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "50090:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50090:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2313,
												"nodeType": "EmitStatement",
												"src": "50085:25:0"
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "49864:130:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2302,
												"name": "whenNotPaused",
												"nameLocations": [
													"50035:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "50035:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50035:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "50009:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50015:2:0"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50049:0:0"
									},
									"scope": 2332,
									"src": "50000:118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "50307:72:0",
										"statements": [
											{
												"expression": {
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2321,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "50318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "50318:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "50318:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2326,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "50358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50358:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2325,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "50349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50349:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2329,
												"nodeType": "EmitStatement",
												"src": "50344:27:0"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "50126:127:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2318,
												"name": "whenPaused",
												"nameLocations": [
													"50296:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2299,
												"src": "50296:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50296:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "50268:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50276:2:0"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50307:0:0"
									},
									"scope": 2332,
									"src": "50259:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3840,
							"src": "48665:1717:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2333,
										"name": "Ownable",
										"nameLocations": [
											"50410:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "50410:7:0"
									},
									"id": 2334,
									"nodeType": "InheritanceSpecifier",
									"src": "50410:7:0"
								},
								{
									"baseName": {
										"id": 2335,
										"name": "Pausable",
										"nameLocations": [
											"50419:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2332,
										"src": "50419:8:0"
									},
									"id": 2336,
									"nodeType": "InheritanceSpecifier",
									"src": "50419:8:0"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3839,
							"linearizedBaseContracts": [
								3839,
								2332,
								131,
								21
							],
							"name": "Marketplace",
							"nameLocation": "50395:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2339,
									"libraryName": {
										"id": 2337,
										"name": "SafeMath",
										"nameLocations": [
											"50441:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1915,
										"src": "50441:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "50435:27:0",
									"typeName": {
										"id": 2338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "50454:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2343,
									"libraryName": {
										"id": 2340,
										"name": "SafeERC20",
										"nameLocations": [
											"50474:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 441,
										"src": "50474:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "50468:27:0",
									"typeName": {
										"id": 2342,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2341,
											"name": "IERC20",
											"nameLocations": [
												"50488:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 517,
											"src": "50488:6:0"
										},
										"referencedDeclaration": 517,
										"src": "50488:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$517",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "bab4aa6b2d5c0935e0e2937d1f73655848f670d43bf6f0c7e9e11e635bb5d86f",
									"id": 2355,
									"name": "Buy",
									"nameLocation": "50507:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "50534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50526:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50549:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50541:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50569:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50561:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50587:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "50579:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50510:83:0"
									},
									"src": "50501:93:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a3d27cc8ac4e1915b6a89ce3e468d87aeb3caf011a47e236db61d098e452870c",
									"id": 2369,
									"name": "BuyWithERC20",
									"nameLocation": "50606:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50619:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "50642:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50634:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50657:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50649:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50677:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50669:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "50694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50709:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "50701:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50618:97:0"
									},
									"src": "50600:116:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c68dc1f889fa3a215dcdd97178af6bd67fab7b34138eef18f4313aac53f5b364",
									"id": 2379,
									"name": "PutUpForSale",
									"nameLocation": "50728:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50749:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50741:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50764:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50756:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50784:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50776:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50801:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "50793:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50740:67:0"
									},
									"src": "50722:86:0"
								},
								{
									"anonymous": false,
									"eventSelector": "44f716b281fa3e96fbd6ef888a275ef2fdf8914960a4c57c0bef6ccaebf0df31",
									"id": 2391,
									"name": "PutUpForSaleWithERC20",
									"nameLocation": "50820:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50850:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50842:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50865:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50857:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50885:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50877:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "50902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "50909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50841:82:0"
									},
									"src": "50814:110:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cfd975662262e48e8c2b68605e79d409da1b108bdc941f32d355c4cf11d35925",
									"id": 2399,
									"name": "WithdrawFromSale",
									"nameLocation": "50936:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50961:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "50953:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "50976:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "50968:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50996:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "50988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50952:52:0"
									},
									"src": "50930:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2f15b7a52fc8a006876377705647acbd22eed72dec9b154aa290e286c06a3cd4",
									"id": 2405,
									"name": "WithdrawWei",
									"nameLocation": "51017:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51037:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "51029:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "51049:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "51041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51028:28:0"
									},
									"src": "51011:46:0"
								},
								{
									"anonymous": false,
									"eventSelector": "33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb29",
									"id": 2413,
									"name": "WithdrawERC20",
									"nameLocation": "51069:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51091:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "51083:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "51103:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "51095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "51118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "51110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51082:43:0"
									},
									"src": "51063:63:0"
								},
								{
									"canonicalName": "Marketplace.SelledNFT",
									"id": 2426,
									"members": [
										{
											"constant": false,
											"id": 2415,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "51174:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51166:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2414,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51166:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2417,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "51229:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51221:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51221:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2419,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "51277:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51269:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2418,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51269:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2421,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "51326:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51318:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51318:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2423,
											"mutability": "mutable",
											"name": "erc20",
											"nameLocation": "51373:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51365:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2422,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51365:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2425,
											"mutability": "mutable",
											"name": "utx",
											"nameLocation": "51468:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 2426,
											"src": "51460:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2424,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51460:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SelledNFT",
									"nameLocation": "51145:9:0",
									"nodeType": "StructDefinition",
									"scope": 3839,
									"src": "51138:417:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54fd4d50",
									"id": 2429,
									"mutability": "constant",
									"name": "version",
									"nameLocation": "51584:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51563:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2427,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "51563:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "51594:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2432,
									"mutability": "mutable",
									"name": "_tradeFee",
									"nameLocation": "51617:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51604:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2430,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "51604:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "51629:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "51699:30:0",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51717:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2436,
												"id": 2438,
												"nodeType": "Return",
												"src": "51710:11:0"
											}
										]
									},
									"functionSelector": "527f2902",
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMarketPlaceContract",
									"nameLocation": "51648:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51669:2:0"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "51693:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51693:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51692:6:0"
									},
									"scope": 3839,
									"src": "51639:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2444,
									"mutability": "mutable",
									"name": "_marketCollections",
									"nameLocation": "51755:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51737:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
										"typeString": "contract IERC721[]"
									},
									"typeName": {
										"baseType": {
											"id": 2442,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2441,
												"name": "IERC721",
												"nameLocations": [
													"51737:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 638,
												"src": "51737:7:0"
											},
											"referencedDeclaration": 638,
											"src": "51737:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$638",
												"typeString": "contract IERC721"
											}
										},
										"id": 2443,
										"nodeType": "ArrayTypeName",
										"src": "51737:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr",
											"typeString": "contract IERC721[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2448,
									"mutability": "mutable",
									"name": "_allowedCollections",
									"nameLocation": "51813:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51780:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2447,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2445,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51788:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "51780:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2446,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "51799:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2451,
									"mutability": "mutable",
									"name": "_allowedERC20",
									"nameLocation": "51859:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51841:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2449,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51841:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2450,
										"nodeType": "ArrayTypeName",
										"src": "51841:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2455,
									"mutability": "mutable",
									"name": "_marketTokens",
									"nameLocation": "51901:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51881:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
										"typeString": "struct Marketplace.SelledNFT[]"
									},
									"typeName": {
										"baseType": {
											"id": 2453,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2452,
												"name": "SelledNFT",
												"nameLocations": [
													"51881:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2426,
												"src": "51881:9:0"
											},
											"referencedDeclaration": 2426,
											"src": "51881:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
												"typeString": "struct Marketplace.SelledNFT"
											}
										},
										"id": 2454,
										"nodeType": "ArrayTypeName",
										"src": "51881:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
											"typeString": "struct Marketplace.SelledNFT[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2459,
									"mutability": "mutable",
									"name": "_collectionTokensCount",
									"nameLocation": "51959:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51923:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2458,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2456,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51931:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "51923:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2457,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "51942:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2463,
									"mutability": "mutable",
									"name": "_userTokensCount",
									"nameLocation": "52026:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "51990:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2462,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2460,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51998:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "51990:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2461,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "52009:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2469,
									"mutability": "mutable",
									"name": "_userTokensCountByCollections",
									"nameLocation": "52107:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "52051:85:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2468,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2464,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "52059:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "52051:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2467,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2465,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "52078:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "52070:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2466,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "52089:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2471,
									"mutability": "mutable",
									"name": "_feeReceiver",
									"nameLocation": "52161:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3839,
									"src": "52145:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2470,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52145:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "52287:329:0",
										"statements": [
											{
												"body": {
													"id": 2513,
													"nodeType": "Block",
													"src": "52348:240:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2492,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "52386:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2494,
																					"indexExpression": {
																						"id": 2493,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2482,
																						"src": "52400:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "52386:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2495,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "52403:10:0",
																				"memberName": "collection",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2415,
																				"src": "52386:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2496,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2473,
																				"src": "52417:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "52386:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2498,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52385:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2499,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "52467:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2501,
																					"indexExpression": {
																						"id": 2500,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2482,
																						"src": "52481:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "52467:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2502,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "52484:7:0",
																				"memberName": "tokenId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2417,
																				"src": "52467:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2503,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2475,
																				"src": "52495:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "52467:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52466:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "52385:118:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2512,
															"nodeType": "IfStatement",
															"src": "52363:214:0",
															"trueBody": {
																"id": 2511,
																"nodeType": "Block",
																"src": "52519:58:0",
																"statements": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2507,
																				"name": "_marketTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "52545:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																				}
																			},
																			"id": 2509,
																			"indexExpression": {
																				"id": 2508,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2482,
																				"src": "52559:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "52545:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"functionReturnParameters": 2480,
																		"id": 2510,
																		"nodeType": "Return",
																		"src": "52538:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2485,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2482,
														"src": "52317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2486,
															"name": "_marketTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "52321:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
															}
														},
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52335:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52321:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52317:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"initializationExpression": {
													"assignments": [
														2482
													],
													"declarations": [
														{
															"constant": false,
															"id": 2482,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "52310:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2514,
															"src": "52302:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2481,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52302:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2484,
													"initialValue": {
														"hexValue": "30",
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52314:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "52302:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "52343:3:0",
														"subExpression": {
															"id": 2489,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "52343:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2491,
													"nodeType": "ExpressionStatement",
													"src": "52343:3:0"
												},
												"nodeType": "ForStatement",
												"src": "52298:290:0"
											},
											{
												"expression": {
													"id": 2515,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2479,
													"src": "52605:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"functionReturnParameters": 2480,
												"id": 2516,
												"nodeType": "Return",
												"src": "52598:10:0"
											}
										]
									},
									"functionSelector": "6629e913",
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "marketTokensGet",
									"nameLocation": "52191:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "52215:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "52207:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52235:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "52227:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52206:37:0"
									},
									"returnParameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "52282:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "52265:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT"
												},
												"typeName": {
													"id": 2478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2477,
														"name": "SelledNFT",
														"nameLocations": [
															"52265:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2426,
														"src": "52265:9:0"
													},
													"referencedDeclaration": 2426,
													"src": "52265:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52264:22:0"
									},
									"scope": 3839,
									"src": "52182:434:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2529,
										"nodeType": "Block",
										"src": "52707:60:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2525,
														"name": "_collectionTokensCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "52725:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2527,
													"indexExpression": {
														"id": 2526,
														"name": "collection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2520,
														"src": "52748:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "52725:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2524,
												"id": 2528,
												"nodeType": "Return",
												"src": "52718:41:0"
											}
										]
									},
									"functionSelector": "5b4e7add",
									"id": 2530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getColletionTokensCount",
									"nameLocation": "52633:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "52665:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "52657:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52656:20:0"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "52698:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52697:9:0"
									},
									"scope": 3839,
									"src": "52624:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "52874:73:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2539,
															"name": "_userTokensCountByCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2469,
															"src": "52892:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2541,
														"indexExpression": {
															"id": 2540,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2532,
															"src": "52922:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "52892:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2543,
													"indexExpression": {
														"id": 2542,
														"name": "collection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2534,
														"src": "52928:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "52892:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2538,
												"id": 2544,
												"nodeType": "Return",
												"src": "52885:54:0"
											}
										]
									},
									"functionSelector": "c8d8101c",
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCollectionTokensCount",
									"nameLocation": "52782:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "52819:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "52811:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "52833:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "52825:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52810:34:0"
									},
									"returnParameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "52865:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52864:9:0"
									},
									"scope": 3839,
									"src": "52773:174:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Marketplace.CollectionTokenCount",
									"id": 2551,
									"members": [
										{
											"constant": false,
											"id": 2548,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "53006:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 2551,
											"src": "52998:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2547,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "52998:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2550,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "53035:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2551,
											"src": "53027:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2549,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "53027:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectionTokenCount",
									"nameLocation": "52966:20:0",
									"nodeType": "StructDefinition",
									"scope": 3839,
									"src": "52959:89:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2604,
										"nodeType": "Block",
										"src": "53147:357:0",
										"statements": [
											{
												"expression": {
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2558,
														"name": "ret",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "53158:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2563,
																	"name": "_marketCollections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "53191:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																		"typeString": "contract IERC721[] storage ref"
																	}
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "53210:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "53191:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "53164:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct Marketplace.CollectionTokenCount memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2560,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2559,
																		"name": "CollectionTokenCount",
																		"nameLocations": [
																			"53168:20:0"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2551,
																		"src": "53168:20:0"
																	},
																	"referencedDeclaration": 2551,
																	"src": "53168:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_storage_ptr",
																		"typeString": "struct Marketplace.CollectionTokenCount"
																	}
																},
																"id": 2561,
																"nodeType": "ArrayTypeName",
																"src": "53168:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_storage_$dyn_storage_ptr",
																	"typeString": "struct Marketplace.CollectionTokenCount[]"
																}
															}
														},
														"id": 2565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53164:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
														}
													},
													"src": "53158:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
													}
												},
												"id": 2567,
												"nodeType": "ExpressionStatement",
												"src": "53158:59:0"
											},
											{
												"body": {
													"id": 2600,
													"nodeType": "Block",
													"src": "53283:193:0",
													"statements": [
														{
															"expression": {
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2579,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2556,
																		"src": "53298:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
																		}
																	},
																	"id": 2581,
																	"indexExpression": {
																		"id": 2580,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "53302:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "53298:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_memory_ptr",
																		"typeString": "struct Marketplace.CollectionTokenCount memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 2585,
																						"name": "_marketCollections",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2444,
																						"src": "53354:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																							"typeString": "contract IERC721[] storage ref"
																						}
																					},
																					"id": 2587,
																					"indexExpression": {
																						"id": 2586,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2569,
																						"src": "53373:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "53354:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$638",
																						"typeString": "contract IERC721"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC721_$638",
																						"typeString": "contract IERC721"
																					}
																				],
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "53346:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2583,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "53346:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53346:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 2589,
																				"name": "_collectionTokensCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2459,
																				"src": "53395:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2596,
																			"indexExpression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 2592,
																							"name": "_marketCollections",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2444,
																							"src": "53426:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																								"typeString": "contract IERC721[] storage ref"
																							}
																						},
																						"id": 2594,
																						"indexExpression": {
																							"id": 2593,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2569,
																							"src": "53445:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "53426:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC721_$638",
																							"typeString": "contract IERC721"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC721_$638",
																							"typeString": "contract IERC721"
																						}
																					],
																					"id": 2591,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "53418:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2590,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "53418:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "53418:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "53395:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2582,
																		"name": "CollectionTokenCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2551,
																		"src": "53307:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_CollectionTokenCount_$2551_storage_ptr_$",
																			"typeString": "type(struct Marketplace.CollectionTokenCount storage pointer)"
																		}
																	},
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "53307:157:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_memory_ptr",
																		"typeString": "struct Marketplace.CollectionTokenCount memory"
																	}
																},
																"src": "53298:166:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_memory_ptr",
																	"typeString": "struct Marketplace.CollectionTokenCount memory"
																}
															},
															"id": 2599,
															"nodeType": "ExpressionStatement",
															"src": "53298:166:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2572,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "53247:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2573,
															"name": "_marketCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "53251:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53270:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "53251:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53247:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2601,
												"initializationExpression": {
													"assignments": [
														2569
													],
													"declarations": [
														{
															"constant": false,
															"id": 2569,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "53240:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2601,
															"src": "53232:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2568,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2571,
													"initialValue": {
														"hexValue": "30",
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53244:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53232:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53278:3:0",
														"subExpression": {
															"id": 2576,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "53278:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2578,
													"nodeType": "ExpressionStatement",
													"src": "53278:3:0"
												},
												"nodeType": "ForStatement",
												"src": "53228:248:0"
											},
											{
												"expression": {
													"id": 2602,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2556,
													"src": "53493:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
													}
												},
												"functionReturnParameters": 2557,
												"id": 2603,
												"nodeType": "Return",
												"src": "53486:10:0"
											}
										]
									},
									"functionSelector": "a7c9197a",
									"id": 2605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectionsTokensCount",
									"nameLocation": "53063:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53088:2:0"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "53142:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "53112:33:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.CollectionTokenCount[]"
												},
												"typeName": {
													"baseType": {
														"id": 2554,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2553,
															"name": "CollectionTokenCount",
															"nameLocations": [
																"53112:20:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2551,
															"src": "53112:20:0"
														},
														"referencedDeclaration": 2551,
														"src": "53112:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_storage_ptr",
															"typeString": "struct Marketplace.CollectionTokenCount"
														}
													},
													"id": 2555,
													"nodeType": "ArrayTypeName",
													"src": "53112:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.CollectionTokenCount[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53111:35:0"
									},
									"scope": 3839,
									"src": "53054:450:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "53617:370:0",
										"statements": [
											{
												"expression": {
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2614,
														"name": "ret",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "53628:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2619,
																	"name": "_marketCollections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "53661:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																		"typeString": "contract IERC721[] storage ref"
																	}
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "53680:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "53661:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "53634:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct Marketplace.CollectionTokenCount memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2616,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2615,
																		"name": "CollectionTokenCount",
																		"nameLocations": [
																			"53638:20:0"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2551,
																		"src": "53638:20:0"
																	},
																	"referencedDeclaration": 2551,
																	"src": "53638:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_storage_ptr",
																		"typeString": "struct Marketplace.CollectionTokenCount"
																	}
																},
																"id": 2617,
																"nodeType": "ArrayTypeName",
																"src": "53638:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_storage_$dyn_storage_ptr",
																	"typeString": "struct Marketplace.CollectionTokenCount[]"
																}
															}
														},
														"id": 2621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53634:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
														}
													},
													"src": "53628:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
													}
												},
												"id": 2623,
												"nodeType": "ExpressionStatement",
												"src": "53628:59:0"
											},
											{
												"body": {
													"id": 2658,
													"nodeType": "Block",
													"src": "53753:206:0",
													"statements": [
														{
															"expression": {
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2635,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "53768:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
																		}
																	},
																	"id": 2637,
																	"indexExpression": {
																		"id": 2636,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2625,
																		"src": "53772:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "53768:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_memory_ptr",
																		"typeString": "struct Marketplace.CollectionTokenCount memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 2641,
																						"name": "_marketCollections",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2444,
																						"src": "53824:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																							"typeString": "contract IERC721[] storage ref"
																						}
																					},
																					"id": 2643,
																					"indexExpression": {
																						"id": 2642,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "53843:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "53824:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$638",
																						"typeString": "contract IERC721"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC721_$638",
																						"typeString": "contract IERC721"
																					}
																				],
																				"id": 2640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "53816:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2639,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "53816:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53816:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2645,
																					"name": "_userTokensCountByCollections",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2469,
																					"src": "53865:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 2647,
																				"indexExpression": {
																					"id": 2646,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2607,
																					"src": "53895:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "53865:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2654,
																			"indexExpression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 2650,
																							"name": "_marketCollections",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2444,
																							"src": "53909:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																								"typeString": "contract IERC721[] storage ref"
																							}
																						},
																						"id": 2652,
																						"indexExpression": {
																							"id": 2651,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "53928:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "53909:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC721_$638",
																							"typeString": "contract IERC721"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC721_$638",
																							"typeString": "contract IERC721"
																						}
																					],
																					"id": 2649,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "53901:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2648,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "53901:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "53901:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "53865:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2638,
																		"name": "CollectionTokenCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2551,
																		"src": "53777:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_CollectionTokenCount_$2551_storage_ptr_$",
																			"typeString": "type(struct Marketplace.CollectionTokenCount storage pointer)"
																		}
																	},
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "53777:170:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_memory_ptr",
																		"typeString": "struct Marketplace.CollectionTokenCount memory"
																	}
																},
																"src": "53768:179:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_memory_ptr",
																	"typeString": "struct Marketplace.CollectionTokenCount memory"
																}
															},
															"id": 2657,
															"nodeType": "ExpressionStatement",
															"src": "53768:179:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2628,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2625,
														"src": "53717:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2629,
															"name": "_marketCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "53721:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 2630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53740:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "53721:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53717:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2659,
												"initializationExpression": {
													"assignments": [
														2625
													],
													"declarations": [
														{
															"constant": false,
															"id": 2625,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "53710:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2659,
															"src": "53702:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2624,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2627,
													"initialValue": {
														"hexValue": "30",
														"id": 2626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53714:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53702:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53748:3:0",
														"subExpression": {
															"id": 2632,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "53748:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2634,
													"nodeType": "ExpressionStatement",
													"src": "53748:3:0"
												},
												"nodeType": "ForStatement",
												"src": "53698:261:0"
											},
											{
												"expression": {
													"id": 2660,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2612,
													"src": "53976:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.CollectionTokenCount memory[] memory"
													}
												},
												"functionReturnParameters": 2613,
												"id": 2661,
												"nodeType": "Return",
												"src": "53969:10:0"
											}
										]
									},
									"functionSelector": "3eac63ed",
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCollectionsTokenCount",
									"nameLocation": "53519:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "53556:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "53548:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53547:14:0"
									},
									"returnParameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "53612:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "53582:33:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.CollectionTokenCount[]"
												},
												"typeName": {
													"baseType": {
														"id": 2610,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2609,
															"name": "CollectionTokenCount",
															"nameLocations": [
																"53582:20:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2551,
															"src": "53582:20:0"
														},
														"referencedDeclaration": 2551,
														"src": "53582:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionTokenCount_$2551_storage_ptr",
															"typeString": "struct Marketplace.CollectionTokenCount"
														}
													},
													"id": 2611,
													"nodeType": "ArrayTypeName",
													"src": "53582:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_CollectionTokenCount_$2551_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.CollectionTokenCount[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53581:35:0"
									},
									"scope": 3839,
									"src": "53510:477:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2696,
										"nodeType": "Block",
										"src": "54056:224:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2672,
															"name": "lotInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "54086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														],
														"expression": {
															"id": 2669,
															"name": "_marketTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "54067:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
															}
														},
														"id": 2671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54081:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "54067:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$_t_struct$_SelledNFT_$2426_storage_$returns$__$attached_to$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Marketplace.SelledNFT storage ref[] storage pointer,struct Marketplace.SelledNFT storage ref)"
														}
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54067:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2674,
												"nodeType": "ExpressionStatement",
												"src": "54067:27:0"
											},
											{
												"expression": {
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "54105:44:0",
													"subExpression": {
														"baseExpression": {
															"id": 2675,
															"name": "_collectionTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "54105:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2678,
														"indexExpression": {
															"expression": {
																"id": 2676,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "54128:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 2677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54136:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "54128:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54105:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2680,
												"nodeType": "ExpressionStatement",
												"src": "54105:44:0"
											},
											{
												"expression": {
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "54160:34:0",
													"subExpression": {
														"baseExpression": {
															"id": 2681,
															"name": "_userTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "54160:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2684,
														"indexExpression": {
															"expression": {
																"id": 2682,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "54177:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54185:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "54177:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54160:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "54160:34:0"
											},
											{
												"expression": {
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "54205:67:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2687,
																"name": "_userTokensCountByCollections",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2469,
																"src": "54205:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2692,
															"indexExpression": {
																"expression": {
																	"id": 2688,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2666,
																	"src": "54235:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 2689,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "54243:6:0",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2419,
																"src": "54235:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54205:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2693,
														"indexExpression": {
															"expression": {
																"id": 2690,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "54251:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 2691,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54259:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "54251:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54205:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2695,
												"nodeType": "ExpressionStatement",
												"src": "54205:67:0"
											}
										]
									},
									"id": 2697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_marketTokensAdd",
									"nameLocation": "54004:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "lotInfo",
												"nameLocation": "54038:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "54021:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT"
												},
												"typeName": {
													"id": 2665,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2664,
														"name": "SelledNFT",
														"nameLocations": [
															"54021:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2426,
														"src": "54021:9:0"
													},
													"referencedDeclaration": 2426,
													"src": "54021:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54020:26:0"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54056:0:0"
									},
									"scope": 3839,
									"src": "53995:285:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "54358:1105:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2704,
																			"name": "_marketTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2455,
																			"src": "54388:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																			}
																		},
																		"id": 2709,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2705,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "54402:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "54416:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "54402:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54425:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "54402:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "54388:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54428:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "54388:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2711,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "54442:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "54388:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2713,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "54387:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2714,
																			"name": "_marketTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2455,
																			"src": "54484:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																			}
																		},
																		"id": 2719,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2715,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "54498:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "54512:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "54498:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54521:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "54498:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "54484:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54524:7:0",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2417,
																	"src": "54484:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2721,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2701,
																	"src": "54535:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54484:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2723,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "54483:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54387:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2760,
												"nodeType": "IfStatement",
												"src": "54369:468:0",
												"trueBody": {
													"id": 2759,
													"nodeType": "Block",
													"src": "54555:282:0",
													"statements": [
														{
															"expression": {
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "54570:65:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 2725,
																		"name": "_userTokensCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2463,
																		"src": "54570:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2733,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2726,
																				"name": "_marketTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "54587:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																				}
																			},
																			"id": 2731,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2727,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "54601:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "54615:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "54601:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "54623:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "54601:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "54587:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "54626:6:0",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2419,
																		"src": "54587:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "54570:63:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2735,
															"nodeType": "ExpressionStatement",
															"src": "54570:65:0"
														},
														{
															"expression": {
																"id": 2747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "54650:90:0",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2736,
																			"name": "_userTokensCountByCollections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2469,
																			"src": "54650:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2745,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 2737,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "54680:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2742,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2738,
																							"name": "_marketTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2455,
																							"src": "54694:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																							}
																						},
																						"id": 2739,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "54708:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "54694:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2740,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "54716:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "54694:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "54680:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref"
																				}
																			},
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "54719:6:0",
																			"memberName": "seller",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2419,
																			"src": "54680:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "54650:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2746,
																	"indexExpression": {
																		"id": 2744,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2699,
																		"src": "54727:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "54650:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2748,
															"nodeType": "ExpressionStatement",
															"src": "54650:90:0"
														},
														{
															"expression": {
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "54755:36:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 2749,
																		"name": "_collectionTokensCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2459,
																		"src": "54755:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2751,
																	"indexExpression": {
																		"id": 2750,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2699,
																		"src": "54778:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "54755:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2753,
															"nodeType": "ExpressionStatement",
															"src": "54755:36:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2754,
																		"name": "_marketTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2455,
																		"src": "54806:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54820:3:0",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "54806:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Marketplace.SelledNFT storage ref[] storage pointer)"
																	}
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54806:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2758,
															"nodeType": "ExpressionStatement",
															"src": "54806:19:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 2829,
													"nodeType": "Block",
													"src": "54897:559:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2772,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "54935:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2774,
																					"indexExpression": {
																						"id": 2773,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2762,
																						"src": "54949:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "54935:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2775,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "54952:10:0",
																				"memberName": "collection",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2415,
																				"src": "54935:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2776,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2699,
																				"src": "54966:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "54935:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2778,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "54934:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 2779,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "55016:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 2781,
																					"indexExpression": {
																						"id": 2780,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2762,
																						"src": "55030:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "55016:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 2782,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "55033:7:0",
																				"memberName": "tokenId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2417,
																				"src": "55016:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2783,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2701,
																				"src": "55044:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "55016:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2785,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "55015:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "54934:118:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2828,
															"nodeType": "IfStatement",
															"src": "54912:533:0",
															"trueBody": {
																"id": 2827,
																"nodeType": "Block",
																"src": "55068:377:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "55087:43:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 2787,
																					"name": "_userTokensCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2463,
																					"src": "55087:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2792,
																				"indexExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 2788,
																							"name": "_marketTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2455,
																							"src": "55104:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																							}
																						},
																						"id": 2790,
																						"indexExpression": {
																							"id": 2789,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2762,
																							"src": "55118:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "55104:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref"
																						}
																					},
																					"id": 2791,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "55121:6:0",
																					"memberName": "seller",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2419,
																					"src": "55104:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "55087:41:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2794,
																		"nodeType": "ExpressionStatement",
																		"src": "55087:43:0"
																	},
																	{
																		"expression": {
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "55149:68:0",
																			"subExpression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 2795,
																						"name": "_userTokensCountByCollections",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2469,
																						"src": "55149:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(address => uint256))"
																						}
																					},
																					"id": 2801,
																					"indexExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 2796,
																								"name": "_marketTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2455,
																								"src": "55179:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																									"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																								}
																							},
																							"id": 2798,
																							"indexExpression": {
																								"id": 2797,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2762,
																								"src": "55193:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "55179:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref"
																							}
																						},
																						"id": 2799,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "55196:6:0",
																						"memberName": "seller",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2419,
																						"src": "55179:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "55149:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2802,
																				"indexExpression": {
																					"id": 2800,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2699,
																					"src": "55204:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "55149:66:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2804,
																		"nodeType": "ExpressionStatement",
																		"src": "55149:68:0"
																	},
																	{
																		"expression": {
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "55236:36:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 2805,
																					"name": "_collectionTokensCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2459,
																					"src": "55236:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2807,
																				"indexExpression": {
																					"id": 2806,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2699,
																					"src": "55259:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "55236:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2809,
																		"nodeType": "ExpressionStatement",
																		"src": "55236:36:0"
																	},
																	{
																		"expression": {
																			"id": 2819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2810,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "55291:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2812,
																				"indexExpression": {
																					"id": 2811,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2762,
																					"src": "55305:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "55291:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2813,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "55310:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2818,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2817,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2814,
																							"name": "_marketTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2455,
																							"src": "55324:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																							}
																						},
																						"id": 2815,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "55338:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "55324:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2816,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55346:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "55324:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "55310:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref"
																				}
																			},
																			"src": "55291:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 2820,
																		"nodeType": "ExpressionStatement",
																		"src": "55291:57:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2821,
																					"name": "_marketTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "55367:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																					}
																				},
																				"id": 2823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "55381:3:0",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "55367:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr_$",
																					"typeString": "function (struct Marketplace.SelledNFT storage ref[] storage pointer)"
																				}
																			},
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "55367:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2825,
																		"nodeType": "ExpressionStatement",
																		"src": "55367:19:0"
																	},
																	{
																		"functionReturnParameters": 2703,
																		"id": 2826,
																		"nodeType": "Return",
																		"src": "55423:7:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2765,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "54866:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2766,
															"name": "_marketTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "54870:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
															}
														},
														"id": 2767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54884:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54870:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54866:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2830,
												"initializationExpression": {
													"assignments": [
														2762
													],
													"declarations": [
														{
															"constant": false,
															"id": 2762,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "54859:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2830,
															"src": "54851:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2761,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54851:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2764,
													"initialValue": {
														"hexValue": "30",
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54863:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "54851:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "54892:3:0",
														"subExpression": {
															"id": 2769,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "54892:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2771,
													"nodeType": "ExpressionStatement",
													"src": "54892:3:0"
												},
												"nodeType": "ForStatement",
												"src": "54847:609:0"
											}
										]
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_marketTokensDel",
									"nameLocation": "54295:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "54320:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "54312:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "54332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54311:37:0"
									},
									"returnParameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54358:0:0"
									},
									"scope": 3839,
									"src": "54286:1177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "55639:359:0",
										"statements": [
											{
												"body": {
													"id": 2874,
													"nodeType": "Block",
													"src": "55697:136:0",
													"statements": [
														{
															"expression": {
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2856,
																		"name": "_allowedCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "55712:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2860,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2857,
																			"name": "__collections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "55732:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2859,
																		"indexExpression": {
																			"id": 2858,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2846,
																			"src": "55746:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "55732:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "55712:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55752:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "55712:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2863,
															"nodeType": "ExpressionStatement",
															"src": "55712:44:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 2868,
																					"name": "__collections",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2835,
																					"src": "55803:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2870,
																				"indexExpression": {
																					"id": 2869,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2846,
																					"src": "55817:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "55803:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2867,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "55795:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 2871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55795:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	],
																	"expression": {
																		"id": 2864,
																		"name": "_marketCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2444,
																		"src": "55771:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																			"typeString": "contract IERC721[] storage ref"
																		}
																	},
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55790:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "55771:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$_t_contract$_IERC721_$638_$returns$__$attached_to$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$",
																		"typeString": "function (contract IERC721[] storage pointer,contract IERC721)"
																	}
																},
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55771:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2873,
															"nodeType": "ExpressionStatement",
															"src": "55771:50:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2849,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "55666:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2850,
															"name": "__collections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "55670:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55684:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55670:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55666:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2875,
												"initializationExpression": {
													"assignments": [
														2846
													],
													"declarations": [
														{
															"constant": false,
															"id": 2846,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "55659:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2875,
															"src": "55654:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2845,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "55654:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2848,
													"initialValue": {
														"hexValue": "30",
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "55654:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "55692:3:0",
														"subExpression": {
															"id": 2853,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2846,
															"src": "55692:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2855,
													"nodeType": "ExpressionStatement",
													"src": "55692:3:0"
												},
												"nodeType": "ForStatement",
												"src": "55650:183:0"
											},
											{
												"expression": {
													"id": 2888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2876,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "55843:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2877,
																		"name": "__feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2837,
																		"src": "55859:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "55884:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "55876:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2878,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "55876:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55876:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "55859:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2883,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "55858:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 2886,
															"name": "__feeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "55903:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "55858:58:0",
														"trueExpression": {
															"expression": {
																"id": 2884,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55890:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55894:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55890:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55843:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2889,
												"nodeType": "ExpressionStatement",
												"src": "55843:73:0"
											},
											{
												"expression": {
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2890,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "55927:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2891,
														"name": "__tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "55939:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55927:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2893,
												"nodeType": "ExpressionStatement",
												"src": "55927:22:0"
											},
											{
												"expression": {
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2894,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "55960:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2895,
														"name": "__allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2842,
														"src": "55976:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "55960:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2897,
												"nodeType": "ExpressionStatement",
												"src": "55960:30:0"
											}
										]
									},
									"id": 2899,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "__collections",
												"nameLocation": "55518:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "55501:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2833,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "55501:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2834,
													"nodeType": "ArrayTypeName",
													"src": "55501:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "__feeReceiver",
												"nameLocation": "55550:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "55542:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "__tradeFee",
												"nameLocation": "55579:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "55574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "55574:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "__allowedERC20",
												"nameLocation": "55617:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "55600:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2840,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "55600:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2841,
													"nodeType": "ArrayTypeName",
													"src": "55600:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55490:148:0"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55639:0:0"
									},
									"scope": 3839,
									"src": "55479:519:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2906,
										"nodeType": "Block",
										"src": "56061:38:0",
										"statements": [
											{
												"expression": {
													"id": 2904,
													"name": "_feeReceiver",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2471,
													"src": "56079:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2903,
												"id": 2905,
												"nodeType": "Return",
												"src": "56072:19:0"
											}
										]
									},
									"functionSelector": "e8a35392",
									"id": 2907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeReceiver",
									"nameLocation": "56015:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56029:2:0"
									},
									"returnParameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "56052:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56051:9:0"
									},
									"scope": 3839,
									"src": "56006:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2918,
										"nodeType": "Block",
										"src": "56171:49:0",
										"statements": [
											{
												"expression": {
													"id": 2916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2914,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "56182:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2915,
														"name": "_newFeeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2909,
														"src": "56197:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "56182:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2917,
												"nodeType": "ExpressionStatement",
												"src": "56182:30:0"
											}
										]
									},
									"functionSelector": "efdcd974",
									"id": 2919,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2912,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2911,
												"name": "onlyOwner",
												"nameLocations": [
													"56161:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "56161:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56161:9:0"
										}
									],
									"name": "setFeeReceiver",
									"nameLocation": "56114:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "_newFeeReceiver",
												"nameLocation": "56137:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "56129:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56128:25:0"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56171:0:0"
									},
									"scope": 3839,
									"src": "56105:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2928,
										"nodeType": "Block",
										"src": "56299:44:0",
										"statements": [
											{
												"expression": {
													"id": 2926,
													"name": "_marketCollections",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2444,
													"src": "56317:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
														"typeString": "contract IERC721[] storage ref"
													}
												},
												"functionReturnParameters": 2925,
												"id": 2927,
												"nodeType": "Return",
												"src": "56310:25:0"
											}
										]
									},
									"functionSelector": "3a51f383",
									"id": 2929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowedCollections",
									"nameLocation": "56237:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56258:2:0"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "56281:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 2922,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2921,
															"name": "IERC721",
															"nameLocations": [
																"56281:7:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 638,
															"src": "56281:7:0"
														},
														"referencedDeclaration": 638,
														"src": "56281:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"id": 2923,
													"nodeType": "ArrayTypeName",
													"src": "56281:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56280:18:0"
									},
									"scope": 3839,
									"src": "56228:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "56431:397:0",
										"statements": [
											{
												"body": {
													"id": 2959,
													"nodeType": "Block",
													"src": "56497:86:0",
													"statements": [
														{
															"expression": {
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2948,
																		"name": "_allowedCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "56512:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2955,
																	"indexExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 2951,
																					"name": "_marketCollections",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2444,
																					"src": "56540:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																						"typeString": "contract IERC721[] storage ref"
																					}
																				},
																				"id": 2953,
																				"indexExpression": {
																					"id": 2952,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2938,
																					"src": "56559:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "56540:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC721_$638",
																					"typeString": "contract IERC721"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC721_$638",
																					"typeString": "contract IERC721"
																				}
																			],
																			"id": 2950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "56532:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2949,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "56532:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56532:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "56512:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56566:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "56512:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2958,
															"nodeType": "ExpressionStatement",
															"src": "56512:59:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2941,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2938,
														"src": "56461:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2942,
															"name": "_marketCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "56465:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56484:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "56465:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56461:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2960,
												"initializationExpression": {
													"assignments": [
														2938
													],
													"declarations": [
														{
															"constant": false,
															"id": 2938,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "56454:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2960,
															"src": "56446:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2937,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "56446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2940,
													"initialValue": {
														"hexValue": "30",
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56458:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "56446:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "56492:3:0",
														"subExpression": {
															"id": 2945,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "56492:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2947,
													"nodeType": "ExpressionStatement",
													"src": "56492:3:0"
												},
												"nodeType": "ForStatement",
												"src": "56442:141:0"
											},
											{
												"expression": {
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "56593:25:0",
													"subExpression": {
														"id": 2961,
														"name": "_marketCollections",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "56600:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
															"typeString": "contract IERC721[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2963,
												"nodeType": "ExpressionStatement",
												"src": "56593:25:0"
											},
											{
												"body": {
													"id": 2993,
													"nodeType": "Block",
													"src": "56681:140:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 2979,
																					"name": "_newCollections",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2932,
																					"src": "56728:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2981,
																				"indexExpression": {
																					"id": 2980,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2965,
																					"src": "56744:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "56728:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2978,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "56720:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56720:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	],
																	"expression": {
																		"id": 2975,
																		"name": "_marketCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2444,
																		"src": "56696:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IERC721_$638_$dyn_storage",
																			"typeString": "contract IERC721[] storage ref"
																		}
																	},
																	"id": 2977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56715:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "56696:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$_t_contract$_IERC721_$638_$returns$__$attached_to$_t_array$_t_contract$_IERC721_$638_$dyn_storage_ptr_$",
																		"typeString": "function (contract IERC721[] storage pointer,contract IERC721)"
																	}
																},
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56696:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2984,
															"nodeType": "ExpressionStatement",
															"src": "56696:52:0"
														},
														{
															"expression": {
																"id": 2991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2985,
																		"name": "_allowedCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "56763:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2989,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2986,
																			"name": "_newCollections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "56783:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2988,
																		"indexExpression": {
																			"id": 2987,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2965,
																			"src": "56799:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "56783:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "56763:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56805:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "56763:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2992,
															"nodeType": "ExpressionStatement",
															"src": "56763:46:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2968,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "56648:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2969,
															"name": "_newCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "56652:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56668:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "56652:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56648:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2994,
												"initializationExpression": {
													"assignments": [
														2965
													],
													"declarations": [
														{
															"constant": false,
															"id": 2965,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "56641:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2994,
															"src": "56633:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2964,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "56633:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2967,
													"initialValue": {
														"hexValue": "30",
														"id": 2966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56645:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "56633:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "56676:3:0",
														"subExpression": {
															"id": 2972,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2965,
															"src": "56676:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2974,
													"nodeType": "ExpressionStatement",
													"src": "56676:3:0"
												},
												"nodeType": "ForStatement",
												"src": "56629:192:0"
											}
										]
									},
									"functionSelector": "27713536",
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2934,
												"name": "onlyOwner",
												"nameLocations": [
													"56421:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "56421:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56421:9:0"
										}
									],
									"name": "setAllowedCollections",
									"nameLocation": "56358:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "_newCollections",
												"nameLocation": "56397:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "56380:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2930,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "56380:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2931,
													"nodeType": "ArrayTypeName",
													"src": "56380:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56379:34:0"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56431:0:0"
									},
									"scope": 3839,
									"src": "56349:479:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "56914:50:0",
										"statements": [
											{
												"expression": {
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3004,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "56925:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3005,
														"name": "newAllowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "56941:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "56925:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 3007,
												"nodeType": "ExpressionStatement",
												"src": "56925:31:0"
											}
										]
									},
									"functionSelector": "e9e4e160",
									"id": 3009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3001,
												"name": "onlyOwner",
												"nameLocations": [
													"56904:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "56904:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56904:9:0"
										}
									],
									"name": "setAllowedERC20",
									"nameLocation": "56847:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "newAllowedERC20",
												"nameLocation": "56880:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "56863:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2997,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "56863:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2998,
													"nodeType": "ArrayTypeName",
													"src": "56863:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56862:34:0"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56914:0:0"
									},
									"scope": 3839,
									"src": "56838:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3017,
										"nodeType": "Block",
										"src": "57041:39:0",
										"statements": [
											{
												"expression": {
													"id": 3015,
													"name": "_allowedERC20",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2451,
													"src": "57059:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 3014,
												"id": 3016,
												"nodeType": "Return",
												"src": "57052:20:0"
											}
										]
									},
									"functionSelector": "69c57352",
									"id": 3018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowedERC20",
									"nameLocation": "56985:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57000:2:0"
									},
									"returnParameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "57023:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3011,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "57023:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3012,
													"nodeType": "ArrayTypeName",
													"src": "57023:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57022:18:0"
									},
									"scope": 3839,
									"src": "56976:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3048,
										"nodeType": "Block",
										"src": "57154:152:0",
										"statements": [
											{
												"body": {
													"id": 3044,
													"nodeType": "Block",
													"src": "57207:69:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3036,
																	"name": "erc20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "57226:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3037,
																		"name": "_allowedERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2451,
																		"src": "57235:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 3039,
																	"indexExpression": {
																		"id": 3038,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3026,
																		"src": "57249:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "57235:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "57226:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3043,
															"nodeType": "IfStatement",
															"src": "57222:42:0",
															"trueBody": {
																"expression": {
																	"hexValue": "74727565",
																	"id": 3041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57260:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 3024,
																"id": 3042,
																"nodeType": "Return",
																"src": "57253:11:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3029,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3026,
														"src": "57179:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3030,
															"name": "_allowedERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2451,
															"src": "57181:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57195:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "57181:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57179:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3045,
												"initializationExpression": {
													"assignments": [
														3026
													],
													"declarations": [
														{
															"constant": false,
															"id": 3026,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "57174:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3045,
															"src": "57169:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3025,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "57169:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3028,
													"initialValue": {
														"hexValue": "30",
														"id": 3027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "57169:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "57202:3:0",
														"subExpression": {
															"id": 3033,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3026,
															"src": "57202:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3035,
													"nodeType": "ExpressionStatement",
													"src": "57202:3:0"
												},
												"nodeType": "ForStatement",
												"src": "57165:111:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "57293:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 3024,
												"id": 3047,
												"nodeType": "Return",
												"src": "57286:12:0"
											}
										]
									},
									"functionSelector": "785fa7ce",
									"id": 3049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllowedERC20",
									"nameLocation": "57097:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "57120:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "57112:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57111:15:0"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "57148:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "57148:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57147:6:0"
									},
									"scope": 3839,
									"src": "57088:218:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3077,
										"nodeType": "Block",
										"src": "57354:151:0",
										"statements": [
											{
												"assignments": [
													3055
												],
												"declarations": [
													{
														"constant": false,
														"id": 3055,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "57373:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3077,
														"src": "57365:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3054,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3061,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 3058,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "57390:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Marketplace_$3839",
																	"typeString": "contract Marketplace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Marketplace_$3839",
																	"typeString": "contract Marketplace"
																}
															],
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "57382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3056,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "57382:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57382:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "57396:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "57382:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57365:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3068,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3055,
															"src": "57443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3064,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "57422:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57426:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "57422:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57414:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3062,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57414:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57414:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57434:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "57414:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57414:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3070,
												"nodeType": "ExpressionStatement",
												"src": "57414:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57478:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57482:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57478:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3074,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3055,
															"src": "57490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3071,
														"name": "WithdrawWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "57466:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57466:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3076,
												"nodeType": "EmitStatement",
												"src": "57461:36:0"
											}
										]
									},
									"functionSelector": "5211ac2e",
									"id": 3078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3052,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3051,
												"name": "onlyOwner",
												"nameLocations": [
													"57344:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "57344:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57344:9:0"
										}
									],
									"name": "withdrawWei",
									"nameLocation": "57323:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57334:2:0"
									},
									"returnParameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57354:0:0"
									},
									"scope": 3839,
									"src": "57314:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3117,
										"nodeType": "Block",
										"src": "57568:206:0",
										"statements": [
											{
												"assignments": [
													3087
												],
												"declarations": [
													{
														"constant": false,
														"id": 3087,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "57586:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3117,
														"src": "57579:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 3086,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3085,
																"name": "IERC20",
																"nameLocations": [
																	"57579:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "57579:6:0"
															},
															"referencedDeclaration": 517,
															"src": "57579:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3091,
												"initialValue": {
													"arguments": [
														{
															"id": 3089,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3080,
															"src": "57601:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3088,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "57594:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57594:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57579:28:0"
											},
											{
												"assignments": [
													3093
												],
												"declarations": [
													{
														"constant": false,
														"id": 3093,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "57626:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3117,
														"src": "57618:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3101,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3098,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "57660:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3096,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57652:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57652:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3094,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3087,
															"src": "57636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57642:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "57636:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57636:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57618:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3105,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "57692:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57692:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3107,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3093,
															"src": "57701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3102,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3087,
															"src": "57677:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57683:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "57677:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57677:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3109,
												"nodeType": "ExpressionStatement",
												"src": "57677:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57739:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57743:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57739:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3113,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3080,
															"src": "57751:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3114,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3093,
															"src": "57758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3110,
														"name": "WithdrawERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "57725:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57725:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3116,
												"nodeType": "EmitStatement",
												"src": "57720:46:0"
											}
										]
									},
									"functionSelector": "f4f3b200",
									"id": 3118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3082,
												"name": "onlyOwner",
												"nameLocations": [
													"57558:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "57558:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57558:9:0"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "57522:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "57544:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3118,
												"src": "57536:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57535:15:0"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57568:0:0"
									},
									"scope": 3839,
									"src": "57513:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3125,
										"nodeType": "Block",
										"src": "57832:35:0",
										"statements": [
											{
												"expression": {
													"id": 3123,
													"name": "_tradeFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2432,
													"src": "57850:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3122,
												"id": 3124,
												"nodeType": "Return",
												"src": "57843:16:0"
											}
										]
									},
									"functionSelector": "952977f5",
									"id": 3126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTradeFee",
									"nameLocation": "57791:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57802:2:0"
									},
									"returnParameters": {
										"id": 3122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "57826:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "57826:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57825:6:0"
									},
									"scope": 3839,
									"src": "57782:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "57930:43:0",
										"statements": [
											{
												"expression": {
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3133,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "57941:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3134,
														"name": "_newTradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "57953:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57941:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "57941:24:0"
											}
										]
									},
									"functionSelector": "10603023",
									"id": 3138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3130,
												"name": "onlyOwner",
												"nameLocations": [
													"57920:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "57920:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57920:9:0"
										}
									],
									"name": "setTradeFee",
									"nameLocation": "57882:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "_newTradeFee",
												"nameLocation": "57899:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "57894:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "57894:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57893:19:0"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57930:0:0"
									},
									"scope": 3839,
									"src": "57873:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3156,
										"nodeType": "Block",
										"src": "58079:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58117:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58121:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58117:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3152,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "58129:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3153,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "58137:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3149,
														"name": "getUserTokensAtSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3227,
														"src": "58097:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address,uint256,uint256) view returns (struct Marketplace.SelledNFT memory[] memory)"
														}
													},
													"id": 3154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58097:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 3148,
												"id": 3155,
												"nodeType": "Return",
												"src": "58090:53:0"
											}
										]
									},
									"functionSelector": "cb4ca919",
									"id": 3157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTokensAtSale",
									"nameLocation": "57990:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "58016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "58008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "58032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "58024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58007:31:0"
									},
									"returnParameters": {
										"id": 3148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "58059:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3145,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3144,
															"name": "SelledNFT",
															"nameLocations": [
																"58059:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "58059:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "58059:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 3146,
													"nodeType": "ArrayTypeName",
													"src": "58059:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58058:20:0"
									},
									"scope": 3839,
									"src": "57981:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3226,
										"nodeType": "Block",
										"src": "58301:425:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3170,
															"name": "_userTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "58316:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3172,
														"indexExpression": {
															"id": 3171,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3159,
															"src": "58333:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "58316:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58343:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58316:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3223,
												"nodeType": "IfStatement",
												"src": "58312:386:0",
												"trueBody": {
													"id": 3222,
													"nodeType": "Block",
													"src": "58346:352:0",
													"statements": [
														{
															"expression": {
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3175,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "58361:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 3180,
																				"name": "_userTokensCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2463,
																				"src": "58383:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3182,
																			"indexExpression": {
																				"id": 3181,
																				"name": "seller",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3159,
																				"src": "58400:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "58383:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "58367:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 3177,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 3176,
																					"name": "SelledNFT",
																					"nameLocations": [
																						"58371:9:0"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2426,
																					"src": "58371:9:0"
																				},
																				"referencedDeclaration": 2426,
																				"src": "58371:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																					"typeString": "struct Marketplace.SelledNFT"
																				}
																			},
																			"id": 3178,
																			"nodeType": "ArrayTypeName",
																			"src": "58371:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
																				"typeString": "struct Marketplace.SelledNFT[]"
																			}
																		}
																	},
																	"id": 3183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "58367:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"src": "58361:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory[] memory"
																}
															},
															"id": 3185,
															"nodeType": "ExpressionStatement",
															"src": "58361:47:0"
														},
														{
															"assignments": [
																3187
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3187,
																	"mutability": "mutable",
																	"name": "counter",
																	"nameLocation": "58431:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3222,
																	"src": "58423:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3186,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "58423:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3189,
															"initialValue": {
																"hexValue": "30",
																"id": 3188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58441:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "58423:19:0"
														},
														{
															"body": {
																"id": 3220,
																"nodeType": "Block",
																"src": "58508:179:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 3206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3201,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "58531:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 3203,
																					"indexExpression": {
																						"id": 3202,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3191,
																						"src": "58545:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "58531:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 3204,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "58548:6:0",
																				"memberName": "seller",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2419,
																				"src": "58531:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3205,
																				"name": "seller",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3159,
																				"src": "58558:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "58531:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3219,
																		"nodeType": "IfStatement",
																		"src": "58527:145:0",
																		"trueBody": {
																			"id": 3218,
																			"nodeType": "Block",
																			"src": "58566:106:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 3213,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3207,
																								"name": "ret",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3168,
																								"src": "58589:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Marketplace.SelledNFT memory[] memory"
																								}
																							},
																							"id": 3209,
																							"indexExpression": {
																								"id": 3208,
																								"name": "counter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3187,
																								"src": "58593:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "58589:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																								"typeString": "struct Marketplace.SelledNFT memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 3210,
																								"name": "_marketTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2455,
																								"src": "58604:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																									"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																								}
																							},
																							"id": 3212,
																							"indexExpression": {
																								"id": 3211,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3191,
																								"src": "58618:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "58604:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref"
																							}
																						},
																						"src": "58589:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																							"typeString": "struct Marketplace.SelledNFT memory"
																						}
																					},
																					"id": 3214,
																					"nodeType": "ExpressionStatement",
																					"src": "58589:31:0"
																				},
																				{
																					"expression": {
																						"id": 3216,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "58643:9:0",
																						"subExpression": {
																							"id": 3215,
																							"name": "counter",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3187,
																							"src": "58643:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3217,
																					"nodeType": "ExpressionStatement",
																					"src": "58643:9:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3194,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3191,
																	"src": "58477:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 3195,
																		"name": "_marketTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2455,
																		"src": "58481:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																		}
																	},
																	"id": 3196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "58495:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "58481:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "58477:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3221,
															"initializationExpression": {
																"assignments": [
																	3191
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3191,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "58470:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 3221,
																		"src": "58462:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3190,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "58462:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3193,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58474:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "58462:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 3199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "58503:3:0",
																	"subExpression": {
																		"id": 3198,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3191,
																		"src": "58503:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3200,
																"nodeType": "ExpressionStatement",
																"src": "58503:3:0"
															},
															"nodeType": "ForStatement",
															"src": "58457:230:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3224,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3168,
													"src": "58715:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 3169,
												"id": 3225,
												"nodeType": "Return",
												"src": "58708:10:0"
											}
										]
									},
									"functionSelector": "2ca38df5",
									"id": 3227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTokensAtSale",
									"nameLocation": "58166:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "58194:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "58186:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3161,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "58210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "58202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "58226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "58218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58185:47:0"
									},
									"returnParameters": {
										"id": 3169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3168,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "58291:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "58272:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3166,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3165,
															"name": "SelledNFT",
															"nameLocations": [
																"58272:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "58272:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "58272:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 3167,
													"nodeType": "ArrayTypeName",
													"src": "58272:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58271:24:0"
									},
									"scope": 3839,
									"src": "58157:569:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3235,
										"nodeType": "Block",
										"src": "58796:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3232,
														"name": "_marketTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "58814:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
														}
													},
													"id": 3233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "58828:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "58814:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3231,
												"id": 3234,
												"nodeType": "Return",
												"src": "58807:27:0"
											}
										]
									},
									"functionSelector": "c8f77899",
									"id": 3236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensAtSaleCount",
									"nameLocation": "58743:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58763:2:0"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3236,
												"src": "58787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58786:9:0"
									},
									"scope": 3839,
									"src": "58734:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3249,
										"nodeType": "Block",
										"src": "58945:39:0",
										"statements": [
											{
												"expression": {
													"id": 3247,
													"name": "_marketTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2455,
													"src": "58963:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
														"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 3246,
												"id": 3248,
												"nodeType": "Return",
												"src": "58956:20:0"
											}
										]
									},
									"functionSelector": "5b87f0f2",
									"id": 3250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensAtSale",
									"nameLocation": "58857:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "58881:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3250,
												"src": "58873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "58896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3250,
												"src": "58888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58872:31:0"
									},
									"returnParameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3250,
												"src": "58925:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3243,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3242,
															"name": "SelledNFT",
															"nameLocations": [
																"58925:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "58925:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "58925:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 3244,
													"nodeType": "ArrayTypeName",
													"src": "58925:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58924:20:0"
									},
									"scope": 3839,
									"src": "58848:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3319,
										"nodeType": "Block",
										"src": "59121:453:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3263,
															"name": "_collectionTokensCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "59136:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3265,
														"indexExpression": {
															"id": 3264,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "59159:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "59136:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59173:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "59136:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3316,
												"nodeType": "IfStatement",
												"src": "59132:414:0",
												"trueBody": {
													"id": 3315,
													"nodeType": "Block",
													"src": "59176:370:0",
													"statements": [
														{
															"expression": {
																"id": 3277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3268,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3261,
																	"src": "59191:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 3273,
																				"name": "_collectionTokensCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2459,
																				"src": "59213:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3275,
																			"indexExpression": {
																				"id": 3274,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3252,
																				"src": "59236:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "59213:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "59197:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 3270,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 3269,
																					"name": "SelledNFT",
																					"nameLocations": [
																						"59201:9:0"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2426,
																					"src": "59201:9:0"
																				},
																				"referencedDeclaration": 2426,
																				"src": "59201:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																					"typeString": "struct Marketplace.SelledNFT"
																				}
																			},
																			"id": 3271,
																			"nodeType": "ArrayTypeName",
																			"src": "59201:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
																				"typeString": "struct Marketplace.SelledNFT[]"
																			}
																		}
																	},
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "59197:51:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory[] memory"
																	}
																},
																"src": "59191:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory[] memory"
																}
															},
															"id": 3278,
															"nodeType": "ExpressionStatement",
															"src": "59191:57:0"
														},
														{
															"assignments": [
																3280
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3280,
																	"mutability": "mutable",
																	"name": "counter",
																	"nameLocation": "59271:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3315,
																	"src": "59263:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3279,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "59263:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3282,
															"initialValue": {
																"hexValue": "30",
																"id": 3281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59281:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "59263:19:0"
														},
														{
															"body": {
																"id": 3313,
																"nodeType": "Block",
																"src": "59348:187:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 3299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3294,
																						"name": "_marketTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2455,
																						"src": "59371:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																						}
																					},
																					"id": 3296,
																					"indexExpression": {
																						"id": 3295,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3284,
																						"src": "59385:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "59371:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																						"typeString": "struct Marketplace.SelledNFT storage ref"
																					}
																				},
																				"id": 3297,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "59388:10:0",
																				"memberName": "collection",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2415,
																				"src": "59371:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3298,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3252,
																				"src": "59402:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "59371:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3312,
																		"nodeType": "IfStatement",
																		"src": "59367:153:0",
																		"trueBody": {
																			"id": 3311,
																			"nodeType": "Block",
																			"src": "59414:106:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 3306,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3300,
																								"name": "ret",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3261,
																								"src": "59437:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Marketplace.SelledNFT memory[] memory"
																								}
																							},
																							"id": 3302,
																							"indexExpression": {
																								"id": 3301,
																								"name": "counter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3280,
																								"src": "59441:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "59437:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																								"typeString": "struct Marketplace.SelledNFT memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 3303,
																								"name": "_marketTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2455,
																								"src": "59452:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																									"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																								}
																							},
																							"id": 3305,
																							"indexExpression": {
																								"id": 3304,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3284,
																								"src": "59466:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "59452:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SelledNFT_$2426_storage",
																								"typeString": "struct Marketplace.SelledNFT storage ref"
																							}
																						},
																						"src": "59437:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																							"typeString": "struct Marketplace.SelledNFT memory"
																						}
																					},
																					"id": 3307,
																					"nodeType": "ExpressionStatement",
																					"src": "59437:31:0"
																				},
																				{
																					"expression": {
																						"id": 3309,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "59491:9:0",
																						"subExpression": {
																							"id": 3308,
																							"name": "counter",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3280,
																							"src": "59491:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3310,
																					"nodeType": "ExpressionStatement",
																					"src": "59491:9:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3287,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3284,
																	"src": "59317:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 3288,
																		"name": "_marketTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2455,
																		"src": "59321:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref[] storage ref"
																		}
																	},
																	"id": 3289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59335:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "59321:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "59317:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3314,
															"initializationExpression": {
																"assignments": [
																	3284
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3284,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "59310:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 3314,
																		"src": "59302:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3283,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "59302:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3286,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "59314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "59302:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 3292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "59343:3:0",
																	"subExpression": {
																		"id": 3291,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3284,
																		"src": "59343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3293,
																"nodeType": "ExpressionStatement",
																"src": "59343:3:0"
															},
															"nodeType": "ForStatement",
															"src": "59297:238:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3317,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3261,
													"src": "59563:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 3262,
												"id": 3318,
												"nodeType": "Return",
												"src": "59556:10:0"
											}
										]
									},
									"functionSelector": "b7b7b8ff",
									"id": 3320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectionTokensAtSale",
									"nameLocation": "58999:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3252,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "59033:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "59025:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "59053:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "59045:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3256,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "59069:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "59061:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59024:51:0"
									},
									"returnParameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3261,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "59116:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "59097:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3259,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3258,
															"name": "SelledNFT",
															"nameLocations": [
																"59097:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2426,
															"src": "59097:9:0"
														},
														"referencedDeclaration": 2426,
														"src": "59097:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 3260,
													"nodeType": "ArrayTypeName",
													"src": "59097:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2426_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59096:24:0"
									},
									"scope": 3839,
									"src": "58990:584:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3509,
										"nodeType": "Block",
										"src": "59683:1625:0",
										"statements": [
											{
												"assignments": [
													3331
												],
												"declarations": [
													{
														"constant": false,
														"id": 3331,
														"mutability": "mutable",
														"name": "lotInfo",
														"nameLocation": "59711:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3509,
														"src": "59694:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3330,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3329,
																"name": "SelledNFT",
																"nameLocations": [
																	"59694:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "59694:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "59694:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3336,
												"initialValue": {
													"arguments": [
														{
															"id": 3333,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3322,
															"src": "59737:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3334,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "59749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3332,
														"name": "marketTokensGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "59721:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_SelledNFT_$2426_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59721:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59694:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3338,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3331,
																	"src": "59776:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3339,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59784:10:0",
																"memberName": "collection",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "59776:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "59806:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "59798:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3340,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "59798:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59798:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "59776:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 3345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59810:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 3337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59768:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59768:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3347,
												"nodeType": "ExpressionStatement",
												"src": "59768:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3349,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3331,
																	"src": "59856:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3350,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59864:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2423,
																"src": "59856:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "59881:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "59873:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3351,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "59873:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59873:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "59856:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
															"id": 3356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59885:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															},
															"value": "This token selled by Native coin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															}
														],
														"id": 3348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59848:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59848:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3358,
												"nodeType": "ExpressionStatement",
												"src": "59848:72:0"
											},
											{
												"assignments": [
													3361
												],
												"declarations": [
													{
														"constant": false,
														"id": 3361,
														"mutability": "mutable",
														"name": "payToken",
														"nameLocation": "59940:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 3509,
														"src": "59933:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 3360,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3359,
																"name": "IERC20",
																"nameLocations": [
																	"59933:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "59933:6:0"
															},
															"referencedDeclaration": 517,
															"src": "59933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3366,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3363,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "59958:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3364,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59966:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2423,
															"src": "59958:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3362,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "59951:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 3365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59951:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59933:39:0"
											},
											{
												"assignments": [
													3368
												],
												"declarations": [
													{
														"constant": false,
														"id": 3368,
														"mutability": "mutable",
														"name": "buyerBalance",
														"nameLocation": "59991:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3509,
														"src": "59983:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "59983:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3374,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "60025:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60029:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "60025:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3369,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3361,
															"src": "60006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60015:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "60006:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60006:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59983:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3376,
																"name": "buyerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3368,
																"src": "60055:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3377,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3331,
																	"src": "60071:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3378,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60079:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2421,
																"src": "60071:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "60055:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e20796f75722062616c616e636520746f20706179",
															"id": 3380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60086:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															},
															"value": "You do not have enough tokens on your balance to pay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															}
														],
														"id": 3375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60047:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3382,
												"nodeType": "ExpressionStatement",
												"src": "60047:94:0"
											},
											{
												"assignments": [
													3384
												],
												"declarations": [
													{
														"constant": false,
														"id": 3384,
														"mutability": "mutable",
														"name": "buyerAllowance",
														"nameLocation": "60160:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3509,
														"src": "60152:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3394,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "60196:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60200:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "60196:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3391,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "60216:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60208:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3389,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60208:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60208:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3385,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3361,
															"src": "60177:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60186:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "60177:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 3393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60177:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60152:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3396,
																"name": "buyerAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3384,
																"src": "60241:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3397,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3331,
																	"src": "60259:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3398,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60267:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2421,
																"src": "60259:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "60241:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e747261637420746f2073656e642074686520707572636861736520616d6f756e74",
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60274:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															},
															"value": "You did not allow the contract to send the purchase amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															}
														],
														"id": 3395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60233:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3402,
												"nodeType": "ExpressionStatement",
												"src": "60233:102:0"
											},
											{
												"assignments": [
													3404
												],
												"declarations": [
													{
														"constant": false,
														"id": 3404,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "60366:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3509,
														"src": "60358:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3407,
												"initialValue": {
													"expression": {
														"id": 3405,
														"name": "lotInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3331,
														"src": "60375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT memory"
														}
													},
													"id": 3406,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "60383:5:0",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2421,
													"src": "60375:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60358:30:0"
											},
											{
												"assignments": [
													3409
												],
												"declarations": [
													{
														"constant": false,
														"id": 3409,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "60407:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3509,
														"src": "60399:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3419,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3414,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3404,
																	"src": "60445:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 3415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "60453:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 3412,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "60432:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 3413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60441:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "60432:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60432:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3417,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "60459:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3410,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "60419:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60428:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "60419:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60419:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60399:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3420,
															"name": "lotInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "60484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														},
														"id": 3421,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60492:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2419,
														"src": "60484:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3422,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "60502:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60502:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60484:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3429,
												"nodeType": "IfStatement",
												"src": "60480:44:0",
												"trueBody": {
													"expression": {
														"id": 3427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3425,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3409,
															"src": "60511:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60523:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "60511:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3428,
													"nodeType": "ExpressionStatement",
													"src": "60511:13:0"
												}
											},
											{
												"assignments": [
													3431
												],
												"declarations": [
													{
														"constant": false,
														"id": 3431,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "60543:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3509,
														"src": "60535:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60535:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3437,
												"initialValue": {
													"arguments": [
														{
															"id": 3434,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3404,
															"src": "60572:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3435,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3409,
															"src": "60580:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3432,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "60559:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60568:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "60559:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60559:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60535:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3443,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "60651:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60655:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "60651:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60643:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60643:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60643:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3448,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3331,
																		"src": "60685:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60693:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2419,
																	"src": "60685:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60677:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60677:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60677:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3451,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3431,
															"src": "60715:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3438,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3361,
															"src": "60603:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60612:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 218,
														"src": "60603:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 3452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60603:136:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3453,
												"nodeType": "ExpressionStatement",
												"src": "60603:136:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3454,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3409,
														"src": "60754:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60766:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "60754:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3473,
												"nodeType": "IfStatement",
												"src": "60750:192:0",
												"trueBody": {
													"id": 3472,
													"nodeType": "Block",
													"src": "60769:173:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 3462,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "60836:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "60840:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "60836:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "60828:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3460,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "60828:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60828:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3467,
																				"name": "_feeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "60874:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "60866:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3465,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "60866:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60866:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3469,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3409,
																		"src": "60906:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3457,
																		"name": "payToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "60784:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60793:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "60784:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 3470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60784:146:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3471,
															"nodeType": "ExpressionStatement",
															"src": "60784:146:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3481,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "61001:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60993:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60993:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "61008:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61012:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "61008:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3485,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "61020:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61028:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "61020:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3475,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3331,
																		"src": "60960:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3476,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60968:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "60960:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3474,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "60952:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60952:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60980:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "60952:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60952:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3488,
												"nodeType": "ExpressionStatement",
												"src": "60952:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3490,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3322,
															"src": "61064:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3491,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "61076:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3489,
														"name": "_marketTokensDel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2832,
														"src": "61047:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61047:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3493,
												"nodeType": "ExpressionStatement",
												"src": "61047:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3495,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "61129:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3496,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61137:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "61129:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3497,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "61159:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61163:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "61159:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3499,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "61185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3500,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61193:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "61185:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3501,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "61218:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3502,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61226:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "61218:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3503,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "61248:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3504,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61256:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2423,
															"src": "61248:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3505,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "61276:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3506,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61284:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2421,
															"src": "61276:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3494,
														"name": "BuyWithERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "61102:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,address,uint256)"
														}
													},
													"id": 3507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61102:198:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3508,
												"nodeType": "EmitStatement",
												"src": "61097:203:0"
											}
										]
									},
									"functionSelector": "2b205d14",
									"id": 3510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3326,
												"name": "whenNotPaused",
												"nameLocations": [
													"59664:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "59664:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "59664:13:0"
										}
									],
									"name": "buyNFTbyERC20",
									"nameLocation": "59591:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "59613:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "59605:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59630:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "59625:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "59625:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59604:34:0"
									},
									"returnParameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59683:0:0"
									},
									"scope": 3839,
									"src": "59582:1726:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3648,
										"nodeType": "Block",
										"src": "61432:1068:0",
										"statements": [
											{
												"assignments": [
													3521
												],
												"declarations": [
													{
														"constant": false,
														"id": 3521,
														"mutability": "mutable",
														"name": "lotInfo",
														"nameLocation": "61460:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3648,
														"src": "61443:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3520,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3519,
																"name": "SelledNFT",
																"nameLocations": [
																	"61443:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "61443:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "61443:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3526,
												"initialValue": {
													"arguments": [
														{
															"id": 3523,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3512,
															"src": "61486:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3514,
															"src": "61498:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3522,
														"name": "marketTokensGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "61470:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_SelledNFT_$2426_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61470:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61443:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3528,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3521,
																	"src": "61526:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3529,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "61534:10:0",
																"memberName": "collection",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "61526:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "61556:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "61548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "61548:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61548:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "61526:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 3535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "61560:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 3527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "61517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61517:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3537,
												"nodeType": "ExpressionStatement",
												"src": "61517:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3539,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "61632:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "61636:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "61632:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3541,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3521,
																	"src": "61645:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3542,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "61653:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2421,
																"src": "61645:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "61632:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f722074686973206974656d",
															"id": 3544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "61660:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															},
															"value": "You have not paid enough for this item"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															}
														],
														"id": 3538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "61624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61624:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3546,
												"nodeType": "ExpressionStatement",
												"src": "61624:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3548,
																	"name": "lotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3521,
																	"src": "61764:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3549,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "61772:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2423,
																"src": "61764:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "61789:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "61781:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3550,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "61781:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61781:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "61764:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
															"id": 3555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "61793:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															},
															"value": "This token selled by ERC20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															}
														],
														"id": 3547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "61756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61756:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3557,
												"nodeType": "ExpressionStatement",
												"src": "61756:66:0"
											},
											{
												"assignments": [
													3559
												],
												"declarations": [
													{
														"constant": false,
														"id": 3559,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "61851:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3648,
														"src": "61843:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "61843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3562,
												"initialValue": {
													"expression": {
														"id": 3560,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "61860:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "61864:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "61860:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61843:26:0"
											},
											{
												"assignments": [
													3564
												],
												"declarations": [
													{
														"constant": false,
														"id": 3564,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "61888:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3648,
														"src": "61880:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "61880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3574,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3569,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3559,
																	"src": "61926:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 3570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "61934:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 3567,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "61913:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 3568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "61922:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "61913:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61913:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3572,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "61940:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3565,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "61900:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "61909:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "61900:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61900:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61880:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3575,
															"name": "lotInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3521,
															"src": "61965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														},
														"id": 3576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "61973:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2419,
														"src": "61965:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3577,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "61983:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61983:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61965:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3584,
												"nodeType": "IfStatement",
												"src": "61961:44:0",
												"trueBody": {
													"expression": {
														"id": 3582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3580,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3564,
															"src": "61992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "62004:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "61992:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3583,
													"nodeType": "ExpressionStatement",
													"src": "61992:13:0"
												}
											},
											{
												"assignments": [
													3586
												],
												"declarations": [
													{
														"constant": false,
														"id": 3586,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "62024:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3648,
														"src": "62016:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "62016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3592,
												"initialValue": {
													"arguments": [
														{
															"id": 3589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3559,
															"src": "62053:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3590,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3564,
															"src": "62061:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3587,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "62040:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62049:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "62040:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62040:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62016:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3599,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3586,
															"src": "62117:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3595,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3521,
																		"src": "62092:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3596,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "62100:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2419,
																	"src": "62092:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "62084:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3593,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "62084:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "62084:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62108:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "62084:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62084:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3601,
												"nodeType": "ExpressionStatement",
												"src": "62084:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3602,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3564,
														"src": "62146:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "62158:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "62146:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3614,
												"nodeType": "IfStatement",
												"src": "62142:87:0",
												"trueBody": {
													"id": 3613,
													"nodeType": "Block",
													"src": "62161:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3610,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3564,
																		"src": "62207:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3607,
																				"name": "_feeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "62184:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "62176:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 3605,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "62176:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "62176:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 3609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "62198:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "62176:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "62176:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3612,
															"nodeType": "ExpressionStatement",
															"src": "62176:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3622,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "62298:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "62290:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3620,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "62290:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "62290:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3624,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "62305:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62309:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "62305:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3626,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3521,
																"src": "62317:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3627,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62325:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "62317:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3616,
																		"name": "lotInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3521,
																		"src": "62257:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3617,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "62265:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "62257:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3615,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "62249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "62249:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62277:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "62249:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62249:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3629,
												"nodeType": "ExpressionStatement",
												"src": "62249:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3631,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3512,
															"src": "62361:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3632,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3514,
															"src": "62373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3630,
														"name": "_marketTokensDel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2832,
														"src": "62344:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62344:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3634,
												"nodeType": "ExpressionStatement",
												"src": "62344:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3636,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3521,
																"src": "62403:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3637,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62411:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "62403:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3638,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "62419:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62423:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "62419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3640,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3521,
																"src": "62431:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3641,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62439:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "62431:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3642,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3521,
																"src": "62451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3643,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62459:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "62451:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3644,
																"name": "lotInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3521,
																"src": "62468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3645,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "62476:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2421,
															"src": "62468:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3635,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "62399:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 3646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62399:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3647,
												"nodeType": "EmitStatement",
												"src": "62394:88:0"
											}
										]
									},
									"functionSelector": "a82ba76f",
									"id": 3649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3516,
												"name": "whenNotPaused",
												"nameLocations": [
													"61413:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "61413:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61413:13:0"
										}
									],
									"name": "buyNFT",
									"nameLocation": "61327:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3512,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "61342:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3649,
												"src": "61334:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3514,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "61362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3649,
												"src": "61354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61333:37:0"
									},
									"returnParameters": {
										"id": 3518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61432:0:0"
									},
									"scope": 3839,
									"src": "61318:1182:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3763,
										"nodeType": "Block",
										"src": "62681:1119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3663,
																"name": "_allowedCollections",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "62751:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3665,
															"indexExpression": {
																"id": 3664,
																"name": "collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3651,
																"src": "62771:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "62751:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564204e465420636f6c6c656374696f6e",
															"id": 3666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "62797:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244",
																"typeString": "literal_string \"Not allowed NFT collection\""
															},
															"value": "Not allowed NFT collection"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ff6d0ecca244e49dbf358955debb2d1496e55de43033fc8e987b1e2faeac244",
																"typeString": "literal_string \"Not allowed NFT collection\""
															}
														],
														"id": 3662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "62729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62729:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3668,
												"nodeType": "ExpressionStatement",
												"src": "62729:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3674,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3653,
																		"src": "62921:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3671,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3651,
																				"src": "62901:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3670,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "62893:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 3672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "62893:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "62913:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 571,
																	"src": "62893:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "62893:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3676,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "62934:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "62938:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "62934:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "62893:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 3679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "62959:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 3669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "62871:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62871:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3681,
												"nodeType": "ExpressionStatement",
												"src": "62871:126:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3683,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3655,
																"src": "63016:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "63024:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "63016:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 3686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "63027:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 3682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "63008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63008:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3688,
												"nodeType": "ExpressionStatement",
												"src": "63008:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3689,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3657,
														"src": "63076:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "63094:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "63086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "63086:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "63086:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "63076:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3705,
												"nodeType": "IfStatement",
												"src": "63072:172:0",
												"trueBody": {
													"id": 3704,
													"nodeType": "Block",
													"src": "63098:146:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3697,
																					"name": "_erc20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3657,
																					"src": "63168:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3696,
																				"name": "isAllowedERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3049,
																				"src": "63153:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																					"typeString": "function (address) view returns (bool)"
																				}
																			},
																			"id": 3698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "63153:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 3699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "63179:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "63153:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164696e672063757272656e6379",
																		"id": 3701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "63185:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		},
																		"value": "This ERC20 not allowed as a trading currency"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		}
																	],
																	"id": 3695,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "63145:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "63145:87:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3703,
															"nodeType": "ExpressionStatement",
															"src": "63145:87:0"
														}
													]
												}
											},
											{
												"assignments": [
													3708
												],
												"declarations": [
													{
														"constant": false,
														"id": 3708,
														"mutability": "mutable",
														"name": "newLot",
														"nameLocation": "63273:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3763,
														"src": "63256:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3707,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3706,
																"name": "SelledNFT",
																"nameLocations": [
																	"63256:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "63256:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "63256:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3719,
												"initialValue": {
													"arguments": [
														{
															"id": 3710,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3651,
															"src": "63306:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3711,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3653,
															"src": "63331:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "63354:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "63358:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "63354:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3714,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3655,
															"src": "63379:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3715,
															"name": "_erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3657,
															"src": "63399:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3716,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "63420:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "63426:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "63420:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3709,
														"name": "SelledNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "63282:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2426_storage_ptr_$",
															"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
														}
													},
													"id": 3718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63282:164:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "63256:190:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3724,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "63490:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "63494:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "63490:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3728,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "63510:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "63502:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3726,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "63502:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "63502:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3730,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3653,
															"src": "63517:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3721,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3651,
																	"src": "63465:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3720,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "63457:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "63457:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "63477:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "63457:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63457:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3732,
												"nodeType": "ExpressionStatement",
												"src": "63457:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3734,
															"name": "newLot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3708,
															"src": "63554:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																"typeString": "struct Marketplace.SelledNFT memory"
															}
														],
														"id": 3733,
														"name": "_marketTokensAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2697,
														"src": "63537:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SelledNFT_$2426_memory_ptr_$returns$__$",
															"typeString": "function (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63537:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3736,
												"nodeType": "ExpressionStatement",
												"src": "63537:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3737,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3657,
														"src": "63578:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "63596:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "63588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "63588:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "63588:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "63578:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3761,
													"nodeType": "Block",
													"src": "63708:85:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3754,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "63741:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "63745:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "63741:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3756,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3651,
																		"src": "63753:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3757,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3653,
																		"src": "63765:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3758,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3655,
																		"src": "63775:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3753,
																	"name": "PutUpForSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2379,
																	"src": "63728:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256)"
																	}
																},
																"id": 3759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "63728:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3760,
															"nodeType": "EmitStatement",
															"src": "63723:58:0"
														}
													]
												},
												"id": 3762,
												"nodeType": "IfStatement",
												"src": "63574:219:0",
												"trueBody": {
													"id": 3752,
													"nodeType": "Block",
													"src": "63600:102:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3744,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "63642:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "63646:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "63642:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3746,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3651,
																		"src": "63654:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3747,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3653,
																		"src": "63666:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3748,
																		"name": "_erc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3657,
																		"src": "63676:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3749,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3655,
																		"src": "63684:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3743,
																	"name": "PutUpForSaleWithERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "63620:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,address,uint256)"
																	}
																},
																"id": 3750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "63620:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3751,
															"nodeType": "EmitStatement",
															"src": "63615:75:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "98f748bd",
									"id": 3764,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3659,
												"name": "whenNotPaused",
												"nameLocations": [
													"62662:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "62662:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "62662:13:0"
										}
									],
									"name": "sellNFT",
									"nameLocation": "62517:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3651,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "62543:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3764,
												"src": "62535:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3653,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "62572:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3764,
												"src": "62564:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3655,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "62599:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3764,
												"src": "62591:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3657,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "62623:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3764,
												"src": "62615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62524:112:0"
									},
									"returnParameters": {
										"id": 3661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62681:0:0"
									},
									"scope": 3839,
									"src": "62508:1292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3837,
										"nodeType": "Block",
										"src": "63871:522:0",
										"statements": [
											{
												"assignments": [
													3773
												],
												"declarations": [
													{
														"constant": false,
														"id": 3773,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "63899:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3837,
														"src": "63882:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														},
														"typeName": {
															"id": 3772,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3771,
																"name": "SelledNFT",
																"nameLocations": [
																	"63882:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2426,
																"src": "63882:9:0"
															},
															"referencedDeclaration": 2426,
															"src": "63882:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2426_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3778,
												"initialValue": {
													"arguments": [
														{
															"id": 3775,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3766,
															"src": "63923:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3776,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3768,
															"src": "63935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3774,
														"name": "marketTokensGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "63907:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_SelledNFT_$2426_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct Marketplace.SelledNFT memory)"
														}
													},
													"id": 3777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63907:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "63882:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3780,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3773,
																	"src": "63963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"id": 3781,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "63969:10:0",
																"memberName": "collection",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "63963:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "63991:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "63983:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3782,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "63983:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "63983:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "63963:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420666f756e646564206174206d61726b6574706c616365",
															"id": 3787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "63995:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595",
																"typeString": "literal_string \"Token not founded at marketplace\""
															},
															"value": "Token not founded at marketplace"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bbd2580fd0254a327f082ce59e1fec6a026d36e1fcecafb49fada7b63f27595",
																"typeString": "literal_string \"Token not founded at marketplace\""
															}
														],
														"id": 3779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "63954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63954:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3789,
												"nodeType": "ExpressionStatement",
												"src": "63954:76:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3790,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "64044:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "64048:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "64044:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3792,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "64058:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "64058:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "64044:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3805,
												"nodeType": "IfStatement",
												"src": "64041:112:0",
												"trueBody": {
													"id": 3804,
													"nodeType": "Block",
													"src": "64067:86:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3796,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "64090:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "64094:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "64090:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 3798,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3773,
																				"src": "64104:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																					"typeString": "struct Marketplace.SelledNFT memory"
																				}
																			},
																			"id": 3799,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "64110:6:0",
																			"memberName": "seller",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2419,
																			"src": "64104:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "64090:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"id": 3801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "64118:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		},
																		"value": "This is not your NFT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		}
																	],
																	"id": 3795,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "64082:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "64082:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3803,
															"nodeType": "ExpressionStatement",
															"src": "64082:59:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3813,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "64210:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3839",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "64202:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3811,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "64202:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "64202:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3815,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "64217:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3816,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "64223:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "64217:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3817,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "64231:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3818,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "64237:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "64231:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3807,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3773,
																		"src": "64171:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory"
																		}
																	},
																	"id": 3808,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "64177:10:0",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "64171:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3806,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "64163:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "64163:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "64189:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "64163:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64163:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3820,
												"nodeType": "ExpressionStatement",
												"src": "64163:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3822,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "64273:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3823,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "64279:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "64273:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3824,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "64290:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3825,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "64296:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "64290:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3821,
														"name": "_marketTokensDel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2832,
														"src": "64256:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64256:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3827,
												"nodeType": "ExpressionStatement",
												"src": "64256:48:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3829,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "64339:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3830,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "64345:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "64339:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3831,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "64353:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3832,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "64359:10:0",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "64353:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3833,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "64371:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2426_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3834,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "64377:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "64371:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3828,
														"name": "WithdrawFromSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "64322:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64322:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3836,
												"nodeType": "EmitStatement",
												"src": "64317:68:0"
											}
										]
									},
									"functionSelector": "da24548a",
									"id": 3838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deSellNFT",
									"nameLocation": "63817:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3766,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "63835:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3838,
												"src": "63827:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3768,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "63855:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3838,
												"src": "63847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63826:37:0"
									},
									"returnParameters": {
										"id": 3770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63871:0:0"
									},
									"scope": 3839,
									"src": "63808:585:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3840,
							"src": "50386:14010:0",
							"usedErrors": []
						}
					],
					"src": "33:64365:0"
				},
				"id": 0
			}
		}
	}
}